{"version":1,"Request":{"Prompt":"Im having trouble while trying to synch the db if we are already using the liteDB for other task, can you help me?","Context":{"VisibleDocuments":[{"Content":"using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Forms;\r\nusing System;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing AForge.Video;\r\nusing AForge.Video.DirectShow;\r\nusing System.Windows.Forms;\r\nusing NPOI.SS.UserModel;\r\nusing NPOI.HSSF.UserModel;\r\nusing NPOI.XSSF.UserModel;\r\nusing Microsoft.Office.Interop.Excel;\r\nusing ZXing;\r\nusing System.IO;\r\nusing System.Runtime.InteropServices;\r\nusing Spire.Barcode;\r\nusing System.Drawing.Printing;\r\nusing System.Drawing.Imaging;\r\nusing System.Data.OleDb;\r\nusing System.Collections;\r\nusing System.Text.RegularExpressions;\r\nusing SimpleWifi;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\nusing System.Net.Mail;\r\nusing System.Net;\r\nusing System.Net.NetworkInformation;\r\nusing System.Threading;\r\nusing System.Management;\r\nusing System.Diagnostics;\r\nusing System.Globalization;\r\nusing System.Text;\r\nusing Font = System.Drawing.Font;\r\nusing System.Security.Permissions;\r\nusing System.Security;\r\nusing ClosedXML.Excel;\r\nusing Excel = Microsoft.Office.Interop.Excel;\r\nusing Microsoft.Office.Interop.Excel;\r\nusing System.Security.AccessControl;\r\nusing System.Security.Principal;\r\nusing System.Reflection;\r\nusing DocumentFormat.OpenXml.Bibliography;\r\nusing uPLibrary.Networking.M2Mqtt;\r\nusing uPLibrary.Networking.M2Mqtt.Messages;\r\nusing ZXing.QrCode.Internal;\r\nusing static System.Windows.Forms.VisualStyles.VisualStyleElement;\r\nusing static System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar;\r\nusing DocumentFormat.OpenXml.Vml.Office;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing Color = System.Drawing.Color;\r\nusing DocumentFormat.OpenXml.Drawing;\r\nusing Path = System.IO.Path;\r\nusing LiteDB;\r\nusing NPOI.SS.Formula.Functions;\r\nusing System.Security.Cryptography;\r\nusing criptoqrcode;\r\nusing DocumentFormat.OpenXml.ExtendedProperties;\r\nusing DocumentFormat.OpenXml.Office2010.Word;\r\nusing System.Net.NetworkInformation;\r\nusing System.Threading.Tasks;\r\nusing DocumentFormat.OpenXml.Vml;\r\nusing System.Collections.Concurrent;\r\n\r\nnamespace criptoqrcode\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n\r\n        delegate void SetTextCallback(string text);\r\n        private QRCodeEncryptor QRCodeEncryptor;\r\n        MqttClient client;\r\n        string clientId;\r\n        string vintequatro;\r\n        string vintedois;\r\n        string vinte;\r\n        string vinteum;\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            PopularCadastro.ParseAndInsertToLiteDB(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n        }\r\n        //internal static password Password = new password();\r\n        static AutoResetEvent reconnectEvent = new AutoResetEvent(false);\r\n        //static S22.Imap.ImapClient client;\r\n        //Form mainFormHandler;\r\n        //Microsoft.Office.Interop.Excel.Application XcelApp = new Microsoft.Office.Interop.Excel.Application();\r\n        private static Wifi wifi;\r\n        public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }\r\n        // public static extern int GetWindowThreadProcessId(int handle, out int processId);\r\n        Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();\r\n        Microsoft.Office.Interop.Excel.Workbook wb;\r\n\r\n        Microsoft.Office.Interop.Excel.Worksheet ws;\r\n        //  Excel.Application app = new Excel.Application();\r\n        Microsoft.Office.Interop.Excel.Workbook pasta;\r\n        Microsoft.Office.Interop.Excel.Worksheet plan;\r\n        Microsoft.Office.Interop.Excel.Application XcelApp = new Microsoft.Office.Interop.Excel.Application();\r\n        StreamReader rdr = null;\r\n\r\n        String[] lMessage1 = { \u0022Favor marcar o local e o nivel de acesso para finalizar o cadastro\u0022, \u0022Check Local and Access level Please\u0022 };\r\n        String[] label_nome = { \u0022N\u00FAmero/Nome\u0022, \u0022Number/Name\u0022 };//onboard People\r\n        String[] label_onboard = { \u0022Pessoas a bordo\u0022, \u0022People Onboard\u0022 };//onboard People\r\n        String[] label_emp = { \u0022Empresa/Trip\u0022, \u0022Company/Crew\u0022 };\r\n        // registration only\r\n        //N\u00FAmero de pessoas a bordo:\r\n        String[] onboard = { \u0022N\u00FAmero de pessoas a bordo:\u0022, \u0022                    Onboard People:\u0022 };\r\n        String[] label_reg = { \u0022Cadastrar\u0022, \u0022Registration\u0022 };\r\n        String[] label_vessel = { \u0022Local\u0022, \u0022Place\u0022 };\r\n        String[] label_porj = { \u0022Projeto\u0022, \u0022Project\u0022 };\r\n        String[] label_Function = { \u0022Fun\u00E7\u00E3o\u0022, \u0022Function\u0022 };\r\n        String[] label_Id = { \u0022Identidade\u0022, \u0022ID number\u0022 };\r\n        String[] label_vaccine1 = { \u0022NR-10\u0022, \u0022NR-10\u0022 };\r\n        String[] label_vaccine2 = { \u0022NR-33\u0022, \u0022NR-33\u0022 };\r\n        String[] label_reforco = { \u0022NR-35\u0022, \u0022NR-35\u0022 };\r\n        String[] label_level = { \u0022Nivel\u0022, \u0022Level\u0022 };\r\n        String[] label_acc = { \u0022Nivel de Acesso\u0022, \u0022Access Level\u0022 };\r\n        String[] label_yellow = { \u0022Amarelo\u0022, \u0022Yellow\u0022 };\r\n        String[] label_green = { \u0022Verde\u0022, \u0022Green\u0022 };\r\n        String[] label_red = { \u0022Vermelho\u0022, \u0022Red\u0022 };\r\n        String[] place1 = { \u0022Conv\u00E9s\u0022, \u0022Main Deck\u0022 };\r\n        String[] place2 = { \u0022Pra\u00E7a de Maquina\u0022, \u0022Engine Roon\u0022 };\r\n        String[] place3 = { \u0022Tijup\u00E1\u0022, \u0022monkey island\u0022 };\r\n        String[] place4 = { \u0022Casario\u0022, \u0022Acomodation Place\u0022 };\r\n        String[] Label_initial = { \u0022Data Inicial\u0022, \u0022Check-in\u0022 };\r\n        String[] Label_final = { \u0022Data Limite \u0022, \u0022Check-out\u0022 };\r\n        String[] Label_Read_QRcode_On = { \u0022Modo ler Qrcode \u0022, \u0022Read QRcode mode\u0022 };\r\n        String[] Label_Read_QRcode_Off = { \u0022Modo Cadastro\u0022, \u0022Registration mode\u0022 };\r\n        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n        String[] Label_close_data = { \u0022Fecha banco de dados:\u0022, \u0022Close DataBase\u0022 };\r\n        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n        String[] Label_Mostrar_checkin = { \u0022Pessoas a bordo:\u0022, \u0022Show Onboard\u0022 };\r\n        String[] Label_fechar = { \u0022Fechar:\u0022, \u0022Exit\u0022 };\r\n        String[] Label_reset = { \u0022Reiniciar:\u0022, \u0022Reset\u0022 };\r\n        String[] Label_cancel = { \u0022Cancelar\u0022, \u0022Cancel\u0022 };\r\n        String[] Label_entrada = { \u0022Entrada\u0022, \u0022Check-in\u0022 };\r\n        String[] Label_saida = { \u0022Saida\u0022, \u0022Check-out\u0022 };\r\n        String[] id_check = { \u0022ESTA IDENTIDADE J\u00C1 EST\u00C1 CADASTRADA\u0022, \u0022THIS ID NUMBER ALREADY EXIST\u0022 };\r\n        String[] Label_reset_project = { \u0022Novo Projeto\u0022, \u0022New Project\u0022 };\r\n        String[] Label_cadastro = { \u0022Cadastro Concluido com sucesso\u0022, \u0022Register concluded with success\u0022 };\r\n        String[] label_cad1 = { \u0022Cadastrados\u0022, \u0022Registed\u0022 };\r\n        String[] Label_53 = { \u0022Cadastro Embarca\u00E7\u00E3o\u0022, \u0022Vessel Register\u0022 };\r\n        String[] bt_41 = { \u0022Sair\u0022, \u0022Exit\u0022 };\r\n        String[] bt_42 = { \u0022Cadastrar\u0022, \u0022Register\u0022 };\r\n        String[] bt_43 = { \u0022Editar\u0022, \u0022Edit\u0022 };\r\n        String[] bt_44 = { \u0022Cadastrar\u0022, \u0022Register\u0022 };\r\n        String[] bt_45 = { \u0022Sair\u0022, \u0022Exit\u0022 };\r\n        String[] bt_regis = { \u0022CADASTRAR\u0022, \u0022REGISTER\u0022 };\r\n        String[] cad_mode = { \u0022Favor selecionar o local antes de colocar em modo cadastro\u0022, \u0022Please select the place option before use register mode\u0022 };\r\n        String[] read_mode = { \u0022Favor selecionar o local antes de colocar em modo ler qrcode\u0022, \u0022Please select the place option before use read mode\u0022 };\r\n        DateTime fdataa;\r\n        DateTime fdatab;\r\n        string _cad;\r\n        string _read;\r\n        string nb;\r\n        Boolean checa_host_ = false;\r\n\r\n        string passall;\r\n        bool libera = false;\r\n        Boolean entrou = false;\r\n        Boolean online_ = false;\r\n        // Print QRcode Create Show DataBase Save Backup Settings Wi-Fi connection Send Qr Code  by E-mail\r\n        //Show Check-in\r\n        int NUM = 0;\r\n        string hostName = System.Net.Dns.GetHostName();\r\n        string _ipstart;\r\n        string _ipstop;\r\n        string MyhostName;\r\n        int tempo = 0;\r\n        string bb;\r\n        string rede10;\r\n        string rede1;\r\n        string rede2;\r\n        string rede3;\r\n        string localname;\r\n        string comboname = \u0022\u0022;\r\n        string qr_generate = \u0022\u0022;\r\n        string data2 = \u0022NOME: CRISTIANO\u0022;\r\n        string number = \u0022Number\u0022;\r\n        string nome = \u0022NOME:\u0022;\r\n        string emp = \u0022COMPANY:\u0022;\r\n        string function = \u0022FUNCTION:\u0022;\r\n        string id = \u0022ID:\u0022;\r\n        string vessel = \u0022VESSEL:\u0022;\r\n        string initial = \u0022START\u0022;\r\n        string final = \u0022END\u0022;\r\n        string input_data = \u0022\u0022;\r\n        string input_hora = \u0022\u0022;\r\n        string output_data = \u0022\u0022;\r\n        string output_hora = \u0022\u0022;\r\n        string email = \u0022\u0022;\r\n        string criterio;\r\n        string path2;\r\n        string path3;\r\n        string[] subs2;\r\n        DateTime fproj;\r\n        int band = 0;\r\n        int confere = 0;\r\n        int teste = 0;\r\n        int resultado = 0;\r\n        int checado = 0;\r\n        int checado2 = 0;\r\n        int zzz = 0;\r\n        int comp = 0;\r\n        int compr = 0;\r\n        int lista2 = 0;\r\n        int lista3_;\r\n        string st;\r\n        int loc = 0;\r\n        int lav = 0;\r\n        bool rec = false;\r\n        int ping_local = 0;\r\n        int count = 2; //Count the number of successful pings\r\n        bool grava_number = false;\r\n        Boolean pega = false;\r\n        String varPalavra = \u0022teste\u0022;\r\n        string path = @\u0022C:\\compartilhamento\\data_base\\2022_02_19.xls\u0022;\r\n        int Linhas = 0;\r\n        string z = \u0022\u0022;\r\n        int inside = 0;\r\n        int s4 = 0;\r\n        int okay = 0;\r\n        int cri = 0;\r\n        int aso_1 = 0;\r\n        string rede = \u0022\u0022;\r\n        int id_1 = 0;\r\n        bool online = false;\r\n        string text1 = \u0022\u0022;\r\n        string text2 = \u0022\u0022;\r\n        string text3 = \u0022\u0022;\r\n        string text4 = \u0022\u0022;\r\n        string text5 = \u0022\u0022;\r\n        string text6 = \u0022\u0022;\r\n        string text7 = \u0022\u0022;\r\n        string text8 = \u0022\u0022;\r\n        string ip;\r\n        string ip1;\r\n        string ip2;\r\n        string ip3;\r\n        string rich5 = \u0022\u0022;\r\n        string rich9 = \u0022\u0022;\r\n        int local1val = 0;\r\n        int local2val = 0;\r\n        int local3val = 0;\r\n        int local4val = 0;\r\n        int levelyellow = 0;\r\n        int levelgreen = 0;\r\n        int levelred = 0;\r\n        String myping2 = \u0022\u0022;\r\n        int p = 0;\r\n        Boolean inout = false;\r\n        int mmm = 0;\r\n        string textbloc;\r\n        string textbloc2;\r\n        int l = 0;\r\n        public string caminhoImagemSalva = null;\r\n        public string caminhoImagemSalva2 = null;\r\n        bool r7 = false;\r\n        bool company_loc = false;\r\n        bool id_exist = false;\r\n        bool ok_but2 = false;\r\n        bool valor_ch = false;\r\n        bool id_onboard = false;\r\n        bool id_onboard2 = false;\r\n        bool cad_change = false;\r\n        bool alter = false;\r\n        bool cad = false;\r\n        bool print_ = false;\r\n        bool lido = false;\r\n        bool hasDb = false;\r\n        FilterInfoCollection filterInfoCollection;\r\n        VideoCaptureDevice videoCaptureDevice;\r\n        Bitmap bmp;\r\n        // DateTime flogo3;\r\n\r\n        DateTime flogo3 = DateTime.Now;\r\n\r\n        int tr = 0;\r\n\r\n\r\n\r\n        public static string GetWIFISignalStrength()\r\n        {\r\n            try\r\n            {\r\n                ObjectQuery query = new ObjectQuery(\u0022SELECT * FROM MSNdis_80211_ReceivedSignalStrength Where active = true\u0022);\r\n                ManagementScope scope = new ManagementScope(\u0022root\\\\wmi\u0022);\r\n                ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);\r\n                string result = \u0022\u0022;\r\n                foreach (ManagementObject obj in searcher.Get())\r\n                {\r\n                    if ((bool)obj[\u0022Active\u0022] == true)\r\n                    {\r\n                        result \u002B= (string)obj[\u0022Ndis80211ReceivedSignalStrength\u0022].ToString() \u002B Environment.NewLine;\r\n                    }\r\n                }\r\n                if (result == \u0022\u0022)\r\n                {\r\n                    result = \u0022No active WI-FI adapters found!\u0022;\r\n                }\r\n\r\n                return result.Trim();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message, \u0022Search Error\u0022, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n                return string.Empty;\r\n            }\r\n        }\r\n\r\n        private static void CopyFilesRecursively(string sourcePath, string targetPath)\r\n        {\r\n            //Now Create all of the directories\r\n            foreach (string dirPath in Directory.GetDirectories(sourcePath, \u0022*\u0022, SearchOption.AllDirectories))\r\n            {\r\n                Directory.CreateDirectory(dirPath.Replace(sourcePath, targetPath));\r\n            }\r\n\r\n            //Copy all the files \u0026 Replaces any files with the same name\r\n            foreach (string newPath in Directory.GetFiles(sourcePath, \u0022*.*\u0022, SearchOption.AllDirectories))\r\n            {\r\n                File.Copy(newPath, newPath.Replace(sourcePath, targetPath), true);\r\n            }\r\n        }\r\n        // Move a file into another file, delete the original, and create a backup of the replaced file.\r\n        public static void ReplaceFile(string fileToMoveAndDelete, string fileToReplace, string backupOfFileToReplace)\r\n        {\r\n            // Create a new FileInfo object.\r\n            FileInfo fInfo = new FileInfo(fileToMoveAndDelete);\r\n\r\n            // replace the file.\r\n            fInfo.Replace(fileToReplace, backupOfFileToReplace, true);\r\n        }\r\n\r\n\r\n        public static void copyAll(string SourcePath, string DestinationPath)\r\n        {\r\n            try\r\n            {\r\n                //Now Create all of the directories\r\n                foreach (string dirPath in Directory.GetDirectories(SourcePath, \u0022*\u0022, SearchOption.AllDirectories))\r\n                    Directory.CreateDirectory(Path.Combine(DestinationPath, dirPath.Remove(0, SourcePath.Length)));\r\n\r\n                //Copy all the files \u0026 Replaces any files with the same name\r\n                foreach (string newPath in Directory.GetFiles(SourcePath, \u0022*.*\u0022, SearchOption.AllDirectories))\r\n                    File.Copy(newPath, Path.Combine(DestinationPath, newPath.Remove(0, SourcePath.Length)), true);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void clearFolder(string FolderName)\r\n        {\r\n            DirectoryInfo dir = new DirectoryInfo(FolderName);\r\n\r\n            foreach (FileInfo fi in dir.GetFiles())\r\n            {\r\n                fi.Delete();\r\n            }\r\n\r\n            foreach (DirectoryInfo di in dir.GetDirectories())\r\n            {\r\n                clearFolder(di.FullName);\r\n                di.Delete();\r\n            }\r\n        }\r\n        int vas = 0;\r\n        int valor = 0;\r\n\r\n\r\n\r\n        private void atualiza_received()\r\n        {\r\n\r\n\r\n\r\n\r\n\r\n\r\n            p = 0;\r\n\r\n            vas = 0;\r\n            l = 1;\r\n            try\r\n            {\r\n\r\n\r\n                DateTime fvessel = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                DateTime fvesse2 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022\\\\data_txt\\\\PROJETO.txt\u0022);\r\n                if (fvessel \u003E fvesse2)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n                if (fvessel \u003C fvesse2)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    // copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n\r\n                    copyAll(rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(p.ToString());\r\n                DateTime flogo = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022);\r\n                DateTime flogo1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                if (flogo \u003E flogo1)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(p.ToString());\r\n                DateTime fpicture = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                DateTime fpicture1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_new_picture\\\\\u0022);\r\n                if (fpicture \u003E fpicture1)\r\n                {\r\n\r\n\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, rede1.Trim() \u002B \u0022data_picture\\\\\u0022);\r\n                    clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n                //  MessageBox.Show(\u0022data_picture ok\u0022);\r\n\r\n\r\n\r\n                DateTime ftime = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim());\r\n                DateTime ftime1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim());\r\n\r\n\r\n                //MessageBox.Show(ftime2.ToString());\r\n                if (ftime \u003E ftime1)\r\n                {\r\n                    // MessageBox.Show(ftime.ToString());\r\n                    // File.Copy(rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim() \u002B \u0022.backup\u0022, true);\r\n                    //  File.Delete(rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim());\r\n                    // File.Copy(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), true);\r\n\r\n                }\r\n\r\n                if (ftime1 \u003E ftime)\r\n                {\r\n\r\n                    // File.Copy(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), @\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim() \u002B \u0022.backup\u0022, true);\r\n                    //  File.Delete(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim());\r\n                    File.Copy(rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), @\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), true);\r\n\r\n                }\r\n\r\n\r\n\r\n                ///  MessageBox.Show(\u0022data_base ok\u0022);\r\n\r\n                ////////////////////////////////////////\r\n                ///\r\n\r\n\r\n                DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                if (vas == 0)\r\n                {\r\n\r\n                    DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n\r\n                    if (fdata \u003E f1data)\r\n                    {\r\n                        // vas = 1;\r\n                        // File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, true);\r\n                        // ler_linha();\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n                if (vas == 0)\r\n                {\r\n\r\n                    // DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                    DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n                    if (f1data \u003E fdata)\r\n                    {\r\n                        vas = 1;\r\n                        File.Copy(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n                        //  ler_linha();\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n\r\n                DateTime fdata1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n\r\n                if (fdata0 \u003E fdata1)\r\n                {\r\n\r\n                    File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, true);\r\n                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                    label3.Text = count.ToString().Trim();\r\n                }\r\n\r\n\r\n                if (fdata1 \u003E fdata0)\r\n                {\r\n                    //   File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    File.Copy(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true);\r\n                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                    label3.Text = count.ToString().Trim();\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(\u0022data2.txt ok\u0022);\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(ex.Message);\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n                // valor\u002B\u002B;\r\n            }\r\n\r\n            finally\r\n            {\r\n\r\n\r\n\r\n                //  atualiza_compartilhamento();\r\n            }\r\n            l = 0;\r\n            // ler_linha();\r\n\r\n            //  }\r\n\r\n\r\n            timer8.Start();\r\n        }\r\n\r\n        private void atualiza_compartilhamento()\r\n        {\r\n            // string rede2 = rede1.Replace(\u0022.lan\u0022, \u0022\u0022);\r\n            synch_db(rede1.Trim());\r\n            /*\r\n                        using (new NetworkConnection(rede2, new NetworkCredential(\u0022Cristiano Eng\u0022, \u0022469618106086\u0022)))\r\n                        {\r\n\r\n                            // Console.WriteLine($\u0022M\u00E1quina ativa encontrada em: {rede1.Trim()}\u0022);\r\n\r\n                            \r\n\r\n\r\n                            rede = rede2.Split(\u0027\\\\\u0027)[2].Trim();\r\n\r\n                            string linha;\r\n                            using (StreamReader reader = new StreamReader(@\u0022C:\\\\compartilhamento\\recebido.txt\u0022))\r\n                            {\r\n                                linha = reader.ReadLine();\r\n                            }\r\n\r\n                            soma = 1;\r\n                            // timer9.Enabled= false;\r\n                            // somando = 0;\r\n\r\n                            //  if (p == 1)\r\n                            //  {\r\n                            //   MessageBox.Show(p.ToString());\r\n\r\n                            //  MessageBox.Show(rede1.ToString());\r\n\r\n                            rec = false;\r\n                            p = 0;\r\n\r\n                            vas = 0;\r\n                            l = 1;\r\n                            try\r\n                            {\r\n                                //      MessageBox.Show(rede1.Trim() \u002B \u0022 Before Synch\u0022);\r\n\r\n\r\n                                DateTime fvessel = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                                DateTime fvesse2 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022\\\\data_txt\\\\PROJETO.txt\u0022);\r\n                                if (fvessel \u003E fvesse2)\r\n                                {\r\n\r\n                                    File.Copy(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, true);\r\n\r\n\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n\r\n\r\n\r\n\r\n                                }\r\n                                // \r\n\r\n                                if (fvessel \u003C fvesse2)\r\n                                {\r\n                                    string caminhoArquivo3 = rede2.Trim() \u002B \u0022\\\\recebido.txt\u0022;\r\n                                    // Abre o arquivo para escrita\r\n                                    using (StreamWriter sw = new StreamWriter(caminhoArquivo3))\r\n                                    {\r\n                                        sw.WriteLine(\u00220\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                    }\r\n\r\n                                    File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, true);\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    // copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n\r\n                                    //   copyAll(rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                DateTime flogo = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022);\r\n                                DateTime flogo1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                                if (flogo \u003E flogo1)\r\n                                {\r\n\r\n\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede2.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                }\r\n\r\n\r\n                                DateTime fpicture = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                                if (rede2 != null)\r\n                                {\r\n                                    DateTime fpicture1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_new_picture\\\\\u0022);\r\n                                    if (fpicture \u003E fpicture1)\r\n                                    {\r\n\r\n                                        copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                        copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, rede2.Trim() \u002B \u0022data_picture\\\\\u0022);\r\n                                        clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                    }\r\n                                    //  MessageBox.Show(\u0022data_picture ok\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    // Uncomment the following line if you want to display a message box indicating the synchronization is done\r\n                                    // MessageBox.Show(\u0022data_base ok\u0022);\r\n\r\n\r\n                                    ////////////////////////////////////////\r\n                                    ///\r\n\r\n\r\n                                    DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                                    if (vas == 0)\r\n                                    {\r\n\r\n                                        DateTime f1data = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n\r\n                                        if (fdata \u003E f1data)\r\n                                        {\r\n                                            vas = 1;\r\n                                            //if (linha == \u00221\u0022)\r\n                                            // {\r\n                                            File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, true);\r\n                                            //  saida_manual();\r\n                                            //     linha=\u00220\u0022;\r\n                                            //  }\r\n\r\n                                            // client.Publish(\u0022switch1\u0022, Encoding.UTF8.GetBytes(\u0022ok 1\u0022), MqttMsgBase.QOS_LEVEL_AT_MOST_ONCE, false);\r\n                                            // File.\r\n                                            // ler_linha();\r\n                                            //  MessageBox.Show(number);\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                    if (vas == 0)\r\n                                    {\r\n\r\n                                        // DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                                        DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n                                        if (f1data \u003E fdata)\r\n                                        {\r\n                                            vas = 1;\r\n                                            File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n                                            // ler_linha();\r\n\r\n\r\n                                            // MessageBox.Show(\u0022data menor\u0022);\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                    DateTime fdata1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n\r\n                                    if (fdata0 \u003E fdata1)\r\n                                    {\r\n                                        //  if (linha == \u00221\u0022)\r\n                                        //  {\r\n\r\n                                        File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, true);\r\n                                        int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                        label3.Text = count.ToString().Trim();\r\n                                        //   linha = \u00220\u0022;\r\n                                        // }  \r\n                                    }\r\n\r\n\r\n                                    if (fdata1 \u003E fdata0)\r\n                                    {\r\n                                        //   File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                        File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true);\r\n                                        int count2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                        label3.Text = count2.ToString().Trim();\r\n\r\n\r\n                                    }\r\n                                    //     MessageBox.Show(\u0022data\u0022);\r\n\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                                string caminhoArquivo = rede2.Trim() \u002B \u0022data_txt\\\\data4.txt\u0022;\r\n                                // Abre o arquivo para escrita\r\n                                //   using (StreamWriter sw = new StreamWriter(caminhoArquivo))\r\n                                //   {\r\n                                //      sw.WriteLine(\u00221\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                //   }\r\n\r\n                                // somando\u002B\u002B;\r\n\r\n                                //   string caminhoArquivo2 = rede1.Trim() \u002B \u0022\\\\recebido.txt\u0022;\r\n                                // Abre o arquivo para escrita\r\n                                //  using (StreamWriter sw = new StreamWriter(caminhoArquivo2))\r\n                                // {\r\n                                // sw.WriteLine(\u00221\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                // }\r\n\r\n                                // MessageBox.Show(rede1.Trim());\r\n\r\n                                MessageBox.Show(\u0022ok\u0022);\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                // somando--;\r\n\r\n                                MessageBox.Show(rede2.Trim() \u002B \u0022  \u0022 \u002B ex.Message);\r\n                                ///   MessageBox.Show(\u0022falha\u0022);\r\n                                // valor\u002B\u002B;\r\n                                // panel12.BackColor = Color.Black;\r\n\r\n                            }\r\n\r\n                            //  MessageBox.Show(\u0022ok\u0022);\r\n                            l = 0;\r\n\r\n                            comp = 1;\r\n                            //  string nomeArquivo3 = rede1.Trim() \u002B \u0022lock.txt\u0022;\r\n                            //  using (StreamWriter writer = new StreamWriter(nomeArquivo3, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                            //  {\r\n                            //    writer.WriteLine(\u00220\u0022);\r\n                            //    writer.Close();\r\n                            // }\r\n\r\n\r\n\r\n                            rec = true;\r\n                            soma = 0;\r\n                            /// timer9.Enabled = true;\r\n                            //   timer9.Enabled = true;\r\n                        }\r\n                        */\r\n        }\r\n\r\n\r\n        private void synch_db(String rede)\r\n        {\r\n            using (new NetworkConnection(rede, new NetworkCredential(\u0022111111\u0022, \u0022469618106086\u0022)))\r\n            {\r\n                // rede = rede1.Split(\u0027\\\\\u0027)[2].Trim();\r\n                try\r\n                {\r\n                    string localDbPath = @\u0022C:\\compartilhamento\\dados\\banco.db\u0022;\r\n                    //  string remoteDbPath = rede \u002B \u0022\\\\dados\\\\banco.db\u0022;\r\n                    string rede2 = rede.Replace(\u0022.lan\u0022, \u0022\u0022);\r\n                    string remoteDbPath = rede2 \u002B \u0022\\\\dados\\\\banco.db\u0022;\r\n\r\n                    List\u003CUsuario\u003E localUsers;\r\n                    List\u003CUsuario\u003E remoteUsers;\r\n\r\n                    List\u003CCadastro\u003E localCadastro;\r\n                    List\u003CCadastro\u003E remoteCadastro;\r\n\r\n                    // Fetch all the users from the local database\r\n                    using (var localDb = new LiteDatabase(localDbPath))\r\n                    {\r\n\r\n                        localUsers = localDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022)\r\n                                            .FindAll()\r\n                                            .ToList();\r\n\r\n                        localCadastro = localDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022)\r\n                            .FindAll()\r\n                                            .ToList();\r\n                    }\r\n\r\n                    // Fetch all the users from the remote database\r\n                    using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                    {\r\n\r\n                        remoteUsers = remoteDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022)\r\n                                              .FindAll()\r\n                                              .ToList();\r\n\r\n                        remoteCadastro = remoteDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022)\r\n                            .FindAll()\r\n                                              .ToList();\r\n                    }\r\n\r\n                    // Synchronization logic\r\n                    SynchronizeDatabases(localDbPath, remoteDbPath, localUsers, remoteUsers);\r\n                    SynchronizeCadastroDatabases(localDbPath, remoteDbPath, localCadastro, remoteCadastro);\r\n                    //MessageBox.Show(\u0022ok\u0022);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    // MessageBox.Show(\u0022DB_Synch 867\u0022);\r\n                    MessageBox.Show(rede.Trim() \u002B \u0022  \u0022 \u002B ex.Message);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        void SynchronizeDatabases(string localDbPath, string remoteDbPath, List\u003CUsuario\u003E localUsers, List\u003CUsuario\u003E remoteUsers)\r\n        {\r\n            try\r\n            {\r\n\r\n\r\n\r\n                // Find the intersection and the unique users from each database\r\n                var intersectUsers = localUsers.Intersect(remoteUsers).ToList();\r\n                var localUniqueUsers = localUsers.Except(intersectUsers).ToList();\r\n                var remoteUniqueUsers = remoteUsers.Except(intersectUsers).ToList();\r\n\r\n                // Update the local database with unique users from the remote database\r\n                using (var localDb = new LiteDatabase(localDbPath))\r\n                {\r\n                    var userCollection = localDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                    userCollection.InsertBulk(remoteUniqueUsers);\r\n                }\r\n\r\n                // Update the remote database with unique users from the local database\r\n                using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                {\r\n                    var userCollection = remoteDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                    userCollection.InsertBulk(localUniqueUsers);\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Log the exception details\r\n\r\n            }\r\n\r\n        }\r\n\r\n        void SynchronizeCadastroDatabases(string localDbPath, string remoteDbPath, List\u003CCadastro\u003E localCadastro, List\u003CCadastro\u003E remoteCadastro)\r\n        {\r\n            try\r\n            {\r\n\r\n\r\n\r\n                // Find the intersection and the unique users from each database\r\n                var intersectCadastro = localCadastro.Intersect(remoteCadastro).ToList();\r\n                var localUniqueCadastro = localCadastro.Except(intersectCadastro).ToList();\r\n                var remoteUniqueCadastro = remoteCadastro.Except(intersectCadastro).ToList();\r\n\r\n                // Update the local database with unique users from the remote database\r\n                using (var localDb = new LiteDatabase(localDbPath))\r\n                {\r\n                    var cadastroCollection = localDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n                    cadastroCollection.InsertBulk(remoteUniqueCadastro);\r\n                }\r\n\r\n                // Update the remote database with unique users from the local database\r\n                using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                {\r\n                    var cadastroCollection = remoteDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n                    cadastroCollection.InsertBulk(localUniqueCadastro);\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Log the exception details\r\n\r\n            }\r\n        }\r\n\r\n        System.Data.DataTable dt = new System.Data.DataTable();\r\n        private DataSet ds;\r\n        int number2 = 0;\r\n        private void print_qrcode()\r\n        {\r\n\r\n            try\r\n            {\r\n                if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1)\r\n                {\r\n\r\n\r\n                    String data_new;\r\n                    String data2_new;\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n                    else\r\n                    {\r\n                        data_new = richTextBox6.Text.Trim();\r\n                    }\r\n                    if (dateTimePicker2.Visible == true)\r\n                    {\r\n                        data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n                    else\r\n                    {\r\n                        data2_new = richTextBox7.Text.Trim();\r\n                    }\r\n                    if (richTextBox16.Text == \u0022\u0022)\r\n                    {\r\n\r\n\r\n\r\n                        int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                        string number = count.ToString().Trim();\r\n\r\n                        // string number = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                        label3.Text = number;\r\n                        number2 = Int32.Parse(label3.Text);\r\n                        lb4.Visible = true;\r\n                        number2\u002B\u002B;\r\n                        // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022, number2.ToString());\r\n                        label3.Text = number2.ToString();\r\n                        lb4.Text = label3.Text;\r\n\r\n\r\n\r\n\r\n                        label5.Text = \u0022 \u0022;\r\n                        label28.Text = \u0022 \u0022;\r\n                        label30.Text = \u0022 \u0022;\r\n                        label31.Text = \u0022 \u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        panel11.Visible = false;\r\n                        panel4.Visible = true;\r\n                        label5.Text = richTextBox2.Text;\r\n                        label28.Text = comboBox1.Text;\r\n                        label30.Text = richTextBox9.Text;\r\n                        label31.Text = \u0022De: \u0022 \u002B data_new;\r\n                        label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n                    }\r\n\r\n                    else\r\n                    {\r\n\r\n                        label5.Text = \u0022 \u0022;\r\n                        label28.Text = \u0022 \u0022;\r\n                        label30.Text = \u0022 \u0022;\r\n                        label31.Text = \u0022 \u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        panel11.Visible = false;\r\n                        panel4.Visible = true;\r\n                        label5.Text = richTextBox2.Text;\r\n                        label28.Text = comboBox1.Text;\r\n                        label30.Text = richTextBox9.Text;\r\n                        label31.Text = \u0022De: \u0022 \u002B data_new;\r\n                        label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n                    }\r\n\r\n\r\n                    int width = panel4.Size.Width;\r\n                    int height = panel4.Size.Height;\r\n                    Bitmap bm = new Bitmap(width, height);\r\n                    panel4.DrawToBitmap(bm, new System.Drawing.Rectangle(0, 0, width, height));\r\n                    bm.Save(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n\r\n\r\n                    PrintDocument pd = new PrintDocument();\r\n                    comboPaperSize.DisplayMember = \u0022Etiqueta\u0022;\r\n                    System.Drawing.Printing.PaperSize pkSize;\r\n                    pkSize = pd.PrinterSettings.PaperSizes[57];\r\n                    //   pd.DefaultPageSettings.PrinterResolution = new PrinterResolution() { Kind = PrinterResolutionKind.Medium };\r\n\r\n                    comboPaperSize.Items.Add(pkSize);\r\n                    pd.DefaultPageSettings.Landscape = true;\r\n                    pd.PrintPage \u002B= (sender, args) =\u003E\r\n                    {\r\n                        Image i = bm;\r\n                        System.Drawing.Rectangle m = args.PageBounds;\r\n                        args.Graphics.DrawImage(i, 20, 5, 296, 216);\r\n                    };\r\n\r\n                    //  bm.Save(@\u0022C:\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n                    pd.Print();\r\n                    pd.Print();\r\n                    // label5.Visible = false;\r\n                    /// label4.Visible = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    if (band == 0)\r\n                    {\r\n                        MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                    }\r\n\r\n                    if (band == 1)\r\n                    {\r\n                        MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                    }\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022A IMPRESSORA BROTHER QL810 ou QL800 N\u00C3O EST\u00C1 DEFINIDA COMO IMPRESSORA PADR\u00C3O, FAVOR DEFINIR NO PAINEL DE CONTROLE DO WINDOWS NA OP\u00C7\u00C3O (Dispositivos e Impressoras)!\u0022);\r\n            }\r\n        }\r\n        private void out_by_user()\r\n        {\r\n            try\r\n            {\r\n\r\n                // richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                string bio = listBox1.SelectedItem.ToString().Trim();\r\n                // string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(Int16.Parse(bio.Split(\u0027:\u0027)[0]));\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich2 = Int32.Parse(label3.Text);\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n\r\n\r\n\r\n\r\n                for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n                {\r\n                    //print \u0022entrou no for\u0022\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(i);\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[1].Trim() == bio.Split(\u0027:\u0027)[1].Trim())\r\n                        {\r\n\r\n                            //NUMBER\tNAME\tCOMPANY\tFUNCTION\tID\tEMAIL\tVESSEL\tCHECK-IN VALIDATION\t  CHECK-OUT VALIDATION\t CHECK-IN\t     CHECK-OUT\tPROJECT\tASO\tNR-35\tVACCINE-1\tVACCINE-2\tBOOST VACCINE\tLOCAL\tLEVEL\tESTADO\tMOTIVO\tUSUARIO\r\n                            try\r\n                            {    //  1        2          3     4        5    6       7          8                           9                  10              11             12              13         14      15      16        17            18             19          20     21      22     23       24\r\n\r\n                                // NUMBER    NAME    COMPANY FUNCTION    ID EMAIL   VESSEL CHECK-IN VALIDATION     CHECK-OUT VALIDATION   CHECK-IN  DATA  CHECK-IN  HORA CHECK-OUT DATA CHECK-OUT HORA PROJECT    ASO    NR-35   VACCINE - 1   VACCINE - 2   BOOST VACCINE   LOCAL LEVEL   ESTADO MOTIVO  USUARIO\r\n\r\n                                //Number: 1  Name: CRISTIANO CALHEIROS  Compay: GOOGLEMARINE Id: 111098414  :E - Mail: cristiano.engenharia.ac @gmail.com\r\n                                // string bio = listBox1.SelectedItem.ToString().Trim();\r\n\r\n                                // 0      1    2              3             4         5             6           7      8       9          10                    11                      12         13          14      15      16        17           18            19            20              22              23               24               25              26         27   28\r\n                                // Number: 1 : Name: CRISTIANO CALHEIROS : Compay: GOOGLEMARINE: Funcition: ENGENHEIRO: Id: 111098414 : E - mail : cristiano.engenharia.ac @gmail.com: Vessel: Googlemarine: Project: 190605 : ASO: 02 / 02 / 2025 : NR - 34 : 02 / 02 / 2025 : Vaccine - 1 : 02 / 02 / 2025 : Vaccine - 2 : 02 / 02 / 2025 : Booster vaccine : 02 / 02 / 2025 :  : COMUM:\r\n\r\n                                output_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                                output_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n\r\n\r\n\r\n\r\n                                var num = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                var nome = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                var empresa = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                var funcao = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                var id = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                var email = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                                var vessel = secondLine.Split(\u0027:\u0027)[13].Trim();\r\n                                var checked_in_val = \u0022\u0022;\r\n                                var check_out_val = \u0022\u0022;\r\n                                var checked_in_data = \u0022*\u0022;\r\n                                var checked_in_hora = \u0022*\u0022;\r\n                                var checked_out_data = output_data;\r\n                                var checked_out_hora = output_hora \u002B \u0022: MANUAL PELO USU\u00C1RIO\u0022;\r\n                                var user = comuser.Text;\r\n\r\n                                //create and populate new Usuario\r\n                                Usuario usuario = new Usuario(\r\n                                     Int32.Parse(num), nome, empresa, funcao, Int32.Parse(id), email, vessel, checked_in_val, check_out_val, checked_in_data, checked_in_hora, checked_out_data, checked_out_hora, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, user);\r\n                                add_data2(usuario);\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                            // */\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                /// MessageBox.Show(\u0022N\u00C3O A DADOS CADASTRADOS!\u0022);\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n        // [DllImport(\u0022user32.dll\u0022), CharSet= CharSet.Auto, SetLastError = true)]\r\n        //  public static extern int GetWindowThreadProcessId(int handle,out int processId);\r\n\r\n\r\n\r\n        private void carrega_planilha_txt()\r\n        {\r\n            string filePath = \u0022C:\\\\compartilhamento\\\\data_base\\\\novo.txt\u0022;\r\n\r\n\r\n\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            vinte = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n            vinteum = localname;\r\n\r\n            string contentToAppend = richTextBox16.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox2.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox1.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox3.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox8.Text.Trim() \u002B \u0022,\u0022 \u002B comboBox1.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B input_data.Trim() \u002B \u0022,\u0022 \u002B input_hora.Trim() \u002B \u0022,\u0022 \u002B output_data.Trim() \u002B \u0022,\u0022 \u002B output_hora.Trim() \u002B \u0022,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,\u0022 \u002B vinteum \u002B \u0022,\u0022 \u002B vintedois \u002B \u0022,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n\r\n            // Verifica se o arquivo existe antes de tentar adicionar o conte\u00FAdo\r\n            if (File.Exists(filePath))\r\n            {\r\n                // Abre o arquivo em modo de anexa\u00E7\u00E3o (append)\r\n                using (StreamWriter writer = File.AppendText(filePath))\r\n                {\r\n                    // Escreve o conte\u00FAdo no arquivo\r\n                    writer.WriteLine(contentToAppend);\r\n                }\r\n\r\n                Console.WriteLine(\u0022Conte\u00FAdo adicionado com sucesso.\u0022);\r\n            }\r\n        }\r\n        private void CarregarPlanilha()\r\n        {\r\n\r\n            //  int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n            pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n            plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n            txtCodigoFunci.Text = lastRow.ToString();\r\n            lastRow\u002B\u002B;\r\n            /*\r\nxlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\nxlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\nxlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\nxlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\nxlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\nxlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\nxlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\nxlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\nxlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\nxlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\nxlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\nxlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\nxlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\nxlWorkSheet.Cells[1, 16] = \u0022NR-35\u0022;\r\nxlWorkSheet.Cells[1, 17] = \u0022VACCINE-1\u0022;\r\nxlWorkSheet.Cells[1, 18] = \u0022VACCINE-2\u0022;\r\nxlWorkSheet.Cells[1, 19] = \u0022BOOST VACCINE\u0022;\r\nxlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\nxlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\nxlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\nxlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\nxlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n                         output_data = DateTime.Now.ToString(\u0022dd-MM-yyyy\u0022);\r\n                output_hora = DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n*/\r\n\r\n            string contentToAppend = nb \u002B \u0022,\u0022 \u002B richTextBox2.Text \u002B \u0022,\u0022 \u002B richTextBox1.Text \u002B \u0022,\u0022 \u002B richTextBox3.Text \u002B \u0022,\u0022 \u002B richTextBox4.Text \u002B \u0022,\u0022 \u002B richTextBox8.Text \u002B \u0022,\u0022 \u002B comboBox1.Text \u002B \u0022,\u0022 \u002B richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text \u002B \u0022,\u0022 \u002B input_data \u002B \u0022,\u0022 \u002B input_hora \u002B \u0022,\u0022 \u002B output_data \u002B \u0022,\u0022 \u002B output_hora \u002B \u0022,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,,\u0022 \u002B vintedois \u002B \u0022,,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n            plan.Cells[lastRow, 1] = richTextBox16.Text;\r\n            plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n            plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n            plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n            plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n            plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n            plan.Cells[lastRow, 7] = comboBox1.Text;\r\n            plan.Cells[lastRow, 8] = richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim();\r\n            plan.Cells[lastRow, 9] = \u0022.\u0022 \u002B richTextBox7.Text.Trim(); //DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n            plan.Cells[lastRow, 10] = input_data;\r\n            plan.Cells[lastRow, 11] = input_hora;\r\n            plan.Cells[lastRow, 12] = output_data;\r\n            plan.Cells[lastRow, 13] = output_hora;\r\n            plan.Cells[lastRow, 14] = richTextBox9.Text.Trim();\r\n            plan.Cells[lastRow, 15] = richTextBox10.Text.Trim();\r\n            plan.Cells[lastRow, 16] = richTextBox11.Text.Trim();\r\n            plan.Cells[lastRow, 17] = richTextBox12.Text.Trim();\r\n            plan.Cells[lastRow, 18] = richTextBox13.Text.Trim();\r\n            plan.Cells[lastRow, 19] = richTextBox14.Text.Trim();\r\n            plan.Cells[lastRow, 24] = comuser.Text;\r\n\r\n            localname = \u0022\u0022;\r\n\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            plan.Cells[lastRow, 20] = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n\r\n            plan.Cells[lastRow, 21] = localname;\r\n\r\n            pasta.Save();\r\n            pasta.Close();\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n\r\n            ///  checa_host();\r\n\r\n\r\n            try\r\n            {\r\n                //   checa_host();\r\n                // atualiza_compartilhamento();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(ex.ToString(), ex.Message, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n            }\r\n            //  MessageBox.Show(\u0022CarregarPlanilha - leitura\u0022);\r\n        }\r\n\r\n        private void bloqueio()\r\n        {\r\n            try\r\n            {\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n                // Start at line number 2 because there is a header\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n                    if (richTextBox16.Text.Trim() != \u0022\u0022)\r\n                    {\r\n                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                        {\r\n                            // Copy it where you want\r\n                            //  MessageBox.Show(lines[i].ToString());\r\n                            string text3 = lines[i];\r\n\r\n                            string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                            string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                            text = text.Replace(text3, text4);\r\n                            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //////////////////////////\r\n\r\n                pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n                plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n                txtCodigoFunci.Text = lastRow.ToString();\r\n                lastRow\u002B\u002B;\r\n\r\n                if (richTextBox16.Text == \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = number2;\r\n                }\r\n                if (richTextBox16.Text != \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = Int32.Parse(richTextBox16.Text);\r\n                }\r\n                /*\r\nxlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\nxlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\nxlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\nxlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\nxlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\nxlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\nxlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\nxlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\nxlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\nxlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\nxlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\nxlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\nxlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\nxlWorkSheet.Cells[1, 16] = \u0022NR-35\u0022;\r\nxlWorkSheet.Cells[1, 17] = \u0022VACCINE-1\u0022;\r\nxlWorkSheet.Cells[1, 18] = \u0022VACCINE-2\u0022;\r\nxlWorkSheet.Cells[1, 19] = \u0022BOOST VACCINE\u0022;\r\nxlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\nxlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\nxlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\nxlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\nxlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n             output_data = DateTime.Now.ToString(\u0022dd-MM-yyyy\u0022);\r\n    output_hora = DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n*/\r\n                // qr_generate = label37.Text;\r\n                plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n                plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n                plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n                plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n                plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n                plan.Cells[lastRow, 7] = comboBox1.Text;\r\n                // plan.Cells[lastRow, 8] = DateTime.Now;\r\n\r\n                //xlWorkSheet.Cells[1, 20] = \u0022ESTADO\u0022;\r\n                // xlWorkSheet.Cells[1, 21] = \u0022MOTIVO\u0022;\r\n                // xlWorkSheet.Cells[1, 22] = \u0022USUARIO\u0022;\r\n                plan.Cells[lastRow, 14] = richTextBox9.Text;\r\n                plan.Cells[lastRow, 15] = richTextBox10.Text;\r\n                plan.Cells[lastRow, 16] = richTextBox11.Text;\r\n                plan.Cells[lastRow, 17] = richTextBox12.Text;\r\n                plan.Cells[lastRow, 18] = richTextBox13.Text;\r\n                plan.Cells[lastRow, 19] = richTextBox14.Text;\r\n                plan.Cells[lastRow, 22] = bb;\r\n                plan.Cells[lastRow, 23] = richTextBox17.Text;\r\n                plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n\r\n                localname = \u0022\u0022;\r\n                bb = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (local1.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n                }\r\n                if (local2.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n                }\r\n                if (local3.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n                }\r\n                if (local4.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 20] = localname;\r\n\r\n                localname = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (level_yellow.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n                }\r\n                if (level_green.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n                }\r\n                if (level_red.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n                }\r\n\r\n                plan.Cells[lastRow, 21] = localname;\r\n\r\n\r\n\r\n\r\n                pasta.Save();\r\n                //pasta.Close();\r\n                app.Quit();\r\n                pasta.Close();\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                //CarregarPlanilha();\r\n                //   atualiza_compartilhamento();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                // MessageBox.Show(ex.ToString(), ex.Message, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n            }\r\n\r\n        }\r\n        public void txt_to_excel()\r\n        {\r\n            string[] InputNamesLines = System.IO.File.ReadAllLines(@\u0022c:\\teste\\excel.txt\u0022);\r\n            string secondLine = File.ReadLines(@\u0022c:\\teste\\data2.txt\u0022).ElementAtOrDefault(1);\r\n            //if()\r\n            Excel.Application oXl;\r\n            Excel._Workbook oWB;\r\n            Excel._Worksheet xlWorkSheet;\r\n            Excel.Range oRng;\r\n            object misvalue = System.Reflection.Missing.Value;\r\n            try\r\n            {\r\n                oXl = new Excel.Application();\r\n                oXl.Visible = true;\r\n\r\n                oWB = (Excel._Workbook)(oXl.Workbooks.Add(\u0022\u0022));\r\n                xlWorkSheet = (Excel.Worksheet)oWB.ActiveSheet;\r\n                xlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\n                xlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\n                xlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\n                xlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n                xlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\n                xlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\n                xlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\n                xlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n                xlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\n                xlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\n                xlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\n                xlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\n                xlWorkSheet.Cells[1, 16] = \u0022NR-34\u0022;\r\n                xlWorkSheet.Cells[1, 17] = \u0022NR-10\u0022;\r\n                xlWorkSheet.Cells[1, 18] = \u0022NR-33\u0022;\r\n                xlWorkSheet.Cells[1, 19] = \u0022NR-35\u0022;\r\n                xlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\n                xlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\n                xlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\n                xlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\n                xlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n                xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022).Font.Bold = true;\r\n                xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022).VerticalAlignment = Excel.XlVAlign.xlVAlignCenter;\r\n                for (int i = 1; i \u003C= InputNamesLines.Length; i\u002B\u002B)\r\n                {\r\n                    // oSheet.Cells[1][i \u002B 1] = i;\r\n                    // oSheet.Cells[2][i \u002B 1] =   InputNamesLines[i - 1];\r\n                    // oSheet.Cells[3]= secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                }\r\n                xlWorkSheet.Cells[1, 3] = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                Thread.Sleep(5000);\r\n                oRng = xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022);\r\n                oRng.EntireColumn.AutoFit();\r\n                oXl.Visible = false;\r\n                oWB.SaveAs(@\u0022c:\\teste\\teste.xls\u0022, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, false, false, Excel.XlSaveAsAccessMode.xlNoChange,\r\n                    Type.Missing, Type.Missing, Type.Missing, Type.Missing);\r\n                oWB.Close();\r\n                Marshal.ReleaseComObject(oWB);\r\n                Marshal.ReleaseComObject(oWB);\r\n                Marshal.ReleaseComObject(oWB);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void carrega_planilha2_txt()\r\n        {\r\n            string filePath = \u0022C:\\\\compartilhamento\\\\data_base\\\\novo.txt\u0022;\r\n\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                nb = number2.ToString();\r\n            }\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                nb = richTextBox16.Text.Trim();\r\n            }\r\n            if (alter == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022ALTERADO\u0022;\r\n                alter = false;\r\n            }\r\n            if (print_ == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022PRINTED\u0022;\r\n                print_ = false;\r\n\r\n            }\r\n            if (lido == true)\r\n            {\r\n                vintedois = \u0022LIDO\u0022;\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                lido = false;\r\n            }\r\n\r\n            if (cad == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022CADASTRADO\u0022;\r\n                cad = false;\r\n            }\r\n\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            vinte = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n\r\n\r\n            string contentToAppend = nb \u002B \u0022,\u0022 \u002B richTextBox2.Text \u002B \u0022,\u0022 \u002B richTextBox1.Text \u002B \u0022,\u0022 \u002B richTextBox3.Text \u002B \u0022,\u0022 \u002B richTextBox4.Text \u002B \u0022,\u0022 \u002B richTextBox8.Text \u002B \u0022,\u0022 \u002B comboBox1.Text \u002B \u0022,\u0022 \u002B richTextBox6.Text \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text \u002B \u0022,,,,,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,,\u0022 \u002B vintedois \u002B \u0022,,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n\r\n            //string to int function\r\n            int number = Int32.Parse(richTextBox16.Text);\r\n            //identidade string to int function\r\n            int identidade = Int32.Parse(richTextBox4.Text);\r\n\r\n            //create new Usuario() object and assign values to its properties respectively\r\n            Usuario usuario = new Usuario(\r\n                number,\r\n                richTextBox2.Text,\r\n                richTextBox1.Text,\r\n                richTextBox3.Text,\r\n                identidade,\r\n                richTextBox8.Text,\r\n                comboBox1.Text,\r\n                richTextBox6.Text \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text,\r\n                \u0022.\u0022 \u002B richTextBox7.Text,\r\n                input_data,\r\n                input_hora,\r\n                output_data,\r\n                output_hora,\r\n                richTextBox9.Text,\r\n                richTextBox10.Text,\r\n                richTextBox11.Text,\r\n                richTextBox12.Text,\r\n                richTextBox13.Text,\r\n                richTextBox14.Text,\r\n                vinte,\r\n                vinteum,\r\n                vintedois,\r\n                vintequatro,\r\n                comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now\r\n                );\r\n\r\n            add_data2(usuario);\r\n\r\n\r\n            // Verifica se o arquivo existe antes de tentar adicionar o conte\u00FAdo\r\n            if (File.Exists(filePath))\r\n            {\r\n                // Abre o arquivo em modo de anexa\u00E7\u00E3o (append)\r\n                using (StreamWriter writer = File.AppendText(filePath))\r\n                {\r\n                    // Escreve o conte\u00FAdo no arquivo\r\n                    writer.WriteLine(contentToAppend);\r\n                }\r\n\r\n                Console.WriteLine(\u0022Conte\u00FAdo adicionado com sucesso.\u0022);\r\n            }\r\n        }\r\n\r\n        private void CarregarPlanilha2()\r\n        {\r\n            try\r\n            {\r\n\r\n                okay = 1;\r\n                pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n\r\n                plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n\r\n                txtCodigoFunci.Text = lastRow.ToString();\r\n                lastRow\u002B\u002B;\r\n\r\n                if (richTextBox16.Text == \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = number2;\r\n                }\r\n                if (richTextBox16.Text != \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = Int16.Parse(richTextBox16.Text.Trim());\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n                plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n                plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n                plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n                plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n                plan.Cells[lastRow, 7] = comboBox1.Text;\r\n                plan.Cells[lastRow, 8] = richTextBox6.Text;\r\n                plan.Cells[lastRow, 9] = \u0022.\u0022 \u002B richTextBox7.Text;\r\n                plan.Cells[lastRow, 14] = richTextBox9.Text;\r\n\r\n\r\n                plan.Cells[lastRow, 15] = richTextBox10.Text.Trim();\r\n                plan.Cells[lastRow, 16] = richTextBox11.Text.Trim();\r\n                plan.Cells[lastRow, 17] = richTextBox12.Text.Trim();\r\n                plan.Cells[lastRow, 18] = richTextBox13.Text.Trim();\r\n                plan.Cells[lastRow, 19] = richTextBox14.Text.Trim();\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n\r\n\r\n                // plan.Cells[lastRow, 24] = comuser.Text;\r\n\r\n                localname = \u0022\u0022;\r\n\r\n\r\n\r\n\r\n                if (alter == true)\r\n                {\r\n                    plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 22] = \u0022CADASTRO ALTERADO\u0022;\r\n                }\r\n                if (alter == false)\r\n                {\r\n                    plan.Cells[lastRow, 22] = qr_generate \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 24] = comuser.Text;\r\n                }\r\n                if (cad == true)\r\n                {\r\n                    plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 22] = \u0022CADASTRADO\u0022;\r\n                    cad = false;\r\n                }\r\n\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (local1.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n                }\r\n                if (local2.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n                }\r\n                if (local3.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n                }\r\n                if (local4.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 20] = localname;\r\n\r\n                localname = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (level_yellow.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n                }\r\n                if (level_green.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n                }\r\n                if (level_red.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n                }\r\n\r\n                plan.Cells[lastRow, 21] = localname;\r\n\r\n\r\n\r\n\r\n                pasta.Save();\r\n                pasta.Close();\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                //  atualiza_compartilhamento();\r\n                // myThread.Abort();\r\n                //   checa_host();\r\n                //  MessageBox.Show(\u0022CarregarPlanilha - atualiza excel\u0022);\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            //CarregarPlanilha();\r\n\r\n        }\r\n        private static void CloseExcel(Excel.Application ExcelApplication = null)\r\n        {\r\n            if (ExcelApplication != null)\r\n            {\r\n                //ExcelApplication.Workbooks.Close();\r\n                // ExcelApplication.Quit();\r\n            }\r\n\r\n            System.Diagnostics.Process[] PROC = System.Diagnostics.Process.GetProcessesByName(\u0022EXCEL\u0022);\r\n            foreach (System.Diagnostics.Process PK in PROC)\r\n            {\r\n                //  if (PK.MainWindowTitle.Length == 0) { PK.Kill(); }\r\n            }\r\n\r\n\r\n            var valor = 1;\r\n            //  var array[] = 1;\r\n            int x = 2;\r\n            var processes = Process.GetProcessesByName(\u0022Excel\u0022);\r\n\r\n            foreach (var p in processes)\r\n            {\r\n\r\n\r\n                //  x\u002B\u002B;\r\n                if (x \u003E= 2)\r\n                {\r\n                    valor = p.Id;\r\n\r\n                    //MessageBox.Show(valor.ToString());\r\n                    Process processes2 = Process.GetProcessById(valor);\r\n                    processes2.Kill();\r\n                    x--;\r\n                }\r\n            }\r\n            x = 2;\r\n\r\n\r\n        }\r\n        private void excel_close()\r\n        {\r\n\r\n            int ourPID = 0;\r\n            int tmpX = 0;\r\n            int indexRow = 1;\r\n            int indexCol = 1;\r\n            int[] existingPIDs;\r\n            existingPIDs = new int[100];\r\n\r\n            Process[] localByName = Process.GetProcessesByName(\u0022excel\u0022);\r\n            // user didnt have any excels open, kill excel\r\n            if (tmpX == 0)\r\n            {\r\n                foreach (Process proc in localByName)\r\n                {\r\n                    proc.Kill();\r\n                }\r\n            }\r\n            // user does have excel(s) already open, only kill our apps excel\r\n            else if (tmpX \u003E 0 \u0026\u0026 ourPID != 0)\r\n            {\r\n                foreach (Process proc in localByName)\r\n                {\r\n                    if (proc.Id == ourPID)\r\n                    {\r\n                        proc.Kill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        private void GerarCabecalho()\r\n        {\r\n\r\n            pasta = app.Workbooks.Open(\u0022label17.Text\u0022);\r\n            plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            plan.Cells[1, 1].Text = \u0022NAME\u0022;\r\n            plan.Cells[1, 2].Text = \u0022COMPANY\u0022;\r\n            plan.Cells[1, 3].Text = \u0022FUNCTION\u0022;\r\n            plan.Cells[1, 4].Text = \u0022ID\u0022;\r\n            plan.Cells[1, 5].Text = \u0022EMAIL:\u0022;\r\n            plan.Cells[1, 6].text = \u0022VESSEL\u0022;\r\n            plan.Cells[1, 7].Text = \u0022INITIAL\u0022;\r\n            plan.Cells[1, 8].Text = \u0022FINAL\u0022;\r\n            plan.Cells[1, 9].Text = \u0022INPUT\u0022;\r\n            plan.Cells[1, 10].Text = \u0022OUTPU\u0022;\r\n            pasta.Save();\r\n            pasta.Close();\r\n            app.Quit();\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n        }\r\n\r\n        int wi = 0;\r\n        // VideoCaptureDevice videoCaptureDevice;\r\n        private void button6_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        private void atualizar_file()\r\n        {\r\n\r\n            var file2 = new DirectoryInfo(@\u0022C:\\compartilhamento\\data_base\\\u0022).GetFiles().OrderBy(o =\u003E o.CreationTime).LastOrDefault();\r\n            label17.Text = file2.ToString();\r\n\r\n\r\n            //  if (label17.Text != label18.Text)\r\n            //  {\r\n            Microsoft.Office.Interop.Excel.Workbook xlWorkBook;\r\n            Microsoft.Office.Interop.Excel.Worksheet xlWorkSheet;\r\n            object misValue = System.Reflection.Missing.Value;\r\n\r\n            xlWorkBook = app.Workbooks.Add(misValue);\r\n            xlWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);\r\n\r\n            // xlWorkSheet = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            xlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\n            xlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\n            xlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\n            xlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n            xlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\n            xlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\n            xlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\n            xlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n            xlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\n            xlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\n            xlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\n            xlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\n            xlWorkSheet.Cells[1, 16] = \u0022NR-34\u0022;\r\n            xlWorkSheet.Cells[1, 17] = \u0022NR-10\u0022;\r\n            xlWorkSheet.Cells[1, 18] = \u0022NR-33\u0022;\r\n            xlWorkSheet.Cells[1, 19] = \u0022NR-35\u0022;\r\n            xlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\n            xlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\n            xlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\n            xlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\n            xlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n\r\n\r\n            // xlWorkSheet.Pictures.Add(1, 1, @\u0022E:\\work\\sample.jpg\u0022);\r\n            string mydate = DateTime.Today.ToString(\u0022yyyy/MM/dd\u0022);\r\n            label18.Text = mydate.Replace(\u0022/\u0022, \u0022_\u0022) \u002B \u0022.xls\u0022;\r\n\r\n            xlWorkBook.SaveAs(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text, Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);\r\n            xlWorkBook.Close(true, misValue, misValue);\r\n            app.Quit();\r\n\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n\r\n            MessageBox.Show(\u0022New date created\u0022);\r\n            System.Windows.Forms.Application.Restart();\r\n            //  }\r\n\r\n        }\r\n\r\n        private void inicialize_qrreader()\r\n        {\r\n            vid = 1;\r\n            richTextBox1.ReadOnly = true;\r\n            richTextBox2.ReadOnly = true;\r\n            richTextBox3.ReadOnly = true;\r\n            richTextBox4.ReadOnly = true;\r\n            //richTextBox5.ReadOnly = true;\r\n            richTextBox6.ReadOnly = true;\r\n            richTextBox7.ReadOnly = true;\r\n            richTextBox8.ReadOnly = true;\r\n            // button2.Enabled = false;\r\n\r\n            button1.Text = \u0022Read QRcode On\u0022;\r\n            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n            videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n            //   videoCaptureDevice.Start();\r\n            dateTimePicker1.Visible = false;\r\n            dateTimePicker2.Visible = false;\r\n\r\n\r\n\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n\r\n            richTextBox6.Visible = true;\r\n            richTextBox7.Visible = true;\r\n            if (timer4.Enabled == false)\r\n            {\r\n                // button2.Enabled = false;\r\n                timer4.Start();\r\n            }\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n        }\r\n\r\n        private static string GetFiles(string path)\r\n        {\r\n\r\n            var file = new DirectoryInfo(path).GetFiles().OrderByDescending(o =\u003E o.LastWriteTime).FirstOrDefault();\r\n            return file.Name;\r\n            // label18.Text =\r\n        }\r\n        private void ckecked_false()\r\n        {\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            // richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n            // richTextBox9.Text = \u0022\u0022;\r\n            richTextBox10.Text = \u0022\u0022;\r\n            richTextBox11.Text = \u0022\u0022;\r\n            richTextBox12.Text = \u0022\u0022;\r\n            richTextBox13.Text = \u0022\u0022;\r\n            richTextBox14.Text = \u0022\u0022;\r\n            richTextBox16.Text = \u0022\u0022;\r\n            button8.Visible = false;\r\n            button9.Visible = false;\r\n            button10.Visible = false;\r\n            maskedTextBox1.Text = \u0022 \u0022;\r\n            maskedTextBox2.Text = \u0022 \u0022;\r\n            maskedTextBox3.Text = \u0022 \u0022;\r\n            maskedTextBox4.Text = \u0022 \u0022;\r\n            maskedTextBox5.Text = \u0022 \u0022;\r\n            local1.Checked = false;\r\n            local2.Checked = false;\r\n            local3.Checked = false;\r\n            // local4.Checked = false;\r\n\r\n\r\n            //level_green.Checked = false;\r\n            // level_red.Checked = false;\r\n            //  level_yellow.Checked = false;\r\n\r\n        }\r\n        private void FinalFrame_NewFrame(object sender, NewFrameEventArgs eventArgs)\r\n        {\r\n            eventArgs.Frame.RotateFlip(RotateFlipType.RotateNoneFlipX);\r\n            pictureBox7.Image = (Bitmap)eventArgs.Frame.Clone();\r\n        }\r\n\r\n        int vid = 0;\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            if (comboBox1.Text != \u0022\u0022)\r\n            {\r\n\r\n                if (panel6.Visible == false)\r\n                {\r\n\r\n                    if (richTextBox3.Text != \u0022\u0022)\r\n                    {\r\n                        comboBox1.Items.Clear();\r\n                        StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                        string x = sr.ReadToEnd();\r\n                        string[] y = x.Split(\u0027\\n\u0027);\r\n                        foreach (string s in y)\r\n                        {\r\n                            comboBox1.Items.Add(s);\r\n                        }\r\n                        sr.Close();\r\n                    }\r\n                }\r\n\r\n                label54.Visible = false;\r\n                label44.Visible = false;\r\n                label45.Visible = false;\r\n                label46.Visible = false;\r\n                label47.Visible = false;\r\n                label48.Visible = false;\r\n                label49.Visible = false;\r\n                label50.Visible = false;\r\n\r\n\r\n                dataGridView1.Visible = false;\r\n                local1.Enabled = false;\r\n                local2.Enabled = false;\r\n                local4.Enabled = false;\r\n                plant = 0;\r\n\r\n                if (band == 0)\r\n                {\r\n                    button3.Text = Label_Show_data[0];\r\n                }\r\n                else\r\n                {\r\n                    button3.Text = Label_Show_data[1];\r\n                }\r\n\r\n                // button3.Text = \u0022Show DataBase\u0022;\r\n\r\n\r\n                button1.Enabled = true;\r\n\r\n\r\n                tempo = 0;\r\n                panel11.Visible = true;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                panel11.BackColor = Color.White;\r\n                label8.Visible = false;\r\n                maskedTextBox1.ReadOnly = true;\r\n                maskedTextBox2.ReadOnly = true;\r\n                maskedTextBox3.ReadOnly = true;\r\n                maskedTextBox4.ReadOnly = true;\r\n                maskedTextBox5.ReadOnly = true;\r\n                maskedTextBox1.Text = \u0022 \u0022;\r\n                maskedTextBox2.Text = \u0022 \u0022;\r\n                maskedTextBox3.Text = \u0022 \u0022;\r\n                maskedTextBox4.Text = \u0022 \u0022;\r\n                maskedTextBox5.Text = \u0022 \u0022;\r\n                vid = 1;\r\n\r\n\r\n                //  if (vid == 1)\r\n                // {\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                richTextBox1.ReadOnly = true;\r\n                richTextBox2.ReadOnly = true;\r\n                richTextBox3.ReadOnly = true;\r\n                richTextBox4.ReadOnly = true;\r\n                //richTextBox5.ReadOnly = true;\r\n                richTextBox6.ReadOnly = true;\r\n                richTextBox7.ReadOnly = true;\r\n                richTextBox8.ReadOnly = true;\r\n                //richTextBox9.ReadOnly = true;\r\n                richTextBox10.ReadOnly = true;\r\n                richTextBox11.ReadOnly = true;\r\n                richTextBox12.ReadOnly = true;\r\n                richTextBox13.ReadOnly = true;\r\n                richTextBox14.ReadOnly = true;\r\n                richTextBox16.ReadOnly = true;\r\n                // button2.Enabled = false;\r\n                if (band == 0)\r\n                {\r\n                    button1.Text = Label_Read_QRcode_On[0];\r\n                    label7.Text = button1.Text;\r\n                }\r\n                else\r\n                {\r\n                    button1.Text = Label_Read_QRcode_On[1];\r\n                    label7.Text = button1.Text;\r\n                }\r\n\r\n                panel10.Visible = false;\r\n\r\n                videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                //  pictureBox1.BackgroundImage = Properties.Resources.frame;\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                // richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox16.Text = \u0022\u0022;\r\n\r\n                richTextBox6.Visible = true;\r\n                richTextBox7.Visible = true;\r\n\r\n                ckecked_false();\r\n                //  if (timer4.Enabled == false)\r\n                //  {\r\n                //  button2.Enabled = false;\r\n                // timer4.Start();\r\n                //  }\r\n\r\n\r\n                //}\r\n\r\n                if (vid == 2)\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(_read);\r\n            }\r\n        }\r\n\r\n        private void ler_linha()\r\n        {\r\n            //   String locked = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n\r\n            //  timer8.Stop();\r\n\r\n            // textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n\r\n            try\r\n            {\r\n                if (textBox16.Text == \u0022\u0022) {\r\n\r\n                    if (comboBox2.Text.Trim() == \u0022ALL\u0022)\r\n                    {\r\n                        listBox1.Items.Clear();\r\n                        lista_ = 0;\r\n                        foreach (string linha22 in linhas22)\r\n                        {\r\n                            if (linha22.Contains(\u0022Vessel\u0022))\r\n                            {\r\n                                listBox1.Items.Add(linha22);\r\n                                lista_\u002B\u002B;\r\n                                label27.Text = lista_.ToString();\r\n                                label67.Text = lista_.ToString();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        if (lista_ == 0)\r\n                        {\r\n                            label27.Text = lista_.ToString();\r\n                            //label67.Text = label27.Text;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        listBox1.Items.Clear();\r\n                        lista_ = 0;\r\n                        foreach (string linha222 in linhas22)\r\n                        {\r\n\r\n                            if (linha222.Contains(comboBox2.Text.Trim()))\r\n                            {\r\n                                //  if (linha22.Contains(\u0022\\n\u0022))\r\n                                // {\r\n                                listBox1.Items.Add(linha222);\r\n                                lista_\u002B\u002B;\r\n                                label27.Text = lista_.ToString();\r\n                                label67.Text = lista_.ToString();\r\n                                // }\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        if (lista_ == 0)\r\n                        {\r\n                            label27.Text = lista_.ToString();\r\n                            label67.Text = lista_.ToString();\r\n                            //label67.Text = label27.Text;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n                string FileToRead = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n                TextReader Leitor = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);//Inicializa o Leitor\r\n                int Linhas = 0;\r\n\r\n                while (Leitor.Peek() != -1)\r\n                {//Enquanto o arquivo n\u00E3o acabar, o Peek n\u00E3o retorna -1 sendo adequando para o loop while...\r\n                    Linhas\u002B\u002B;//Incrementa 1 na contagem\r\n                    Leitor.ReadLine();//Avan\u00E7a uma linha no arquivo\r\n                }\r\n                Leitor.Close(); //Fecha o Leitor, dando acesso ao arquivo para outros programas....\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                string number = count.ToString().Trim();\r\n\r\n                //   MessageBox.Show(rich5);\r\n\r\n\r\n                //string criterio = comboBox1.Text.Trim();// id\r\n\r\n                // string[] linhas2 = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                //  foreach (string linha in linhas2)\r\n                //  {\r\n                // if (linha.Contains(criterio))\r\n                //  lbResultado.Items.Add(linha);\r\n                // label27.Text = Linhas.ToString();\r\n                //  }\r\n                label27.Text = Linhas.ToString();\r\n                //  label67.Text = label27.Text;\r\n\r\n                //  string number = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                label3.Text = number;\r\n                //  number2 = Int32.Parse(label3.Text);\r\n                // MessageBox.Show(\u0022linha ok\u0022);\r\n            }\r\n            catch\r\n            {\r\n                //   MessageBox.Show(\u0022n\u00E3o consegui acessar o caminho  \u0022 \u002B @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void wifi_level()\r\n        {\r\n            try\r\n            {\r\n                System.Diagnostics.Process p = new System.Diagnostics.Process();\r\n                ///  System.Diagnostics.h\r\n                p.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                p.StartInfo.CreateNoWindow = true;\r\n                p.StartInfo.FileName = \u0022netsh.exe\u0022;\r\n                p.StartInfo.Arguments = \u0022wlan show interfaces\u0022;\r\n                p.StartInfo.UseShellExecute = false;\r\n                p.StartInfo.RedirectStandardOutput = true;\r\n\r\n                p.Start();\r\n\r\n                string s = p.StandardOutput.ReadToEnd();\r\n                string s1 = s.Substring(s.IndexOf(\u0022Perfil\u0022));\r\n                s1 = s1.Substring(2, s1.IndexOf(\u0022:\u0022));\r\n                s1 = s1.Substring(2, s1.IndexOf(\u0022\\n\u0022)).Trim();\r\n\r\n                string s2 = s.Substring(s.IndexOf(\u0022Sinal\u0022));\r\n                s2 = s2.Substring(s2.IndexOf(\u0022:\u0022));\r\n                s2 = s2.Substring(2, s2.IndexOf(\u0022\\n\u0022)).Trim();\r\n                string s3 = s2.Replace(\u0022%\u0022, \u0022\u0022);\r\n\r\n                s4 = Int32.Parse(s3);\r\n                label20.Text = s3;\r\n\r\n                p.WaitForExit();\r\n\r\n                if (s4 \u003C= 10 || s4 == null)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level0_1;\r\n                }\r\n                if (s4 \u003C= 20)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level1_1;\r\n                }\r\n                if (s4 \u003C= 50)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level2_1;\r\n                }\r\n                if (s4 \u003E= 100)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level31;\r\n                }\r\n            }\r\n            catch (ArgumentException ex)\r\n            {\r\n\r\n                button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level0_1;\r\n            }\r\n\r\n        }\r\n        private void ler_linha_projeto()\r\n        {\r\n\r\n            // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n            string[] arquivo = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            // TextReader Leitor = new StreamReader(@\u0022C:\\data_txt\\ROJETO.txt\u0022, true);//Inicializa o Leitor\r\n\r\n\r\n            // comboBox1.Text = arquivo[0].ToString();\r\n            richTextBox9.Text = arquivo[1].ToString();\r\n            // Leitor.Close(); //Fecha o Leitor, dando acesso ao arquivo para outros programas....\r\n\r\n\r\n        }\r\n        private void ler_data_txt()\r\n        {\r\n            using (StreamReader sr = new StreamReader(\u0022data_time.txt\u0022))\r\n            {\r\n                string line;\r\n\r\n                while ((line = sr.ReadLine()) != null)\r\n                {\r\n                    z = line;\r\n                }\r\n            }\r\n        }\r\n        private void Form1_FormClosing(object sender, FormClosingEventArgs e)\r\n        {\r\n            client.Disconnect();\r\n        }\r\n        void client_MqttMsgPublishReceived(object sender, MqttMsgPublishEventArgs e)\r\n        {\r\n            string ReceivedMessage = Encoding.UTF8.GetString(e.Message);\r\n\r\n            // we need this construction because the receiving code in the library and the UI with textbox run on different threads\r\n            SetText(ReceivedMessage);\r\n\r\n        }\r\n        private void SetText(string text)\r\n        {\r\n            // we need this construction because the receiving code in the library and the UI with textbox run on different threads\r\n            if (this.RecText.InvokeRequired)\r\n            {\r\n                SetTextCallback d = new SetTextCallback(SetText);\r\n                this.Invoke(d, new object[] { text });\r\n            }\r\n            else\r\n            {\r\n                this.RecText.Text = text;\r\n            }\r\n        }\r\n        private void Form1_Load(object sender, EventArgs e)\r\n        {\r\n            checa_host_ = true;\r\n            if (!File.Exists(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                Create_DB();\r\n                if (hasDb == true)\r\n                {\r\n                    get_last();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                get_last();\r\n            }\r\n\r\n            ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n            startInfo2.RedirectStandardOutput = true;\r\n            startInfo2.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo2.CreateNoWindow = true;\r\n            startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo2);\r\n\r\n            //  client = new MqttClient(\u0022stellar-veterinary.cloudmqtt.com\u0022, 1883, false, null, null, MqttSslProtocols.TLSv1_2);\r\n\r\n            //  client.MqttMsgPublishReceived \u002B= client_MqttMsgPublishReceived;\r\n            //  clientId = Guid.NewGuid().ToString();\r\n            //  client.Connect(clientId, \u0022suport1\u0022, \u002212345\u0022);\r\n\r\n            //   client.Subscribe(new string[] { \u0022suport1\u0022 }, new byte[] { 0 });   // we need arrays as parameters because we can subscribe to different topics with one call\r\n            //   SetText(\u0022\u0022);\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n            IP_START.Text = x.Split(\u0027,\u0027)[0].Trim();\r\n            IP_STOP.Text = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            _ipstart = x.Split(\u0027,\u0027)[0].Trim();\r\n            _ipstop = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            //  MessageBox.Show(IP_START.Text);\r\n\r\n\r\n            label44.Visible = false;\r\n            label45.Visible = false;\r\n            label46.Visible = false;\r\n            label47.Visible = false;\r\n            label48.Visible = false;\r\n            label49.Visible = false;\r\n            label50.Visible = false;\r\n\r\n            passall = File.ReadAllText(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            //  rede = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n            // rede1 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(0);\r\n            // rede2 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(1);\r\n            // rede3 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(2);\r\n            // rede = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n\r\n\r\n\r\n            fproj = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            FileIOPermission f2 = new FileIOPermission(FileIOPermissionAccess.AllAccess, \u0022C:\\\\compartilhamento\\\\\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n            int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n            string number = count.ToString().Trim();//System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n            label3.Text = number;\r\n            number2 = Int32.Parse(label3.Text);\r\n            //string constr = String.Format(@\u0022Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\u0022\u0022Excel 8.0;HDR=YES;IMEX=1;\u0022\u0022\u0022, \u0022C:\\\\data_base\\\\\u0022 \u002B label18.Text);\r\n            try\r\n            {\r\n                wifi_level();\r\n\r\n\r\n                textBox6.Select();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            ler_linha_projeto();\r\n            ler_linha();\r\n            ler_data_txt();\r\n            filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);\r\n            foreach (FilterInfo Device in filterInfoCollection)\r\n                cboCamera.Items.Add(Device.Name);\r\n            cboCamera.SelectedIndex = 0;\r\n            videoCaptureDevice = new VideoCaptureDevice();\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n            lcompany.Text = nome;\r\n            lname.Text = emp;\r\n            lfunc.Text = function;\r\n            lid.Text = id;\r\n            lvessel.Text = vessel;\r\n            lcheckin.Text = Label_initial[1];\r\n            lcheckout.Text = Label_final[1];\r\n            // button7.Visible = false;\r\n\r\n            dateTimePicker1.Visible = true;\r\n            dateTimePicker2.Visible = true;\r\n            // textBox2.Text = dateTimePicker1.Value.ToString();\r\n            richTextBox6.Visible = false;\r\n            richTextBox7.Visible = false;\r\n            filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);\r\n            foreach (FilterInfo Device in filterInfoCollection)\r\n                cboCamera.Items.Add(Device.Name);\r\n            cboCamera.SelectedIndex = 0;\r\n            videoCaptureDevice = new VideoCaptureDevice();\r\n\r\n\r\n\r\n            label18.Text = GetFiles(@\u0022C:\\compartilhamento\\data_base\u0022);\r\n\r\n            inicialize_qrreader();\r\n\r\n            lname.Text = label_nome[0];\r\n            lcompany.Text = label_emp[0];\r\n            lfunc.Text = label_Function[0];\r\n            lid.Text = label_Id[0];\r\n            lvessel.Text = label_vessel[0];\r\n            lproject.Text = label_porj[0];\r\n            lv1.Text = label_vaccine1[0];\r\n            lv2.Text = label_vaccine2[0];\r\n            lbustter.Text = label_reforco[0];\r\n            local1.Text = place1[0];\r\n            local2.Text = place2[0];\r\n            local3.Text = place3[0];\r\n            local4.Text = place4[0];\r\n            laccess.Text = label_acc[0];\r\n            level_yellow.Text = label_yellow[0];\r\n            level_green.Text = label_green[0];\r\n            level_red.Text = label_red[0];\r\n            lcheckin.Text = Label_initial[0];\r\n            lcheckout.Text = Label_final[0];\r\n            button1.Text = Label_Read_QRcode_On[0];\r\n            button28.Text = Label_Read_QRcode_Off[0];\r\n            button2.Text = Label_Create_QRcode[0];\r\n            button3.Text = Label_Show_data[0];\r\n            button4.Text = Label_Save_data[0];\r\n            // button5.Text = Label_Config[0];\r\n            button6.Text = Label_wifi[0];\r\n            button17.Text = Label_email[0];\r\n            button19.Text = Label_Mostrar_checkin[0];\r\n            button21.Text = Label_reset[0];\r\n            button22.Text = Label_fechar[0];\r\n            button8.Text = Label_entrada[0];\r\n            button9.Text = Label_saida[0];\r\n            button10.Text = Label_cancel[0];\r\n            label23.Text = label_onboard[0];\r\n            button27.Text = Label_reset_project[0];\r\n            button29.Text = label_reg[0];\r\n            label7.Text = button1.Text;\r\n            label6.Text = onboard[0];\r\n            label_cad.Text = label_cad1[0];\r\n\r\n            label53.Text = Label_53[0];\r\n            button41.Text = bt_41[0];\r\n            button42.Text = bt_42[0];\r\n            button43.Text = bt_43[0];\r\n            button44.Text = bt_44[0];\r\n            button45.Text = bt_45[0];\r\n            regs.Text = bt_regis[0];\r\n            _cad = cad_mode[0];\r\n            _read = read_mode[0];\r\n\r\n            /*\r\n             Label_reset\r\n                        String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                        String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                        String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                        String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                        String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                        String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n            */\r\n            panel11.Size = new Size(460, 455);\r\n            //  panel11.Location = new System.Drawing.Point(95, 150);\r\n            pictureBox7.Size = new Size(430, 420);\r\n            pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n            ip = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\IP.txt\u0022);\r\n            ip1 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(0);\r\n            ip2 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(1);\r\n            ip3 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(2);\r\n\r\n            textBox7.Focus();\r\n            textBox7.Text = \u0022\u0022;\r\n\r\n            GetBiosInformation();\r\n            // CloseExcel();\r\n            // myThread.Abort();\r\n            //  checa_host();\r\n            // atualiza_compartilhamento();\r\n            comp = 1;\r\n\r\n\r\n            try\r\n            {\r\n                // open file dialog\r\n                OpenFileDialog open = new OpenFileDialog();\r\n                // image filters\r\n                //  open.Filter = \u0022Image Files(*.jpg; *.jpeg; *.gif; *.bmp)|*.jpg; *.jpeg; *.gif; *.bmp\u0022;\r\n                String foto = @\u0022C:\\compartilhamento\\logo_criptoqrcode\\logo.png\u0022;\r\n                //  if (open.ShowDialog() == DialogResult.OK)\r\n                // {\r\n                // display image in picture box\r\n                pictureBox2.Image = new Bitmap(foto);\r\n                // image file path\r\n                // textBox1.Text = open.FileName;\r\n                // }\r\n                StreamReader sr2 = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                string x2 = sr2.ReadToEnd();\r\n                string[] y = x2.Split(\u0027\\n\u0027);\r\n                foreach (string s in y)\r\n                {\r\n                    comboBox1.Items.Add(s);\r\n                    comboBox2.Items.Add(s);\r\n                }\r\n                sr.Close();\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022O arquivo com a logo deve estar no formato PNG. Corriga o formato e inicie o programa novamente\u0022);\r\n                // throw new ApplicationException(\u0022Image loading error....\u0022);\r\n            }\r\n\r\n\r\n            int milliseconds = 5000;\r\n            Thread.Sleep(milliseconds);\r\n\r\n            MyhostName = System.Net.Dns.GetHostName();\r\n            string hostName = System.Net.Dns.GetHostName();\r\n            string myIP = Dns.GetHostByName(hostName).AddressList[0].ToString();\r\n            label66.Text = \u0022IP: \u0022 \u002B myIP;\r\n            timer10.Enabled = true;\r\n        }\r\n\r\n\r\n        Thread myThread = null;\r\n        int plant = 0;\r\n\r\n\r\n        public void checa_host()\r\n        {\r\n            if (checa_host_ == true)\r\n            {\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n\r\n                if (IP_START.Text == string.Empty)\r\n                {\r\n                    //MessageBox.Show(\u0022No IP address entered.\u0022, \u0022Error\u0022, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n                    // lblStatus.ForeColor = System.Drawing.Color.Red;\r\n                    // lblStatus.Text = \u0022No IP address entered.\u0022;\r\n                }\r\n                else\r\n                {\r\n\r\n                    //Create new thread for pinging\r\n                    //myThread = new Thread(() =\u003E scan(txtIP.Text));\r\n                    myThread = new Thread(() =\u003E scan2(IP_START.Text, IP_STOP.Text));\r\n                    myThread.Start();\r\n\r\n                    if (myThread.IsAlive == true)\r\n                    {\r\n                        // cmdStop.Enabled = true;\r\n                        //  cmdScan.Enabled = false;\r\n                        // txtIP.Enabled = false;\r\n                        // txtIP2.Enabled = false;\r\n                        //  MessageBox.Show(\u0022checa_host ok\u0022);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        static void SetDoubleBuffer(System.Windows.Forms.Control dgv, bool DoubleBuffered)\r\n        {\r\n            typeof(System.Windows.Forms.Control).InvokeMember(\u0022DoubleBuffered\u0022,\r\n                BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.SetProperty,\r\n                null, null, new object[] { DoubleBuffered });\r\n        }\r\n        private async void button3_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            try\r\n            {\r\n                String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n\r\n\r\n\r\n                /// criar_excel();\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                plant\u002B\u002B;\r\n                if (plant == 1)\r\n                {\r\n                    //  criar_excel();\r\n                    //if (libera == true)\r\n                    // {\r\n                    button34.Visible = true;\r\n                    // }\r\n                    // else\r\n                    // {\r\n                    //  button34.Visible = false;\r\n                    // }\r\n\r\n                    if (band == 0)\r\n                    {\r\n                        button3.Text = Label_close_data[0];\r\n                    }\r\n                    else\r\n                    {\r\n                        button3.Text = Label_close_data[1];\r\n                    }\r\n                    //  button3.Text = \u0022Close DataBase\u0022;\r\n                    //  button1.Enabled = false;\r\n                    //button2.Enabled = false;\r\n                    /*\r\n                    String name = \u0022Planilha1\u0022;\r\n\r\n\r\n\r\n                    string constr = String.Format(@\u0022Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\u0022\u0022Excel 8.0;HDR=YES;IMEX=1;\u0022\u0022\u0022, \u0022C:\\\\compartilhamento\\\\data_base\\\\\u0022 \u002B label18.Text);\r\n\r\n                    OleDbConnection con = new OleDbConnection(constr);\r\n                    OleDbCommand oconn = new OleDbCommand(\u0022Select * From [\u0022 \u002B name \u002B \u0022$]\u0022, con);\r\n                    con.Open();\r\n\r\n                    OleDbDataAdapter sda = new OleDbDataAdapter(oconn);\r\n                    System.Data.DataTable data = new System.Data.DataTable();\r\n                    sda.Fill(data);\r\n                    con.Close();\r\n\r\n                    */\r\n\r\n                    //  dataGridView1.FilterAndSortEnabled = true;\r\n                    // bindingSource1.DataSource = data;\r\n                    panel5.Visible = false;\r\n                    DisplayPresetData();\r\n\r\n                }\r\n                else\r\n                {\r\n                    dataGridView1.Visible = false;\r\n                    dataGridView1.Visible = false;\r\n                    button34.Visible = false;\r\n                    panel5.Visible = true;\r\n\r\n                    plant = 0;\r\n\r\n                    if (band == 0)\r\n                    {\r\n                        button3.Text = Label_Show_data[0];\r\n                    }\r\n                    else\r\n                    {\r\n                        button3.Text = Label_Show_data[1];\r\n                    }\r\n\r\n\r\n\r\n\r\n                    button1.Enabled = true;\r\n\r\n\r\n                    dataGridView1.DataSource = null;\r\n                    dataGridView1.CleanFilter();\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022data base corrompida ou n\u00E3o encontrada. feche a planilha se estiver aberta e inicie o programa novamente!\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void acha_palavra_txt()\r\n        {\r\n            if (l == 0)\r\n            {\r\n\r\n                lbResultado.Items.Clear();\r\n                Refresh();\r\n\r\n                string criterio = richTextBox4.Text;// id\r\n\r\n                string[] linhas = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                foreach (string linha in linhas)\r\n                {\r\n                    if (linha.Contains(criterio))\r\n                        lbResultado.Items.Add(linha);\r\n                }\r\n\r\n\r\n\r\n                if (lbResultado.Items.Count == 1)\r\n                {\r\n                    button8.Enabled = false;\r\n                    button9.Enabled = true;\r\n\r\n                }\r\n                if (lbResultado.Items.Count == 0)\r\n                {\r\n                    button8.Enabled = true;\r\n                    button9.Enabled = false;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        private void timer1_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            BarcodeReader Reader = new BarcodeReader();\r\n            Result result = Reader.Decode((Bitmap)pictureBox1.Image);\r\n            if (result != null)\r\n            {\r\n\r\n                try\r\n                {\r\n\r\n\r\n                    // timer2.Enabled = false;\r\n\r\n\r\n\r\n\r\n\r\n                    txtResult.Text = result.ToString();\r\n\r\n                    if (txtResult.Text.Length \u003E 10)\r\n                    {\r\n\r\n\r\n                        string text1 = txtResult.Lines[0];\r\n                        string mystring = text1.Remove(0, 6);\r\n                        richTextBox1.Text = mystring;\r\n\r\n                        string text2 = txtResult.Lines[1];\r\n                        mystring = text2.Remove(0, 9);\r\n                        richTextBox2.Text = mystring;\r\n\r\n                        string text3 = txtResult.Lines[2];\r\n                        mystring = text3.Remove(0, 10);\r\n                        richTextBox3.Text = mystring;\r\n\r\n                        string text4 = txtResult.Lines[3];\r\n                        mystring = text4.Remove(0, 4);\r\n                        richTextBox4.Text = mystring;\r\n\r\n                        string text5 = txtResult.Lines[4];\r\n                        mystring = text5.Remove(0, 8);\r\n                        comboBox1.Text = mystring;\r\n\r\n                        string text8 = txtResult.Lines[5];\r\n                        mystring = text8.Remove(0, 1);\r\n                        richTextBox8.Text = mystring;\r\n\r\n                        string text6 = txtResult.Lines[6];\r\n                        mystring = text6.Remove(0, 9);\r\n                        richTextBox6.Text = mystring;\r\n\r\n                        string text7 = txtResult.Lines[7];\r\n                        mystring = text7.Remove(0, 7);\r\n                        richTextBox7.Text = mystring;\r\n\r\n                        videoCaptureDevice.Stop();\r\n                        //  pictureBox1.BackgroundImage= Image.\r\n                        pictureBox7.BackgroundImage = Properties.Resources.barcode1;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        compare_data();\r\n\r\n                        acha_palavra_txt();\r\n\r\n                        timer1.Stop();\r\n\r\n\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n        }\r\n        int input_ok = 0;\r\n        private void zera()\r\n        {\r\n            if (input_ok == 0)\r\n            {\r\n                videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                videoCaptureDevice.Start();\r\n                timer1.Start();\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                button8.Visible = false;\r\n                button9.Visible = false;\r\n                button10.Visible = false;\r\n            }\r\n        }\r\n        private void cancelar()\r\n        {\r\n            // panel11.Visible = false;\r\n            // panel4.Visible = true;\r\n\r\n            /// maskedTextBox1.Text = \u0022 \u0022;\r\n            /// maskedTextBox2.Text = \u0022 \u0022;\r\n            ///maskedTextBox3.Text = \u0022 \u0022;\r\n            ///maskedTextBox4.Text = \u0022 \u0022;\r\n            ///maskedTextBox5.Text = \u0022 \u0022;\r\n\r\n            panel11.Visible = true;\r\n            pictureBox7.Image = Properties.Resources.barcode1;\r\n            panel11.BackColor = Color.White;\r\n            label8.Visible = false;\r\n            //pictureBox1.Image = Properties.Resources.frame;\r\n            input_ok = 0;\r\n\r\n            //  pictureBox1.Image = null;\r\n            /// pictureBox1.Image = Modern_Qr_code.Properties.Resources.\r\n\r\n            // panel4.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(51)))), ((int)(((byte)(51)))), ((int)(((byte)(76)))));\r\n            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n            //videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n            //videoCaptureDevice.Start();\r\n            // timer1.Start();\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n            // richTextBox9.Text = \u0022\u0022;\r\n            richTextBox10.Text = \u0022\u0022;\r\n            richTextBox11.Text = \u0022\u0022;\r\n            richTextBox12.Text = \u0022\u0022;\r\n            richTextBox13.Text = \u0022\u0022;\r\n            richTextBox14.Text = \u0022\u0022;\r\n            richTextBox16.Text = \u0022\u0022;\r\n            button8.Visible = false;\r\n            button9.Visible = false;\r\n            button10.Visible = false;\r\n            pictureBox1.Image = criptoqrcode.Properties.Resources.barcode1;\r\n        }\r\n        private void timer2_Tick(object sender, EventArgs e)\r\n        {\r\n            cancelar();\r\n            ckecked_false();\r\n            timer2.Stop();\r\n        }\r\n        int lista_ = 0;\r\n        private void mostra_conteudo_txt()\r\n        {\r\n            listBox1.Items.Clear();\r\n            lista_ = 0;\r\n\r\n            if (checkBox1.Checked == true)\r\n            {\r\n                panel6.Size = new Size(1695, 996); //1695; 996\r\n                panel6.Visible = true;\r\n                string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox1.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                        //  label67.Text = label27.Text;\r\n\r\n\r\n                    }\r\n                }\r\n                //  ler_linha();\r\n            }\r\n            else\r\n            {\r\n\r\n                if (new FileInfo(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Length \u003E= 0)\r\n                {\r\n\r\n                    panel6.Size = new Size(1695, 996);\r\n                    panel6.Visible = true;\r\n                    string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                    foreach (string s in Regex.Split(text, \u0022\\n\u0022))\r\n                    {\r\n\r\n                        listBox1.Items.Add(s);\r\n\r\n\r\n\r\n                    }\r\n\r\n                    //  ler_linha();\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        private void beep()\r\n        {\r\n\r\n            int frequency = 800;\r\n\r\n            // Set the Duration\r\n            int duration = 250;\r\n\r\n            // Play beep sound once\r\n            Console.Beep(frequency, duration);\r\n        }\r\n        private void timer3_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            try\r\n            {\r\n                string caminhoArquivo = @\u0022C:\\compartilhamento\\data_txt\\data4.txt\u0022;\r\n                string primeiraLinha = File.ReadLines(caminhoArquivo).First().Trim();\r\n                if (primeiraLinha == \u00221\u0022)\r\n                {\r\n                    //  panel12.BackColor = Color.GreenYellow;\r\n\r\n\r\n                    //ler_linha();\r\n                    Console.WriteLine($\u0022A primeira linha do arquivo \u00E9: {primeiraLinha}\u0022);\r\n\r\n                    using (StreamWriter sw = new StreamWriter(caminhoArquivo))\r\n                    {\r\n                        sw.WriteLine(\u00220\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                    }\r\n                }\r\n            }\r\n\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n\r\n\r\n            if (online == true)\r\n            {\r\n                wifi_level();\r\n            }\r\n\r\n            string datetime = DateTime.Now.ToString();\r\n            label19.Text = DateTime.Now.ToString();\r\n            label62.Text = DateTime.Now.ToString();\r\n            DateTime now = DateTime.Now;\r\n            int h = now.Hour;\r\n            int m = now.Minute;\r\n            int s = now.Second;\r\n\r\n            label22.Text = h \u002B \u0022:\u0022 \u002B m \u002B \u0022:\u0022 \u002B s.ToString().Trim();\r\n            //label22.Text = \u002211:27:00\u0022;\r\n\r\n            if (label22.Text == z)\r\n            {\r\n                //\r\n                //\r\n                //\r\n                //\r\n                // ();\r\n                //listBox1.Text = varPalavra;\r\n                mostra_conteudo_txt();\r\n                beep();\r\n                beep();\r\n                beep();\r\n                beep();\r\n                beep();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        private void escrever_palavra()\r\n\r\n        {\r\n            string nomeArquivo = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n\r\n\r\n            // Name: Henrique Kaique Costa Compay: Local 9  E - Mail: cristiano.engenharia.ac @gmail.com ID: 111099444\r\n            string textoInserir = \u0022Number: \u0022 \u002B richTextBox16.Text \u002B \u0022:  Name: \u0022 \u002B richTextBox2.Text \u002B \u0022:  Vessel: \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022:  Compay: \u0022 \u002B richTextBox1.Text \u002B \u0022  Id: \u0022 \u002B richTextBox4.Text \u002B \u0022  :E-Mail: \u0022 \u002B richTextBox8.Text \u002B \u0022 :  \u0022 \u002B DateTime.Now;//\r\n            int numeroLinha = Convert.ToInt32(Linhas);\r\n            ArrayList linhas = new ArrayList();\r\n\r\n            if (File.Exists(nomeArquivo))\r\n            {\r\n                try\r\n                {\r\n                    rdr = new StreamReader(nomeArquivo);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022O arquivo : \u0022 \u002B nomeArquivo \u002B \u0022 n\u00E3o existe...\u0022);\r\n                return;\r\n            }\r\n\r\n            string linha;\r\n\r\n            while ((linha = rdr.ReadLine()) != null)\r\n            {\r\n                try\r\n                {\r\n                    linhas.Add(linha);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            rdr.Close();\r\n\r\n            if (linhas.Count \u003E numeroLinha)\r\n                linhas.Insert(numeroLinha, textoInserir);\r\n            else\r\n                linhas.Add(textoInserir);\r\n\r\n            StreamWriter wrtr = new StreamWriter(nomeArquivo);\r\n\r\n            foreach (string strNewLine in linhas)\r\n            {\r\n                wrtr.WriteLine(strNewLine);\r\n            }\r\n            wrtr.Close();\r\n            textoInserir = \u0022\u0022;\r\n            // txtArquivo.Text = AbreArquivoTexto(nomeArquivo);\r\n\r\n        }\r\n\r\n        string ll;\r\n        private void apaga_palavra_txt()\r\n        {\r\n            if (l == 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n                string tempFile = Path.GetTempFileName();\r\n\r\n                using (var sr = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022))\r\n                {\r\n                    using (var sw = new StreamWriter(tempFile))\r\n                    {\r\n                        string line;\r\n\r\n                        while ((line = sr.ReadLine()) != null)\r\n                        {\r\n\r\n                            //Name: Rodrigo  Compay: Googlemarine  Id: 111222333\r\n\r\n                            ll = RemoveEnd(line, 23);\r\n                            //  MessageBox.Show(ll);\r\n\r\n                            // Number: 10  Name: Cristiano de Araujo Calheiros  Compay: Googlemarine Id: 111098414  :E - Mail: cristiano.engenharia.ac @gmail.com\r\n                            if (ll != \u0022Number: \u0022 \u002B richTextBox16.Text \u002B \u0022:  Name: \u0022 \u002B richTextBox2.Text \u002B \u0022:  Vessel: \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022:  Compay: \u0022 \u002B richTextBox1.Text \u002B \u0022  Id: \u0022 \u002B richTextBox4.Text \u002B \u0022  :E-Mail: \u0022 \u002B richTextBox8.Text)\r\n                                sw.WriteLine(line);\r\n                        }\r\n                    }\r\n                }\r\n                File.Copy(tempFile, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n\r\n                // File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                // File.Move(tempFile, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n        }\r\n\r\n        private void in_out_alt()\r\n        {\r\n            checa_host_ = false;\r\n            timer9.Enabled = false;\r\n            lbResultado.Items.Clear();\r\n            Refresh();\r\n            string criterio = richTextBox4.Text;// id\r\n            string[] linhas = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n            foreach (string linha in linhas)\r\n            {\r\n                if (linha.Contains(criterio))\r\n                    lbResultado.Items.Add(linha);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            if (lbResultado.Items.Count == 1)\r\n            {\r\n\r\n                // MessageBox.Show(\u0022existe\u0022);\r\n                try\r\n                {\r\n\r\n                    comp = 0;\r\n                    //   ler_linha();\r\n                    // \r\n                    //timer8.Stop();\r\n                    pictureBox7.Image = Properties.Resources.barcode1;\r\n                    panel11.BackColor = Color.White;\r\n                    label8.Visible = false;\r\n\r\n\r\n\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                    listBox1.Items.Clear();\r\n                    input_ok = 0;\r\n                    output_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                    output_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n                    input_data = \u0022*\u0022;\r\n                    input_hora = \u0022*\u0022;\r\n                    apaga_palavra_txt();\r\n\r\n                    panel4.BackColor = Color.White;\r\n                    videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                    videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                    // videoCaptureDevice.Start();\r\n                    // timer1.Start();\r\n                    pictureBox7.Image = Properties.Resources.barcode1;\r\n                    //  CarregarPlanilha();\r\n                    //   carrega_planilha_txt();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = false;\r\n                    //  checa_host();\r\n                    // atualiza_compartilhamento();\r\n                    // ler_linha();\r\n                    // ckecked_false();\r\n                    carrega_planilha2_txt();\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(ex.Message);\r\n                }\r\n                comp = 1;\r\n            }\r\n            if (lbResultado.Items.Count == 0)\r\n            {\r\n                // MessageBox.Show(\u0022n\u00E3o existe\u0022);\r\n                try\r\n                {\r\n                    if (checado == 1)\r\n                    {\r\n                        comp = 0;\r\n                        // ler_linha();\r\n                        // ckecked_false();\r\n                        // timer8.Stop();\r\n\r\n                        pictureBox7.Image = Properties.Resources.barcode1;\r\n                        panel11.BackColor = Color.White;\r\n                        label8.Visible = false;\r\n\r\n\r\n\r\n\r\n                        if (textBox7.SelectionLength \u003E= 0)\r\n                        {\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022\u0022;\r\n                        }\r\n\r\n                        input_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                        pictureBox7.Image = Properties.Resources.barcode1;\r\n                        input_ok = 0;\r\n\r\n                        input_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n                        output_data = \u0022*\u0022;\r\n                        output_hora = \u0022*\u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                        videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n\r\n                        acha_palavra_txt();\r\n                        escrever_palavra();\r\n\r\n\r\n\r\n\r\n                        button8.Visible = false;\r\n                        button9.Visible = false;\r\n                        button10.Visible = false;\r\n\r\n                        ler_linha();\r\n                        //  ckecked_false();\r\n                        // CarregarPlanilha();\r\n                        carrega_planilha2_txt();\r\n                        // checa_host();\r\n                        //atualiza_compartilhamento();\r\n                        comp = 1;\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022PLease check local or level\u0022);\r\n                    }\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(ex.Message);\r\n                }\r\n\r\n                checa_host_ = true;\r\n            }\r\n\r\n            /////////////////////////////////////////// in/////////////////////////////////////////\r\n\r\n            ///////////////////////////////////////////////////////\r\n            ///\r\n            /// \r\n            /// \r\n            /////////////////////////////out///////////////////////\r\n\r\n            ////////////////////////////////////////////////////////////////\r\n            timer9.Enabled = true;\r\n        }\r\n        private void compare_data()\r\n        {\r\n\r\n            if (id_onboard2 == true)\r\n            {\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n                var parameterDate_ASo = DateTime.ParseExact(richTextBox10.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var parameterDate_initial = DateTime.ParseExact(richTextBox6.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var parameterDate_final = DateTime.ParseExact(richTextBox7.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var todaysDate = DateTime.Today;\r\n\r\n\r\n\r\n                if (rich5 != comboBox1.Text.Trim() || rich9 != richTextBox9.Text.Trim())\r\n                {\r\n                    //  richTextBox5.Text = text10[7].Remove(0, 8);\r\n                    //  richTextBox9.Text = text10[8].Remove(0, 0);\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    // label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Embarca\u00E7\u00E3o \u0022 \u002B rich5 \u002B \u0022 ou Projeto divergente\u0022;\r\n                    try\r\n                    {\r\n\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n\r\n\r\n\r\n\r\n                    timer2.Start();\r\n                    //  DateTime now = DateTime.Now;\r\n                    //  while (DateTime.Now.Subtract(now).Seconds \u003C 3)\r\n                    // {\r\n                    // wait for 60 seconds.\r\n                    //  }\r\n                    // cancelar_teste();\r\n                    //  Thread.Sleep(3000);\r\n                }\r\n\r\n\r\n\r\n                if (company_loc == true)\r\n                {\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022BLOQUEADO: CART\u00C3O INUTILIZADO !\u0022;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n\r\n\r\n                    timer2.Start();\r\n                }\r\n\r\n                if (bb == \u0022Bloqueado\u0022)\r\n                {\r\n                    // pictureBox7.Image \r\n                    //pictureBox7.Image \r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    //label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    button7.Visible = false;\r\n                    btloc.Visible = true;\r\n                    label8.Text = \u0022BLOQUEADO : \u0022 \u002B label37.Text;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n                    DateTime now = DateTime.Now;\r\n                    while (DateTime.Now.Subtract(now).Seconds \u003C 5)\r\n                    {\r\n                        // wait for 60 seconds.\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n                if (parameterDate_initial \u003E parameterDate_ASo)\r\n                {\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    //label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Aso vencido\u0022;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                if ((parameterDate_initial \u003C todaysDate) \u0026\u0026 (parameterDate_final \u003C todaysDate))\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n                if ((parameterDate_initial \u003E todaysDate) \u0026\u0026 (parameterDate_final \u003E todaysDate))\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n                if (parameterDate_initial \u003E parameterDate_final)\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n                if (parameterDate_final == todaysDate \u0026\u0026 parameterDate_initial \u003C parameterDate_ASo)\r\n                {\r\n\r\n\r\n\r\n\r\n\r\n                    if (rich5 == comboBox1.Text.Trim() \u0026\u0026 rich9 == richTextBox9.Text.Trim() \u0026\u0026 company_loc == false \u0026\u0026 bb != \u0022Bloqueado\u0022)\r\n                    {\r\n\r\n                        entrou = true;\r\n                        label8.Visible = true;\r\n                        label8.Text = \u0022Liberado\u0022;\r\n                        input_ok = 1;\r\n                        panel11.BackColor = Color.GreenYellow;\r\n                        beep();\r\n\r\n                        // bool lido = true;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n                        button7.Visible = true;\r\n                        btloc.Visible = false;\r\n                        try\r\n                        {\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                            button7.Visible = true;\r\n\r\n                        }\r\n                        catch\r\n                        {\r\n                            button7.Visible = true;\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                        }\r\n                        if (panel11.BackColor == Color.GreenYellow)\r\n                        {\r\n                            // MessageBox.Show(\u00221\u0022);\r\n                            in_out_alt();\r\n                            //panel11.BackColor =Color.White;\r\n                        }\r\n\r\n                        rich9 = \u0022\u0022;\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if ((parameterDate_final \u003E todaysDate) \u0026\u0026 (parameterDate_initial \u003C= todaysDate) \u0026\u0026 (parameterDate_initial \u003C parameterDate_ASo))\r\n                {\r\n\r\n                    if ((rich5 == comboBox1.Text.Trim()) \u0026\u0026 (rich9 == richTextBox9.Text.Trim()) \u0026\u0026 company_loc == false \u0026\u0026 bb != \u0022Bloqueado\u0022)\r\n                    {\r\n\r\n                        entrou = true;\r\n                        label8.Visible = true;\r\n                        label8.Text = \u0022Liberado\u0022;\r\n                        input_ok = 1;\r\n                        panel11.BackColor = Color.GreenYellow;\r\n                        beep();\r\n                        //  bool lido = true;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n                        button7.Visible = true;\r\n                        btloc.Visible = false;\r\n                        input_ok = 1;\r\n                        try\r\n                        {\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n                            button7.Visible = true;\r\n                        }\r\n                        catch\r\n                        {\r\n                            pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                            button7.Visible = true;\r\n                        }\r\n                        if (panel11.BackColor == Color.GreenYellow)\r\n                        {\r\n                            //  MessageBox.Show(\u00222\u0022);\r\n                            in_out_alt();\r\n                            // panel11.BackColor = Color.White;\r\n                        }\r\n\r\n                        rich9 = \u0022\u0022;\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        private void alterado()\r\n        {\r\n            //  richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n            // richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n            try\r\n            {\r\n                int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n                string sec = secondLine2.Split(\u0027:\u0027)[26].Trim();\r\n                string pass11 = secondLine2.Split(\u0027:\u0027)[5].Trim();\r\n                string pass12 = secondLine2.Split(\u0027:\u0027)[9].Trim();\r\n                string pass13 = secondLine2.Split(\u0027:\u0027)[3].Trim();\r\n                string pass14 = secondLine2.Split(\u0027:\u0027)[11].Trim();\r\n                string pass15 = secondLine2.Split(\u0027:\u0027)[17].Trim();\r\n                string pass16 = secondLine2.Split(\u0027:\u0027)[19].Trim(); // NR34\r\n                string pass17 = secondLine2.Split(\u0027:\u0027)[21].Trim(); // VA1\r\n                string pass18 = secondLine2.Split(\u0027:\u0027)[23].Trim(); // V2                                                                                                                                                                   //17\r\n                string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n                string pass20 = secondLine2.Split(\u0027:\u0027)[31].Trim();// V BOOSTER\r\n                string pass21 = secondLine2.Split(\u0027:\u0027)[32].Trim();// V BOOSTER\r\n                string pass22 = secondLine2.Split(\u0027:\u0027)[33].Trim();// V BOOSTER\r\n                                                                  //  0   1      2                       3        4              5         6              7  8           9         10                                  11      12             13        14      15    16           17     18           19          20            21          22           23               24            25 26     27   \r\n                                                                  //Number : 1 : Name : CRISTIANO CALHEIROS 3 : Compay : GOOGLEMARINE :Funcition:  ENGENHEIRO  :Id: 1110988400 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Googlemarine : Project : 2001 : ASO : 02/02/2024 : NR-34 : 02/02/2025 : Vaccine-1 : 02/02/2026 : Vaccine-2 : 02/02/2027 : Booster vaccine : 02/02/2028 :  : COMUM :\r\n                if (pass11.Trim() != richTextBox1.Text.Trim())  //COMPANY\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n\r\n\r\n                if (pass12.Trim() != richTextBox4.Text.Trim())  // IDENTIDADE\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass13.Trim() != richTextBox2.Text.Trim()) // NOME\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass14.Trim() != richTextBox8.Text.Trim()) // email\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass15.Trim() != maskedTextBox1.Text.Trim()) // aso\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass16.Trim() != maskedTextBox2.Text.Trim()) // nr34\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass17.Trim() != maskedTextBox3.Text.Trim()) // vacina 1\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass18.Trim() != maskedTextBox4.Text.Trim()) // vacina 2\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass19.Trim() != maskedTextBox5.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass20.Trim() != richTextBox6.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass21.Trim() != richTextBox7.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass22.Trim() != richTextBox15.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass11.Trim() == richTextBox1.Text.Trim() \u0026\u0026 pass12.Trim() == richTextBox4.Text.Trim() \u0026\u0026 pass13.Trim() == richTextBox2.Text.Trim())\r\n                {\r\n                    if (pass14.Trim() == richTextBox8.Text.Trim() \u0026\u0026 pass15.Trim() == maskedTextBox1.Text.Trim() \u0026\u0026 pass16.Trim() == maskedTextBox2.Text.Trim())\r\n                    {\r\n                        if (pass17.Trim() == maskedTextBox3.Text.Trim() \u0026\u0026 pass18.Trim() == maskedTextBox4.Text.Trim() \u0026\u0026 pass19.Trim() == maskedTextBox5.Text.Trim() \u0026\u0026 pass20.Trim() == richTextBox6.Text.Trim() \u0026\u0026 pass21.Trim() == richTextBox7.Text.Trim() \u0026\u0026 pass21.Trim() == richTextBox15.Text.Trim())\r\n                        {\r\n                            alter = false; // \r\n                            print_ = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        int test2 = 0;\r\n        private void timer4_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            if (vid == 1)\r\n            {\r\n\r\n\r\n\r\n\r\n                ckecked_false();\r\n                // string cripto = \u0022\u0022;\r\n                textBox7.Text.Replace(\u0027;\u0027, \u0027/\u0027);\r\n                string zzz = textBox7.Text.Replace(\u0027;\u0027, \u0027/\u0027);\r\n                textBox8.Text = zzz.Trim();\r\n\r\n                try\r\n                {\r\n                    Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n                    criptografia.Key = \u0022Etec2017\u0022;\r\n                    textBox8.Text = criptografia.Decrypt(zzz);\r\n                    textBox10.Text = textBox8.Text;\r\n                    test2 = 1;\r\n                    string textoqr = zzz;\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    textBox7.Text = \u0022 \u0022;\r\n                    textBox8.Text = \u0022 \u0022;\r\n                    timer4.Stop();\r\n                    MessageBox.Show(\u0022Invalid card\u0022, ex.Message.Substring(2, 0));\r\n                    test2 = 0;\r\n                    tempo = 0;\r\n                }\r\n\r\n                if (test2 == 1)\r\n                {\r\n                    int count = textBox8.Lines.Length;\r\n                    TextReader read = new System.IO.StringReader(textBox8.Text);\r\n                    int rows = 150;\r\n\r\n                    string[] text10 = new string[rows];\r\n                    for (int r = 1; r \u003C rows; r\u002B\u002B)\r\n                    {\r\n                        text10[r] = read.ReadLine();\r\n                    }\r\n\r\n\r\n\r\n                    if (count \u003E= 8)\r\n                    {\r\n\r\n                        try\r\n                        {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            richTextBox16.Text = text10[1].Remove(0, 6);\r\n                            richTextBox1.Text = text10[3].Remove(0, 9);\r\n                            richTextBox2.Text = text10[2].Remove(0, 6);\r\n                            richTextBox3.Text = text10[4].Remove(0, 10);\r\n                            richTextBox4.Text = text10[5].Remove(0, 4);\r\n                            richTextBox8.Text = text10[6].Remove(0, 1);\r\n                            //  richTextBox5.Text = text10[7].Remove(0, 8);\r\n                            //  richTextBox9.Text = text10[8].Remove(0, 0);\r\n\r\n\r\n                            rich5 = text10[7].Remove(0, 8).Trim();\r\n                            //    MessageBox.Show(rich5);\r\n                            rich9 = text10[8].Remove(0, 0).Trim();\r\n                            // label33.Text = rich5;\r\n                            //  label34.Text = rich9;\r\n                            richTextBox10.Text = text10[9].Remove(0, 0);\r\n                            richTextBox11.Text = text10[10].Remove(0, 0);\r\n                            richTextBox12.Text = text10[11].Remove(0, 0);\r\n                            richTextBox13.Text = text10[12].Remove(0, 0);\r\n                            richTextBox14.Text = text10[13].Remove(0, 0);\r\n                            richTextBox6.Text = text10[14].Remove(0, 6).Trim();\r\n                            richTextBox7.Text = text10[15].Remove(0, 4).Trim();\r\n                            richTextBox15.Text = \u0022https://drive.google.com/file/d/\u0022 \u002B text10[16] \u002B \u0022/view?usp=sharing\u0022;\r\n                            maskedTextBox1.Text = richTextBox10.Text;\r\n                            maskedTextBox2.Text = richTextBox11.Text;\r\n                            maskedTextBox3.Text = richTextBox12.Text;\r\n                            maskedTextBox4.Text = richTextBox13.Text;\r\n                            maskedTextBox5.Text = richTextBox14.Text;\r\n                            ///  MessageBox.Show(richTextBox16.Text);\r\n\r\n                            check_id_onboard2();\r\n\r\n\r\n\r\n                            if (id_onboard2 == true)\r\n                            {\r\n\r\n                                timer4.Stop();\r\n                                MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 EM OUTRA EMBARCA\u00C7\u00C3O! SER\u00C1 NECESS\u00C1RIO DAR A SA\u00CDDA PARA A LIBERA\u00C7\u00C3O DE ENTRADA A ESTA EMBARCA\u00C7\u00C3O\u0022);\r\n\r\n\r\n\r\n                            }\r\n\r\n\r\n                            if (id_onboard2 == false)\r\n                            {\r\n\r\n\r\n\r\n                                if (text10[17].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local1.Checked = true;\r\n\r\n                                }\r\n                                if (text10[18].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local2.Checked = true;\r\n                                }\r\n                                if (text10[19].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local3.Checked = true;\r\n                                }\r\n                                if (text10[20].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local4.Checked = true;\r\n                                }\r\n                                if (text10[21].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_yellow.Checked = true;\r\n                                }\r\n                                if (text10[22].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_green.Checked = true;\r\n                                }\r\n                                if (text10[23].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_red.Checked = true;\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                // path3 = \u0022https://drive.google.com/file/d/\u0022 \u002B subs2[5] \u002B \u0022/view?usp=sharing\u0022;\r\n                                // panel11.Visible = true;\r\n                                //  panel4.Visible = false;\r\n\r\n                                /////////////////////\r\n\r\n                                // string ve = textBox10.Lines[6];\r\n                                textBox15.Text = text10[7];\r\n\r\n                                if (text10[7] == \u0022VESSEL: \u0022 \u002B comboBox1.Text.Trim())\r\n                                {\r\n                                    try\r\n                                    {\r\n                                        path2 = richTextBox15.Text;\r\n                                        subs2 = path2.Split(\u0027/\u0027);\r\n                                        path3 = subs2[5];\r\n                                    }\r\n                                    catch\r\n                                    {\r\n\r\n                                    }\r\n                                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B richTextBox6.Text \u002B \u0022 :\u0022 \u002B richTextBox7.Text \u002B \u0022 :\u0022 \u002B path3;\r\n                                    string filePath = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n                                    string[] lines = File.ReadAllLines(filePath);\r\n\r\n                                    for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                                    {\r\n                                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                                        {\r\n                                            ver = 1;\r\n                                            lines[i] = teste2.Trim();\r\n                                            /// MessageBox.Show(\u0022Achei: \u0022 \u002B richTextBox4.Text.Trim());\r\n                                        }\r\n\r\n                                    }\r\n                                    //and save it:\r\n\r\n                                    File.WriteAllLines(filePath, lines);\r\n                                    ver = 0;\r\n\r\n                                }\r\n                                //////////////////\r\n\r\n\r\n                                //  pictureBox1.Visible = false;\r\n                                //  panel4.Visible = false;\r\n                                //  panel4.Size = new Size(360, 355);\r\n                                // panel4.Location = new System.Drawing.Point(95, 150);\r\n                                // pictureBox1.Size = new Size(330, 320);\r\n                                // pictureBox1.Location = new System.Drawing.Point(15, 18);\r\n\r\n                                // panel4.Visible = true;\r\n                                //  pictureBox1.Visible = true;\r\n                                // panel10.Visible = false;\r\n\r\n\r\n\r\n                                // button8.Visible = true;\r\n                                // button9.Visible = true;\r\n                                // button10.Visible = true;\r\n                                // pictureBox1.BackgroundImage = Properties.Resources.barcode1;\r\n                                int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                                string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n                                string sec = secondLine2.Split(\u0027:\u0027)[26].Trim();\r\n                                string pass11 = secondLine2.Split(\u0027:\u0027)[5].Trim();\r\n                                string pass12 = secondLine2.Split(\u0027:\u0027)[9].Trim();\r\n                                string pass13 = secondLine2.Split(\u0027:\u0027)[3].Trim();\r\n                                string pass14 = secondLine2.Split(\u0027:\u0027)[11].Trim();\r\n                                string pass15 = secondLine2.Split(\u0027:\u0027)[17].Trim();\r\n                                string pass16 = secondLine2.Split(\u0027:\u0027)[19].Trim(); // NR34\r\n                                string pass17 = secondLine2.Split(\u0027:\u0027)[21].Trim(); // VA1\r\n                                string pass18 = secondLine2.Split(\u0027:\u0027)[23].Trim(); // V2                                                                                                                                                                   //17\r\n                                string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n\r\n                                //   string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n\r\n\r\n\r\n\r\n\r\n                                //  0   1      2                       3        4              5         6              7  8           9         10                                  11      12             13        14      15    16           17     18           19          20            21          22           23               24            25 26     27   \r\n                                //Number : 1 : Name : CRISTIANO CALHEIROS 3 : Compay : GOOGLEMARINE :Funcition:  ENGENHEIRO  :Id: 1110988400 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Googlemarine : Project : 2001 : ASO : 02/02/2024 : NR-34 : 02/02/2025 : Vaccine-1 : 02/02/2026 : Vaccine-2 : 02/02/2027 : Booster vaccine : 02/02/2028 :  : COMUM :\r\n                                if (pass11.Trim() != richTextBox1.Text.Trim())  //COMPANY\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n\r\n\r\n                                if (pass12.Trim() != richTextBox4.Text.Trim())  // IDENTIDADE\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n                                if (pass13.Trim() != richTextBox2.Text.Trim()) // NOME\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n                                if (pass14.Trim() != richTextBox8.Text.Trim()) // email\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass15.Trim() != maskedTextBox1.Text.Trim()) // aso\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass16.Trim() != maskedTextBox2.Text.Trim()) // nr34\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass17.Trim() != maskedTextBox3.Text.Trim()) // vacina 1\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass18.Trim() != maskedTextBox4.Text.Trim()) // vacina 2\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass19.Trim() != maskedTextBox5.Text.Trim()) // vacina refor\u00E7o\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n\r\n                                if (pass11.Trim() == richTextBox1.Text.Trim() \u0026\u0026 pass12.Trim() == richTextBox4.Text.Trim() \u0026\u0026 pass13.Trim() == richTextBox2.Text.Trim())\r\n                                {\r\n                                    if (pass14.Trim() == richTextBox8.Text.Trim() \u0026\u0026 pass15.Trim() == maskedTextBox1.Text.Trim() \u0026\u0026 pass16.Trim() == maskedTextBox2.Text.Trim())\r\n                                    {\r\n                                        if (pass17.Trim() == maskedTextBox3.Text.Trim() \u0026\u0026 pass18.Trim() == maskedTextBox4.Text.Trim() \u0026\u0026 pass19.Trim() == maskedTextBox5.Text.Trim())\r\n                                        {\r\n                                            company_loc = false; // \r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n\r\n\r\n                                if (sec == \u0022Bloqueado\u0022)\r\n                                {\r\n                                    bb = \u0022Bloqueado\u0022;\r\n                                    label37.Text = secondLine2.Split(\u0027:\u0027)[28];\r\n                                    // company_loc = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    bb = \u0022\u0022;\r\n                                    label37.Text = \u0022\u0022;\r\n                                    // company_loc = false;\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                acha_palavra_txt();\r\n                                compare_data();\r\n\r\n                                //  timer2.Enabled = true;\r\n                                textBox7.Text = \u0022\u0022;\r\n                                textBox8.Text = \u0022 \u0022;\r\n                                label37.Text = \u0022\u0022;\r\n                                tempo = 0;\r\n                            }\r\n\r\n                            timer4.Stop();\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            //  MessageBox.Show(\u0022\u0022,ex.Message);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        public async Task TestaPing(string url)\r\n        {\r\n            try\r\n            {\r\n                Ping pinger = new Ping();\r\n                PingReply resposta = await pinger.SendPingAsync(url);\r\n                ExibeInfoRespostaPing(resposta);\r\n                pinger.PingCompleted \u002B= pinger_PingCompleted;\r\n\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private static void pinger_PingCompleted(object sender, PingCompletedEventArgs e)\r\n        {\r\n            try\r\n            {\r\n                PingReply resposta = e.Reply;\r\n                if (e.Cancelled)\r\n                {\r\n                    MessageBox.Show($\u0022Ping para {e.UserState.ToString()} foi cancelado\u0022);\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show($\u0022Excepition lan\u00E7ada durante o ping:{ex.Message}\u0022);\r\n            }\r\n        }\r\n\r\n        private void ExibeInfoRespostaPing(PingReply resposta)\r\n        {\r\n\r\n            st = resposta.Status.ToString().Trim();\r\n            /// MessageBox.Show(st);\r\n            if (st == \u0022Success\u0022)\r\n            {\r\n                // panel12.BackColor = Color.YellowGreen;\r\n                // label40.Visible = false;\r\n\r\n                if (timer9.Enabled == false)\r\n                {\r\n\r\n                    // timer9.Start();\r\n                }\r\n                p = 1;\r\n                ping_local = 1;\r\n            }\r\n            if (st == \u0022TimedOut\u0022)\r\n            {\r\n                // panel12.BackColor = Color.Red;\r\n                // label40.Visible = true;\r\n                zzz = 0;\r\n                p = 0;\r\n                ping_local = 0;\r\n                // MessageBox.Show(\u0022sem comunica\u00E7\u00E3o\u0022);\r\n            }\r\n        }\r\n\r\n        private void timer8_Tick(object sender, EventArgs e)\r\n        {\r\n            //TestaPing(ip1);\r\n            // TestaPing(ip2);\r\n            //  TestaPing(ip3);\r\n            // checa_host();\r\n            //  MessageBox.Show(comp.ToString());\r\n            label51.Text = count2.ToString();\r\n            //  label51.Text = hostName;\r\n            String block = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n            if (comp == 1)\r\n            {\r\n                //checa_host();\r\n                //  atualiza_compartilhamento();\r\n                /// ler_linha();\r\n            }\r\n\r\n            if (count \u003E= 1)\r\n            {\r\n                // label51.Text = count.ToString();\r\n                // online_ = true;\r\n            }\r\n\r\n            DateTime fproj2 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            if (fproj2 \u003E fproj)\r\n            {\r\n\r\n                System.Windows.Forms.Application.Restart();\r\n\r\n            }\r\n\r\n\r\n            DateTime flogo2 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\logo.png\u0022);\r\n            if (flogo2 \u003E flogo3)\r\n            {\r\n\r\n\r\n                System.Windows.Forms.Application.Restart();\r\n\r\n\r\n            }\r\n            //  MessageBox.Show(flogo3.ToString() \u002B \u0022    \u0022 \u002B flogo2.ToString());\r\n            //    DateTime flogo;\r\n            //   DateTime flogo1;\r\n        }\r\n        private void ler_linha3()\r\n        {\r\n            //   String locked = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n\r\n            //  timer8.Stop();\r\n            try\r\n            {\r\n                // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n                string FileToRead = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n                TextReader Leitor = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);//Inicializa o Leitor\r\n                int Linhas = 0;\r\n                //  MessageBox.Show(\u0022acesso ok\u0022);\r\n                while (Leitor.Peek() != -1)\r\n                {//Enquanto o arquivo n\u00E3o acabar, o Peek n\u00E3o retorna -1 sendo adequando para o loop while...\r\n                    Linhas\u002B\u002B;//Incrementa 1 na contagem\r\n                    Leitor.ReadLine();//Avan\u00E7a uma linha no arquivo\r\n                }\r\n\r\n\r\n\r\n                label27.Text = Linhas.ToString();\r\n                //   label67.Text = label27.Text;\r\n                if (rich5 == comboBox1.Text.Trim())\r\n                {\r\n\r\n                }\r\n                Leitor.Close();\r\n            }\r\n            catch\r\n            {\r\n                //  MessageBox.Show(\u0022n\u00E3o consegui acessar o caminho  \u0022 \u002B @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        //  int comp = 1;\r\n        private void timer9_Tick(object sender, EventArgs e)\r\n        {\r\n            //myThread.Start();\r\n            // myThread.Abort();\r\n            //    panel12.BackColor = Color.Black;\r\n\r\n            try\r\n            {\r\n                if (checa_host_ == true)\r\n                {\r\n\r\n                    checa_host();\r\n                    //  compr = 1;\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void userloc()\r\n        {\r\n            panel5.Visible = true;\r\n            button1.Enabled = true;\r\n            button28.Enabled = true;\r\n            // button2.Enabled = true;\r\n            //  button17.Enabled = true;\r\n            //  button29.Enabled = true;\r\n            button3.Enabled = true;\r\n            button4.Enabled = true;\r\n            button19.Enabled = true;\r\n        }\r\n        private void userlocon()\r\n        {\r\n            button1.Enabled = false;\r\n            button28.Enabled = false;\r\n            // button2.Enabled = false;\r\n            //  button17.Enabled = false;\r\n            //  button29.Enabled = false;\r\n            button3.Enabled = false;\r\n            button4.Enabled = false;\r\n            button19.Enabled = false;\r\n            panel5.Visible = false;\r\n        }\r\n        bool verz = false;\r\n\r\n        public void loc_crew()\r\n        {\r\n            button21.Visible = false;\r\n            button6.Visible = false;\r\n            button4.Visible = false;\r\n            button3.Visible = false;\r\n            // button29.Visible = false;\r\n            button28.Visible = false;\r\n            // button17.Visible = false;\r\n            //  button2.Visible = false;\r\n            button1.Visible = false;\r\n            button19.Visible = false;\r\n            monitor();\r\n        }\r\n\r\n        public void unloc_crew()\r\n        {\r\n            button21.Visible = true;\r\n            button6.Visible = true;\r\n            button4.Visible = true;\r\n            button3.Visible = true;\r\n            //button29.Visible = true;\r\n            button28.Visible = true;\r\n            //button17.Visible = true;\r\n            // button2.Visible = true;\r\n            button1.Visible = true;\r\n            button19.Visible = true;\r\n        }\r\n        private void button35_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            verz = true;\r\n            String pass0 = passall.Split(\u0027,\u0027)[0];\r\n            String pass1 = passall.Split(\u0027,\u0027)[1];\r\n            String pass2 = passall.Split(\u0027,\u0027)[2];\r\n            String pass3 = passall.Split(\u0027,\u0027)[3];\r\n            String pass4 = passall.Split(\u0027,\u0027)[4];\r\n            String pass5 = passall.Split(\u0027,\u0027)[5];\r\n            String pass6 = passall.Split(\u0027,\u0027)[6];\r\n            String pass7 = passall.Split(\u0027,\u0027)[7];\r\n            String pass8 = passall.Split(\u0027,\u0027)[8];\r\n            String pass9 = passall.Split(\u0027,\u0027)[9];\r\n            String pass10 = passall.Split(\u0027,\u0027)[10];\r\n            String pass11 = passall.Split(\u0027,\u0027)[11];\r\n            //   if (verz == true)\r\n            // {\r\n\r\n\r\n            //  }\r\n            try\r\n            {\r\n                if (comuser.SelectedItem.ToString() == pass0.Trim() \u0026\u0026 textpass.Text.Trim() == pass1.Trim())\r\n                {\r\n\r\n\r\n                    MessageBox.Show(\u0022Usu\u00E1rio Admin \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = false;\r\n                    // button27.Visible = true;\r\n                    regs.Visible = true;\r\n                    panel17.Visible = true;\r\n                    panel19.Visible = true;\r\n\r\n                    libera = true;\r\n                    userloc();\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass0.Trim() \u0026\u0026 textpass.Text.Trim() != pass1.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass2.Trim() \u0026\u0026 textpass.Text.Trim() == pass3.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio Admin nivel 2 \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = false;\r\n                    libera = true;\r\n                    userloc();\r\n                    verz = false;\r\n                    // button27.Visible = true;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n                    regs.Visible = true;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass2.Trim() \u0026\u0026 textpass.Text.Trim() != pass3.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass4.Trim() \u0026\u0026 textpass.Text.Trim() == pass5.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    textBox7.Focus();\r\n                    unloc_crew();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass4.Trim() \u0026\u0026 textpass.Text.Trim() != pass5.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass6.Trim() \u0026\u0026 textpass.Text.Trim() == pass7.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass6.Trim() \u0026\u0026 textpass.Text.Trim() != pass7.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass8.Trim() \u0026\u0026 textpass.Text.Trim() == pass9.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    verz = false;\r\n                    userloc();\r\n                    button27.Visible = false;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    regs.Visible = false;\r\n                    unloc_crew();\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass8.Trim() \u0026\u0026 textpass.Text.Trim() != pass9.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass10.Trim() \u0026\u0026 textpass.Text.Trim() == pass11.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n\r\n\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    regs.Visible = false;\r\n                    loc_crew();\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass10.Trim() \u0026\u0026 textpass.Text.Trim() != pass11.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n\r\n\r\n                }\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == \u0022\u0022 \u0026\u0026 textpass.Text.Trim() == \u0022\u0022)\r\n                {\r\n\r\n                    MessageBox.Show(\u0022ESCOLHA O USU\u00C1RIO E DIGITE A SENHA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n            // MessageBox.Show(libera.ToString());\r\n        }\r\n\r\n        private void button28_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            if (comboBox1.Text != \u0022\u0022)\r\n            {\r\n\r\n                label44.Visible = true;\r\n                label54.Visible = true;\r\n                label45.Visible = true;\r\n                label46.Visible = true;\r\n                label47.Visible = true;\r\n                //  label48.Visible = true;\r\n                label49.Visible = true;\r\n                label50.Visible = true;\r\n\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                local1.Enabled = true;\r\n                local2.Enabled = true;\r\n                local4.Enabled = true;\r\n                label37.Visible = false;\r\n\r\n                dataGridView1.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                //  button29.Enabled = true;\r\n                btloc.Visible = false;\r\n                button7.Visible = false;\r\n                // CHLocked.Visible = false;\r\n                richTextBox4.ReadOnly = false;\r\n                richTextBox16.ReadOnly = false;\r\n                plant = 0;\r\n\r\n                if (band == 0)\r\n                {\r\n                    button3.Text = Label_Show_data[0];\r\n                }\r\n                else\r\n                {\r\n                    button3.Text = Label_Show_data[1];\r\n                }\r\n\r\n                // button3.Text = \u0022Show DataBase\u0022;\r\n\r\n\r\n                button1.Enabled = true;\r\n\r\n                panel11.Visible = true;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                panel11.BackColor = Color.White;\r\n                label8.Visible = false;\r\n                //  button7.Visible = true;\r\n                maskedTextBox1.ReadOnly = false;\r\n                maskedTextBox2.ReadOnly = false;\r\n                maskedTextBox3.ReadOnly = false;\r\n                maskedTextBox4.ReadOnly = false;\r\n                maskedTextBox5.ReadOnly = false;\r\n                maskedTextBox1.Visible = true;\r\n                maskedTextBox2.Visible = true;\r\n                maskedTextBox3.Visible = true;\r\n                maskedTextBox4.Visible = true;\r\n                maskedTextBox5.Visible = true;\r\n                maskedTextBox1.Text = \u0022 \u0022;\r\n                //maskedTextBox2.Text = \u0022 \u0022;\r\n                //maskedTextBox3.Text = \u0022 \u0022;\r\n                // maskedTextBox4.Text = \u0022 \u0022;\r\n                //  maskedTextBox5.Text = \u0022 \u0022;\r\n                // MaskedTextBox m = new MaskedTextBox();\r\n                // m.Text = \u002200000000\u0022;\r\n                maskedTextBox2.Text = \u002200000000\u0022;\r\n                maskedTextBox3.Text = \u002200000000\u0022;\r\n                maskedTextBox4.Text = \u002200000000\u0022;\r\n                maskedTextBox5.Text = \u002200000000\u0022;\r\n\r\n\r\n\r\n\r\n                // panel4.Size = new Size(296, 215);\r\n                // panel4.Location = new System.Drawing.Point(80, 277);\r\n                //  pictureBox1.Location = new System.Drawing.Point(5, 25);\r\n                //  pictureBox1.Size = new Size(178, 176);\r\n                // panel10.Visible = true;\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                richTextBox1.ReadOnly = false;\r\n                richTextBox2.ReadOnly = false;\r\n                richTextBox3.ReadOnly = false;\r\n                richTextBox4.ReadOnly = false;\r\n                //richTextBox5.ReadOnly = false;\r\n                // richTextBox6.ReadOnly = false;\r\n                // richTextBox7.ReadOnly = false;\r\n                richTextBox8.ReadOnly = false;\r\n\r\n                richTextBox10.ReadOnly = true;\r\n                richTextBox11.ReadOnly = true;\r\n                richTextBox12.ReadOnly = true;\r\n                richTextBox13.ReadOnly = true;\r\n                richTextBox14.ReadOnly = true;\r\n\r\n                // if (timer4.Enabled)\r\n                /// {\r\n\r\n                cancelar();\r\n                //button2.Enabled = true;\r\n                if (band == 0)\r\n                {\r\n                    button28.Text = Label_Read_QRcode_Off[0];\r\n                    label7.Text = button28.Text;\r\n                }\r\n                else\r\n                {\r\n                    button28.Text = Label_Read_QRcode_Off[1];\r\n                    label7.Text = button28.Text;\r\n                }\r\n\r\n                //richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                //button1.Text = \u0022Read QRcode Off\u0022;\r\n                richTextBox1.Enabled = true;\r\n                richTextBox2.Enabled = true;\r\n                richTextBox3.Enabled = true;\r\n                richTextBox4.Enabled = true;\r\n                comboBox1.Enabled = true;\r\n                richTextBox6.Enabled = true;\r\n                richTextBox7.Enabled = true;\r\n                richTextBox8.Enabled = true;\r\n                richTextBox9.Enabled = true;\r\n                richTextBox10.Enabled = true;\r\n                richTextBox11.Enabled = true;\r\n                richTextBox12.Enabled = true;\r\n                richTextBox13.Enabled = true;\r\n                richTextBox14.Enabled = true;\r\n\r\n\r\n                button4.Enabled = true;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n\r\n                //richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                // richTextBox8.Text = \u0022cristiano.engenharia.ac@gmail.com\u0022;\r\n                dateTimePicker1.Visible = true;\r\n                dateTimePicker2.Visible = true;\r\n                richTextBox6.Visible = false;\r\n                richTextBox7.Visible = false;\r\n                //    timer4.Stop();\r\n                // videoCaptureDevice.Stop();\r\n                //  pictureBox1.Image = Properties.Resources.frame;\r\n                //button2.Enabled = true;\r\n                // }\r\n                vid = 0;\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(_cad);\r\n            }\r\n        }\r\n        private void compare_aso()\r\n        {\r\n            try\r\n            {\r\n\r\n                string texto = \u0022Aqui est\u00E1 um exemplo de texto com a palavra \u0027dado\u0027.\u0022;\r\n\r\n                string palavraProcurada = \u0022dado\u0022;\r\n\r\n                if (texto.Contains(palavraProcurada))\r\n                {\r\n                    Console.WriteLine($\u0022A palavra \u0027{palavraProcurada}\u0027 foi encontrada no texto.\u0022);\r\n                }\r\n                var parameterDate_ASo = DateTime.ParseExact(maskedTextBox1.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                //var parameterDate_initial = DateTime.ParseExact(richTextBox6.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                /// var parameterDate_final = DateTime.ParseExact(richTextBox7.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var todaysDate = DateTime.Today;\r\n\r\n                if (todaysDate \u003E parameterDate_ASo)\r\n                {\r\n\r\n\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    aso_1 = 1;\r\n                    MessageBox.Show(\u0022Aso vencido, Favor verificar\u0022);\r\n                }\r\n                else\r\n                {\r\n\r\n                    aso_1 = 0;\r\n\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                MessageBox.Show(e.Message);\r\n            }\r\n            // compare_id();\r\n        }\r\n        int ver = 0;\r\n        String local22 = \u0022\u0022;\r\n        private void read_write()\r\n        {\r\n            checa_host_ = false;\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                richTextBox6.Text = data_new;\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                richTextBox7.Text = data2_new;\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n            if (richTextBox16.Text.Trim() == \u0022\u0022)\r\n            {\r\n\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n\r\n                string number = count.ToString().Trim(); //   teste count System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                label3.Text = number;\r\n                number2 = count;//Int32.Parse(number);\r\n                lb4.Visible = true;\r\n                number2 = number2 \u002B 1;\r\n                // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022, number2.ToString());\r\n                if (zzz == 1)\r\n                {\r\n                    // string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n                    // \\\\DOF_ACCESS\\\\compartilhamento\\\\\r\n                    //  File.WriteAllText(text \u002B @\u0022data_txt\\count.txt\u0022, number2.ToString());\r\n                }\r\n\r\n                label3.Text = number2.ToString();\r\n                lb4.Text = label3.Text;\r\n                richTextBox16.Text = number2.ToString();\r\n\r\n                if (local1val == 1)\r\n                {\r\n                    local22 = place1[band];\r\n\r\n                }\r\n                if (local2val == 1)\r\n                {\r\n                    local22 = place2[band];\r\n\r\n                }\r\n                if (local4val == 1)\r\n                {\r\n                    local22 = place4[band];\r\n\r\n                }\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    try\r\n                    {\r\n                        path2 = richTextBox15.Text;\r\n                        subs2 = path2.Split(\u0027/\u0027);\r\n                        path3 = subs2[5];\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n\r\n                    //Number : 1 : Name : Gustavo de Vasconcelos Magalh\u00E3es : Compay : DOF :Funcition:  Gerente de Projeto  :Id: 120159298 : E-mail : N/A : Vessel : SKANDI AMAZONAS : Project : Estadia : ASO : 01/07/2024 : NR-34 : 01/06/2024 : NR-10 : 01/06/2024 : NR-33 : 01/06/2024 : NR-35 : 01/06/2024 :  : JO\u00C3O : : : :17/08/2023 :17/08/2023 :.\r\n                    //  richTextBox16.Text = label3.Text.Trim();\r\n                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B data_new \u002B \u0022 :\u0022 \u002B data2_new \u002B \u0022 :\u0022 \u002B path3;\r\n\r\n                    Cadastro cadastro = new Cadastro(\r\n                        number: richTextBox16.Text.Trim(),\r\n                        name: richTextBox2.Text,\r\n                        company: richTextBox1.Text,\r\n                        function: richTextBox3.Text,\r\n                        identidade: richTextBox4.Text,\r\n                        email: richTextBox8.Text,\r\n                        vessel: comboBox1.Text,\r\n                        project: richTextBox9.Text,\r\n                        aso: richTextBox10.Text,\r\n                        nr_34: richTextBox11.Text,\r\n                        nr_10: richTextBox12.Text,\r\n                        nr_33: richTextBox13.Text,\r\n                        nr_35: richTextBox14.Text,\r\n                        estado: bb,\r\n                        usuario: comuser.Text,\r\n                        motivo: richTextBox17.Text,\r\n                        local: local22,\r\n                        data: data_new,\r\n                        data2: data2_new,\r\n                        document: path3\r\n                        );\r\n\r\n                    //save cadstro at  using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n                    if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n                    {\r\n                        Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n                    }\r\n\r\n                    AddOrUpdateCadastroData(cadastro);\r\n\r\n                    writer.WriteLine(teste2);\r\n                    writer.Close();\r\n                }\r\n                // MessageBox.Show(\u0022N\u00E3o Achei \u0022);\r\n            }\r\n\r\n            else\r\n            {\r\n                //  richTextBox16.Text = number2.ToString();\r\n                if (local1val == 1)\r\n                {\r\n                    local22 = place1[band];\r\n\r\n                }\r\n                if (local2val == 1)\r\n                {\r\n                    local22 = place2[band];\r\n\r\n                }\r\n                if (local4val == 1)\r\n                {\r\n                    local22 = place4[band];\r\n\r\n                }\r\n                if (richTextBox16.Text.Trim() != \u0022\u0022)\r\n                {\r\n                    try\r\n                    {\r\n                        path2 = richTextBox15.Text;\r\n                        subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                        path3 = subs2[5];\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B data_new \u002B \u0022 :\u0022 \u002B data2_new \u002B \u0022 :\u0022 \u002B path3;\r\n                    string filePath = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n                    string[] lines = File.ReadAllLines(filePath);\r\n                    //create new Cadastro object and save it into a new SQLite table called Cadastro\r\n                    Cadastro cadastro = new Cadastro(\r\n                        number: richTextBox16.Text.Trim(),\r\n                        name: richTextBox2.Text,\r\n                        company: richTextBox1.Text,\r\n                        function: richTextBox3.Text,\r\n                        identidade: richTextBox4.Text,\r\n                        email: richTextBox8.Text,\r\n                        vessel: comboBox1.Text,\r\n                        project: richTextBox9.Text,\r\n                        aso: richTextBox10.Text,\r\n                        nr_34: richTextBox11.Text,\r\n                        nr_10: richTextBox12.Text,\r\n                        nr_33: richTextBox13.Text,\r\n                        nr_35: richTextBox14.Text,\r\n                        estado: bb,\r\n                        usuario: comuser.Text,\r\n                        motivo: richTextBox17.Text,\r\n                        local: local22,\r\n                        data: data_new,\r\n                        data2: data2_new,\r\n                        document: path3\r\n                        );\r\n\r\n                    //save cadstro at  using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n                    if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n                    {\r\n                        Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n                    }\r\n\r\n                    AddOrUpdateCadastroData(cadastro);\r\n\r\n\r\n\r\n                    for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                    {\r\n                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                        {\r\n                            ver = 1;\r\n                            lines[i] = teste2.Trim();\r\n                            /// MessageBox.Show(\u0022Achei: \u0022 \u002B richTextBox4.Text.Trim());\r\n                        }\r\n\r\n                    }\r\n                    //and save it:\r\n\r\n                    File.WriteAllLines(filePath, lines);\r\n                    ver = 0;\r\n\r\n                }\r\n            }\r\n\r\n\r\n            checa_host_ = true;\r\n\r\n        }\r\n        public Bitmap GerarQRCode(int width, int height, string text)\r\n        {\r\n            try\r\n            {\r\n                var bw = new ZXing.BarcodeWriter();\r\n                var encOptions = new ZXing.Common.EncodingOptions() { Width = width, Height = height, Margin = 0 };\r\n                bw.Options = encOptions;\r\n                bw.Format = ZXing.BarcodeFormat.QR_CODE;\r\n                var resultado = new Bitmap(bw.Write(text));\r\n                return resultado;\r\n\r\n            }\r\n            catch\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n\r\n        private void criar_excel()\r\n        {\r\n\r\n            string txtFilePath = @\u0022C:\\compartilhamento\\data_base\\novo.txt\u0022;\r\n            string excelFilePath = @\u0022C:\\compartilhamento\\data_base\\novo.xls\u0022;\r\n\r\n            IWorkbook workbook = new HSSFWorkbook();\r\n            ISheet sheet = workbook.CreateSheet(\u0022Planilha1\u0022);\r\n\r\n            using (StreamReader reader = new StreamReader(txtFilePath))\r\n            {\r\n                string headerLine = reader.ReadLine();\r\n                string[] headerParts = { \u0022NUMBER\u0022, \u0022NAME\u0022, \u0022COMPANY FUNCTION \u0022, \u0022FUNCTION\u0022, \u0022ID\u0022, \u0022EMAIL\u0022, \u0022VESSEL\u0022, \u0022CHECK-IN VALIDATION\u0022, \u0022CHECK-OUT VALIDATION\u0022, \u0022CHECK-IN  DATA\u0022, \u0022CHECK-IN  HORA\u0022, \u0022CHECK-OUT DATA\u0022, \u0022CHECK-OUT HORA\u0022, \u0022PROJECT\u0022, \u0022ASO\u0022, \u0022NR-34\u0022, \u0022NR-10\u0022, \u0022NR-33\u0022, \u0022NR-35\u0022, \u0022LOCAL\u0022, \u0022LEVEL\u0022, \u0022ESTADO\u0022, \u0022MOTIVO\u0022, \u0022USUARIO\u0022 };//headerLine.Split(\u0027:\u0027);\r\n\r\n                IRow headerRow = sheet.CreateRow(0);\r\n                for (int colIndex = 0; colIndex \u003C headerParts.Length; colIndex\u002B\u002B)\r\n                {\r\n                    ICell cell = headerRow.CreateCell(colIndex);\r\n                    cell.SetCellValue(headerParts[colIndex]);\r\n                }\r\n\r\n                int rowIndex = 1;\r\n\r\n                while (!reader.EndOfStream)\r\n                {\r\n                    string line = reader.ReadLine();\r\n                    string[] parts = line.Split(\u0027,\u0027);\r\n\r\n                    IRow row = sheet.CreateRow(rowIndex);\r\n\r\n                    for (int colIndex = 0; colIndex \u003C parts.Length; colIndex\u002B\u002B)\r\n                    {\r\n                        ICell cell = row.CreateCell(colIndex);\r\n                        cell.SetCellValue(parts[colIndex]);\r\n                    }\r\n\r\n                    rowIndex\u002B\u002B;\r\n                }\r\n            }\r\n\r\n            using (FileStream stream = new FileStream(excelFilePath, FileMode.Create, FileAccess.Write))\r\n            {\r\n                workbook.Write(stream);\r\n            }\r\n        }\r\n        private void cadastrar_invited()\r\n        {\r\n\r\n            rec = false;\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                check_id_onboard();\r\n\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    // alterado();\r\n                    System.Threading.Thread.Sleep(2000);\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n\r\n                        //  MessageBox.Show(\u0022id existe\u0022);\r\n                        richTextBox10.Text = \u0022VISITANTE\u0022;//maskedTextBox1.Text;\r\n                        richTextBox11.Text = \u0022N/A\u0022;\r\n                        richTextBox12.Text = \u0022N/A\u0022;\r\n                        richTextBox13.Text = \u0022N/A\u0022;\r\n                        richTextBox14.Text = \u0022N/A\u0022;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                // compare_aso();\r\n\r\n                                // if (aso_1 == 0)\r\n                                //  {\r\n                                //  richTextBox1.Text = richTextBox1.Text.Trim()\u002B\u0022 VISITANTE \u0022;\r\n\r\n                                if (richTextBox8.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox8.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox10.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox10.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox11.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox11.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox12.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox12.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox13.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox13.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox14.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox14.Text = \u0022N/A\u0022;\r\n                                }\r\n\r\n                                maskedTextBox1.Visible = false;\r\n                                maskedTextBox2.Visible = false;\r\n                                maskedTextBox3.Visible = false;\r\n                                maskedTextBox4.Visible = false;\r\n                                maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                read_write();\r\n                                confere = 1;\r\n                                lb4.Visible = true;\r\n                                label5.Visible = true;\r\n                                panel10.Visible = true;\r\n                                label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                //\r\n                                // CarregarPlanilha2();\r\n                                carrega_planilha2_txt();\r\n                                //  create_qrcode();\r\n                                // create_qrcode_new();\r\n                                create_qrcode_invited_new();\r\n                                print_qrcode();\r\n\r\n                                ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                startInfo2.RedirectStandardOutput = true;\r\n                                startInfo2.UseShellExecute = false;\r\n                                // Do not create the black window.\r\n                                startInfo2.CreateNoWindow = true;\r\n                                startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                Process.Start(startInfo2);\r\n\r\n                                /// }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void create_qrcode_invited_new()\r\n        {\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n\r\n            label5.Text = \u0022 \u0022;\r\n            label28.Text = \u0022 \u0022;\r\n            label30.Text = \u0022 \u0022;\r\n            label31.Text = \u0022 \u0022;\r\n            panel4.BackColor = Color.White;\r\n            panel11.Visible = false;\r\n            panel4.Visible = true;\r\n\r\n            label5.Text = richTextBox2.Text;\r\n            label28.Text = \u0022Vessel: \u0022 \u002B comboBox1.Text;\r\n            label30.Text = richTextBox9.Text;\r\n            lb4.Text = richTextBox16.Text; ;\r\n            label31.Text = \u0022De: \u0022 \u002B data_new;\r\n            label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n\r\n            if (richTextBox15.Text != \u0022\u0022)\r\n            {\r\n                try\r\n                {\r\n                    path2 = richTextBox15.Text;\r\n                    subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                    path3 = subs2[5];\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                path3 = \u0022.\u0022;\r\n            }\r\n\r\n\r\n\r\n            //   richTextBox1.Text = \u0022 VISITANTE  \u0022 \u002B richTextBox1.Text;\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B richTextBox1.Text \u002B \u0022 \\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n            this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n            initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n            final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n            // MessageBox.Show(data2);\r\n            Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n            criptografia.Key = \u0022Etec2017\u0022; // chave\r\n            data2 = criptografia.Encrypt(data2.ToString());\r\n            Bitmap bmp = new Bitmap(GerarQRCode(300, 300, data2));\r\n            pictureBox1.Image = bmp;\r\n        }\r\n        private void create_qrcode_new()\r\n        {\r\n\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n\r\n            label5.Text = \u0022 \u0022;\r\n            label28.Text = \u0022 \u0022;\r\n            label30.Text = \u0022 \u0022;\r\n            label31.Text = \u0022 \u0022;\r\n            panel4.BackColor = Color.White;\r\n            panel11.Visible = false;\r\n            panel4.Visible = true;\r\n\r\n            label5.Text = richTextBox2.Text;\r\n            label28.Text = \u0022Vessel: \u0022 \u002B comboBox1.Text;\r\n            label30.Text = richTextBox9.Text;\r\n            lb4.Text = richTextBox16.Text; ;\r\n            label31.Text = \u0022De: \u0022 \u002B data_new;\r\n            label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n\r\n            if (richTextBox15.Text != \u0022\u0022)\r\n            {\r\n                try\r\n                {\r\n                    path2 = richTextBox15.Text;\r\n                    subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                    path3 = subs2[5];\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                path3 = \u0022.\u0022;\r\n            }\r\n\r\n\r\n\r\n\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B richTextBox1.Text \u002B \u0022\\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n            this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n            initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n            final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n\r\n\r\n            QRCodeEncryptor = new QRCodeEncryptor();\r\n            string originalText = data2;\r\n\r\n            // Criptografa o texto\r\n            string encryptedText = QRCodeEncryptor.EncryptQRCode(originalText);\r\n            // Console.WriteLine(\u0022Texto criptografado: \u0022 \u002B encryptedText);\r\n\r\n            // Descriptografa o texto\r\n            string decryptedText = QRCodeEncryptor.DecryptQRCode(encryptedText);\r\n            // Console.WriteLine(\u0022Texto descriptografado: \u0022 \u002B decryptedText);\r\n\r\n\r\n            Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n            criptografia.Key = \u0022Etec2017\u0022; // chave\r\n            data2 = criptografia.Encrypt(data2.ToString());\r\n            Bitmap bmp = new Bitmap(GerarQRCode(300, 300, data2));\r\n            pictureBox1.Image = bmp;\r\n        }\r\n        //bool a = false;\r\n        bool id_existe = false;\r\n        private void button2_Click(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n\r\n\r\n            checa_host_ = false;\r\n\r\n                Boolean tempo = false;\r\n                if (dateTimePicker1.Visible == true)\r\n                {\r\n                    if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                    {\r\n                        tempo = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        tempo = false;\r\n                        MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                    }\r\n                }\r\n\r\n                if (dateTimePicker1.Visible == false)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                if (tempo == true)\r\n                {\r\n                    timer10.Enabled = false;\r\n                    timer12.Enabled = false;\r\n\r\n                /*\r\n                    ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                    startInfo.RedirectStandardOutput = true;\r\n                    startInfo.UseShellExecute = false;\r\n                    // Do not create the black window.\r\n                    startInfo.CreateNoWindow = true;\r\n                    startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                    Process.Start(startInfo);\r\n                */\r\n                    check_id_onboard();\r\n\r\n                    if (id_onboard == false)\r\n                    {\r\n                        if (dateTimePicker1.Visible == true)\r\n                        {\r\n                            richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                            richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        }\r\n\r\n\r\n                        alterado();\r\n                        System.Threading.Thread.Sleep(2000);\r\n                        compare_id();\r\n                        check_if_exist_id();\r\n\r\n                        if (id_exist == true)\r\n                        {\r\n\r\n                            //  MessageBox.Show(\u0022id existe\u0022);\r\n                            richTextBox10.Text = maskedTextBox1.Text;\r\n                            richTextBox11.Text = maskedTextBox2.Text;\r\n                            richTextBox12.Text = maskedTextBox3.Text;\r\n                            richTextBox13.Text = maskedTextBox4.Text;\r\n                            richTextBox14.Text = maskedTextBox5.Text;\r\n                            textBox13.Text = richTextBox1.Text;\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022\u0022;\r\n\r\n                            if (band == 0)\r\n                            {\r\n                                button2.Text = Label_Create_QRcode[0];\r\n                            }\r\n                            else\r\n                            {\r\n                                button2.Text = Label_Create_QRcode[1];\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                            // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                            // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                            if (resultado == 0)\r\n                            {\r\n                                if (textBox7.SelectionLength \u003E= 0)\r\n                                {\r\n                                    // textBox7.Focus();\r\n                                    // textBox7.Text = \u0022\u0022;\r\n                                }\r\n                                // dataGridView1.Visible = false;\r\n                                if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                    \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                                {\r\n\r\n\r\n\r\n                                    compare_aso();\r\n\r\n                                    if (aso_1 == 0)\r\n                                    {\r\n\r\n                                        if (richTextBox8.Text == \u0022\u0022)\r\n                                        {\r\n                                            richTextBox8.Text = \u0022N/A\u0022;\r\n                                        }\r\n\r\n                                        maskedTextBox1.Visible = false;\r\n                                        maskedTextBox2.Visible = false;\r\n                                        maskedTextBox3.Visible = false;\r\n                                        maskedTextBox4.Visible = false;\r\n                                        maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                        read_write();\r\n                                        confere = 1;\r\n                                        lb4.Visible = true;\r\n                                        label5.Visible = true;\r\n                                        panel10.Visible = true;\r\n                                        label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                        qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                        //\r\n                                        //  CarregarPlanilha2();\r\n                                        carrega_planilha2_txt();\r\n                                        //  create_qrcode();\r\n                                        create_qrcode_new();\r\n                                        print_qrcode();\r\n\r\n                                        ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                        startInfo2.RedirectStandardOutput = true;\r\n                                        startInfo2.UseShellExecute = false;\r\n                                        // Do not create the black window.\r\n                                        startInfo2.CreateNoWindow = true;\r\n                                        startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                        Process.Start(startInfo2);\r\n\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                    //\r\n                                    //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                    //  atualiza_compartilhamento();\r\n\r\n                                    // \r\n\r\n                                    // else\r\n                                    //  {\r\n                                    //  MessageBox.Show(id_check[band]);\r\n                                    //  }\r\n                                    checado = 0;\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    if (band == 0)\r\n                                    {\r\n                                        MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                    }\r\n\r\n                                    if (band == 1)\r\n                                    {\r\n                                        MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n\r\n                            if (resultado == 1)\r\n                            {\r\n                                MessageBox.Show(\u0022ID duplicated\u0022);\r\n                            }\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022 \u0022;\r\n                        }\r\n                        ok_but2 = false;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                        id_onboard = false;\r\n                    }\r\n                }\r\n                rec = true;\r\n                timer10.Enabled = true;\r\n                timer12.Enabled = true;\r\n            checa_host_ = true;\r\n\r\n        }\r\n        private void imprime_novo()\r\n        {\r\n\r\n\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                check_id_onboard();\r\n\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    alterado();\r\n                    System.Threading.Thread.Sleep(2000);\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n\r\n                        //  MessageBox.Show(\u0022id existe\u0022);\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n\r\n                                    if (richTextBox8.Text == \u0022\u0022)\r\n                                    {\r\n                                        richTextBox8.Text = \u0022N/A\u0022;\r\n                                    }\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                    read_write();\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                    qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                    //\r\n                                    //  CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    //  create_qrcode();\r\n                                    create_qrcode_new();\r\n                                    print_qrcode();\r\n\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n        private void compare_id()\r\n        {\r\n            try\r\n            {\r\n                String l = \u0022\u0022;\r\n                bool ESIM = false;\r\n                bool dois = false;\r\n                bool tres = false;\r\n                string nume = \u0022\u0022;\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                id_1 = 0;\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n\r\n                    if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                    {\r\n\r\n                        l = lines[i].Split(\u0027:\u0027)[9].Trim();\r\n                        if (lines[i].Split(\u0027:\u0027)[1].Trim() != richTextBox16.Text.Trim())\r\n                        {\r\n                            MessageBox.Show(\u0022O N\u00DAMERO DA IDENTIDADE  * \u0022 \u002B lines[i].Split(\u0027:\u0027)[9].Trim() \u002B \u0022 *  J\u00C1 EST\u00C1 CADASTRADO NO ACESSO DE N\u00DAMERO \u0022 \u002B lines[i].Split(\u0027:\u0027)[1].Trim());\r\n                        }\r\n                        ESIM = true;\r\n                        richTextBox4.Text = lines[int.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                        string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B local22.Trim();\r\n\r\n                        string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                        text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                        File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        //  MessageBox.Show(\u0022 CADASTRO REALIZADO COM SUCESSO, A IDENTIDADE N\u00C3O FOI ALTERADA POIS J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                        break;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        ESIM = false;\r\n\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n                if (ESIM == false)\r\n                {\r\n                    if (local1val == 1)\r\n                    {\r\n                        local22 = place1[band];\r\n\r\n                    }\r\n                    if (local2val == 1)\r\n                    {\r\n                        local22 = place2[band];\r\n\r\n                    }\r\n                    if (local4val == 1)\r\n                    {\r\n                        local22 = place4[band];\r\n\r\n                    }\r\n                    id_1 = 1;\r\n                    string[] lines2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    if (richTextBox4.Text.Trim() != l)\r\n                    {\r\n\r\n                        //   int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                        //   richTextBox16.Text = (Int32.Parse(label3.Text) \u002B 1).ToString();\r\n\r\n                        string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B richTextBox15.Text;\r\n\r\n                        string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                        // try\r\n                        // {\r\n                        text = text.Replace(lines2[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                        File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        //  }\r\n                        //   catch\r\n                        //{\r\n                        //     MessageBox.Show(\u0022UTILIZE A OP\u00C7\u00C3P CADASTRAR ANTES DE IMPRIMIR\u0022);\r\n                        //  }\r\n                        //  MessageBox.Show(\u0022CADASTRO REALIZADO COM SUCESSO\u0022);\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                    }\r\n                }\r\n\r\n                timer10.Enabled = true;\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void button29_Click(object sender, EventArgs e)\r\n        {\r\n            checa_host_ = false;\r\n            rec = false;\r\n            Boolean tempo2 = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo2 = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo2 = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo2 = true;\r\n            }\r\n            if (tempo2 == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                bool id_ok = false;\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n\r\n                    if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                    {\r\n                        id_ok = true;\r\n                        MessageBox.Show(\u0022J\u00C1 EXISTE UM CADASTRO COM ESTA IDENTIDADE\u0022);\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                if (id_ok == false)\r\n                {\r\n                    check_id_onboard();\r\n                    if (id_onboard == false)\r\n                    {\r\n\r\n\r\n\r\n\r\n\r\n                        tempo = 0;\r\n\r\n                        //timer4.Stop();\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        // \r\n                        //  if (textBox7.SelectionLength \u003E= 0)\r\n                        // {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n                        // acha_palavra_txt2();\r\n\r\n\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox2.Text != \u0022 \u0022 \u0026\u0026 richTextBox3.Text != \u0022 \u0022 \u0026\u0026 richTextBox4.Text != \u0022 \u0022 \u0026\u0026 comboBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox8.Text != \u0022 \u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022)  //  /  /\r\n                            {\r\n                                //compare_id();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n                                    if (richTextBox8.Text == \u0022\u0022)\r\n                                    {\r\n                                        richTextBox8.Text = \u0022N/A\u0022;\r\n                                    }\r\n\r\n                                    read_write();\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n                                    // f\r\n\r\n\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n                                    qr_generate = \u0022registered\u0022;\r\n                                    cad = true;\r\n                                  //  CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    create_qrcode_new();\r\n\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n\r\n\r\n                                    richTextBox1.Text = \u0022\u0022;\r\n                                    richTextBox2.Text = \u0022\u0022;\r\n                                    richTextBox3.Text = \u0022\u0022;\r\n                                    richTextBox4.Text = \u0022\u0022;\r\n                                    richTextBox6.Text = \u0022\u0022;\r\n                                    richTextBox7.Text = \u0022\u0022;\r\n                                    richTextBox8.Text = \u0022\u0022;\r\n                                    richTextBox10.Text = \u0022\u0022;\r\n                                    richTextBox11.Text = \u0022\u0022;\r\n                                    richTextBox12.Text = \u0022\u0022;\r\n                                    richTextBox13.Text = \u0022\u0022;\r\n                                    richTextBox14.Text = \u0022\u0022;\r\n                                    richTextBox15.Text = \u0022\u0022;\r\n                                    richTextBox16.Text = \u0022\u0022;\r\n                                    maskedTextBox1.Text = \u0022\u0022;\r\n                                    maskedTextBox2.Text = \u0022\u0022;\r\n                                    maskedTextBox3.Text = \u0022\u0022;\r\n                                    maskedTextBox4.Text = \u0022\u0022;\r\n                                    maskedTextBox5.Text = \u0022\u0022;\r\n                                    if (band == 0)\r\n                                    {\r\n                                        MessageBox.Show(Label_cadastro[0]);\r\n                                    }\r\n                                    if (band == 1)\r\n                                    {\r\n                                        MessageBox.Show(Label_cadastro[1]);\r\n                                    }\r\n\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                    checado = 0;\r\n                                }\r\n                                //  MessageBox.Show(id_check[band]);\r\n                            }\r\n\r\n\r\n                            // atualiza_compartilhamento();\r\n\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO!, S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    }\r\n                }\r\n            }\r\n            ///  timer4.Start();\r\n            rec = true;\r\n      \r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n            checa_host_ = true;\r\n        }\r\n\r\n        private void button4_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            panel15.Visible = true;\r\n\r\n\r\n\r\n        }\r\n\r\n        private void button6_Click_1(object sender, EventArgs e)\r\n        {\r\n            // panel8.Location= new Point(Location.X,Location.Y);//Point(521,155);\r\n            panel8.Size = new Size(490, 353); //new Size(1030, 600);\r\n            wi\u002B\u002B;\r\n            if (wi == 1)\r\n            {\r\n                //online = true;\r\n                lview_AP.Items.Clear();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n\r\n\r\n                panel8.Visible = true;\r\n            }\r\n            if (wi == 2)\r\n            {\r\n                // online = false;\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                panel8.Visible = false;\r\n\r\n                wi = 0;\r\n            }\r\n\r\n            // System.Windows.Forms.Application.Exit();\r\n            //   this.Close();\r\n        }\r\n        int inp = 0;\r\n        public void monitor()\r\n        {\r\n            // MessageBox.Show(valores.ToString());\r\n\r\n            pictureBox4.Visible = false;\r\n\r\n\r\n            if (new FileInfo(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Length \u003E= 0)\r\n            {\r\n                inp\u002B\u002B;\r\n                if (inp == 1)\r\n                {\r\n                    // panel6.Visible = true;\r\n                    mostra_conteudo_txt();\r\n                    comboBox2.SelectedIndex = 0;\r\n\r\n                    //  comboBox2.Text = \u0022ok\u0022;\r\n\r\n                    comboBox2.Visible = true;\r\n                    beep();\r\n                    beep();\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                if (inp == 2)\r\n                {\r\n\r\n                    //if (textBox7.SelectionLength \u003E= 0)\r\n                    // {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    // }\r\n                    panel6.Visible = false;\r\n                    comboBox2.Visible = false;\r\n                    inp = 0;\r\n                }\r\n            }\r\n            textBox7.Focus();\r\n            textBox7.Text = \u0022\u0022;\r\n\r\n            //this.Close();\r\n        }\r\n\r\n        private void button19_Click(object sender, EventArgs e)\r\n        {\r\n            monitor();\r\n\r\n        }\r\n\r\n        private void button21_Click(object sender, EventArgs e)\r\n        {\r\n            //panel16.Visible = true;\r\n            // ler_linha();\r\n            //CloseExcel();\r\n            ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo2.RedirectStandardOutput = true;\r\n            startInfo2.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo2.CreateNoWindow = true;\r\n            startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo2);\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button22_Click(object sender, EventArgs e)\r\n        {\r\n            CloseExcel();\r\n            this.Close();\r\n        }\r\n\r\n\r\n\r\n        private void check_if_exist_number2()\r\n        {\r\n\r\n            // richTextBox17.Text = \u0022\u0022;\r\n            //    label37.Text = \u0022Bloquear\u0022;\r\n            int rich1 = Int16.Parse(richTextBox18.Text.Trim()) - 1;\r\n            string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n            //  MessageBox.Show(secondLine);\r\n            //string checline = secondLine.Trim();\r\n            if (secondLine2 != null)\r\n            {\r\n\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich16 = Int16.Parse(richTextBox18.Text.Trim()) - 1;\r\n                int lab3 = Int16.Parse(label3.Text);\r\n                if (rich16 \u003C= lab3)\r\n                {\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich16);\r\n\r\n                    //  MessageBox.Show(secondLine);\r\n                    //string checline = secondLine.Trim();\r\n\r\n                    try\r\n                    {\r\n\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            button2.Enabled = true;\r\n                            // richTextBox15.Text = \u0022\u0022;\r\n                            /*\r\n                             richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                             richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                             richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                             richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                             richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            */\r\n\r\n\r\n                            //Number : 1 : Name : GUSTAVO MAGALHAES : Compay : DOF :Funcition:  GERENTE DE PROJETO  :Id: 8866640719 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 07/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : : :Conv\u00E9s :14/10/2022 :28/10/2022 :.\r\n\r\n                            richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                            richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                            richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                            richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n\r\n                          //  comboBox1.Items.Clear();\r\n                          //  comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                          //  comboBox1.SelectedIndex = 0;\r\n\r\n                            richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                            {\r\n                                richTextBox8.Text = \u0022N/A\u0022;\r\n                            }\r\n\r\n                            maskedTextBox1.Visible = true;\r\n                            maskedTextBox2.Visible = true;\r\n                            maskedTextBox3.Visible = true;\r\n                            maskedTextBox4.Visible = true;\r\n                            maskedTextBox5.Visible = true;\r\n                            // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            // maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            try\r\n                            {\r\n\r\n                                string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n\r\n                                maskedTextBox1.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                // MessageBox.Show(teste);\r\n                                maskedTextBox2.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n\r\n                            if (richTextBox3.Text != \u0022\u0022)\r\n                            {\r\n                                //  comboBox1.Items.Clear();\r\n                                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                                string x = sr.ReadToEnd();\r\n                                string[] y = x.Split(\u0027\\n\u0027);\r\n                                foreach (string s in y)\r\n                                {\r\n                                    comboBox1.Items.Add(s);\r\n                                }\r\n                                sr.Close();\r\n                            }\r\n\r\n\r\n\r\n\r\n                            maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                            maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                            maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                            maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                            maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                            {\r\n                                // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            try\r\n                            {\r\n                                richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33].Trim();\r\n                            }\r\n                            catch\r\n                            {\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n                            }\r\n                            richTextBox6.Visible = true;\r\n                            richTextBox7.Visible = true;\r\n                            dateTimePicker1.Visible = false;\r\n                            dateTimePicker2.Visible = false;\r\n\r\n                            try\r\n                            {\r\n\r\n                                richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n                                String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n\r\n                                label34.Text = local222;\r\n                                if (local222 == place1[band])\r\n                                {\r\n                                    local1.Checked = true;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place2[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = true;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place4[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = true;\r\n                                }\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                        }\r\n\r\n                        string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n                        if (sec == \u0022Bloqueado\u0022)\r\n                        {\r\n                            button2.Enabled = false;\r\n                            button17.Enabled = false;\r\n                            //  button5.Image = ((System.Drawing.Image)(resources.GetObject(\u0022_bButton.Image\u0022)));\r\n                            label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                            textbloc = richTextBox17.Text.Trim();\r\n                            textbloc2 = richTextBox17.Text.Trim();\r\n                            //label37.Text = sec;\r\n                            btloc.Visible = true;\r\n                            button7.Visible = false;\r\n                            label37.Visible = true;\r\n                            btloc.Image = Properties.Resources.lock0;\r\n                            ////  btloc.Text = \u0022Bloqueado\u0022;\r\n                            CHLocked.Text = \u0022Desbloquear\u0022;\r\n                            //  textbloc = \u0022\u0022;\r\n                            //  textbloc2 = \u0022\u0022;\r\n                        }\r\n                        else\r\n                        {\r\n                            richTextBox17.Text = \u0022\u0022;\r\n                            //  label37.Text = \u0022Desbloqueado\u0022;\r\n                            CHLocked.Text = \u0022Bloquear\u0022;\r\n                            btloc.Visible = false;\r\n                            button7.Visible = true;\r\n                            button2.Enabled = true;\r\n                            button17.Enabled = true;\r\n                            //  btloc.Text = \u0022 \u0022;\r\n                            // btloc.Image = Properties.Resources.lock2;\r\n                        }\r\n                        String pass11 = secondLine.Split(\u0027:\u0027)[11];\r\n                    }\r\n\r\n                    catch\r\n                    {\r\n                        // MessageBox.Show(\u0022N\u00E3o h\u00E1 cadastro com este N\u00FAmero\u0022);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //  button2.Enabled = true;\r\n                //   button17.Enabled = true;\r\n                //  button29.Enabled = false;\r\n                // richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                //panel11.Size = new Size(360, 355);\r\n                //panel11.Location = new System.Drawing.Point(95, 150);\r\n                //pictureBox7.Size = new Size(330, 320);\r\n                // pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n                try\r\n                {\r\n\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                id_exist = false;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                maskedTextBox1.Text = \u0022\u0022;\r\n                maskedTextBox2.Text = \u0022\u0022;\r\n                maskedTextBox3.Text = \u0022\u0022;\r\n                maskedTextBox4.Text = \u0022\u0022;\r\n                maskedTextBox5.Text = \u0022\u0022;\r\n                maskedTextBox1.Visible = false;\r\n                maskedTextBox2.Visible = false;\r\n                maskedTextBox3.Visible = false;\r\n                maskedTextBox4.Visible = false;\r\n                maskedTextBox5.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n\r\n\r\n                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n            }\r\n        }\r\n\r\n        private void check_if_exist_number()\r\n        {\r\n\r\n            // richTextBox17.Text = \u0022\u0022;\r\n            //    label37.Text = \u0022Bloquear\u0022;\r\n            int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n            string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n            //  MessageBox.Show(secondLine);\r\n            //string checline = secondLine.Trim();\r\n            if (secondLine2 != null)\r\n            {\r\n\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich16 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                int lab3 = Int16.Parse(label3.Text);\r\n                if (rich16 \u003C= lab3)\r\n                {\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich16);\r\n\r\n                    //  MessageBox.Show(secondLine);\r\n                    //string checline = secondLine.Trim();\r\n\r\n                    try\r\n                    {\r\n\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            button2.Enabled = true;\r\n                            // richTextBox15.Text = \u0022\u0022;\r\n                            /*\r\n                             richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                             richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                             richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                             richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                             richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            */\r\n\r\n\r\n                            //Number : 1 : Name : GUSTAVO MAGALHAES : Compay : DOF :Funcition:  GERENTE DE PROJETO  :Id: 8866640719 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 07/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : : :Conv\u00E9s :14/10/2022 :28/10/2022 :.\r\n\r\n                            richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                            richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                            richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                            richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n                            richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                            {\r\n                                richTextBox8.Text = \u0022N/A\u0022;\r\n                            }\r\n\r\n                            maskedTextBox1.Visible = true;\r\n                            maskedTextBox2.Visible = true;\r\n                            maskedTextBox3.Visible = true;\r\n                            maskedTextBox4.Visible = true;\r\n                            maskedTextBox5.Visible = true;\r\n                            // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            // maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            try\r\n                            {\r\n\r\n                                string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n\r\n                                maskedTextBox1.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                // MessageBox.Show(teste);\r\n                                maskedTextBox2.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n\r\n                            if (richTextBox3.Text != \u0022\u0022)\r\n                            {\r\n                                //  comboBox1.Items.Clear();\r\n                                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                                string x = sr.ReadToEnd();\r\n                                string[] y = x.Split(\u0027\\n\u0027);\r\n                                foreach (string s in y)\r\n                                {\r\n                                    comboBox1.Items.Add(s);\r\n                                }\r\n                                sr.Close();\r\n                            }\r\n\r\n\r\n\r\n\r\n                            maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                            maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                            maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                            maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                            maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                            {\r\n                                // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            try\r\n                            {\r\n                                richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33].Trim();\r\n                            }\r\n                            catch\r\n                            {\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n                            }\r\n                            richTextBox6.Visible = true;\r\n                            richTextBox7.Visible = true;\r\n                            dateTimePicker1.Visible = false;\r\n                            dateTimePicker2.Visible = false;\r\n\r\n                            try\r\n                            {\r\n\r\n                                richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n                                String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n\r\n                                label34.Text = local222;\r\n                                if (local222 == place1[band])\r\n                                {\r\n                                    local1.Checked = true;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place2[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = true;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place4[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = true;\r\n                                }\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                        }\r\n\r\n                        string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n                        if (sec == \u0022Bloqueado\u0022)\r\n                        {\r\n                            button2.Enabled = false;\r\n                            button17.Enabled = false;\r\n                            //  button5.Image = ((System.Drawing.Image)(resources.GetObject(\u0022_bButton.Image\u0022)));\r\n                            label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                            textbloc = richTextBox17.Text.Trim();\r\n                            textbloc2 = richTextBox17.Text.Trim();\r\n                            //label37.Text = sec;\r\n                            btloc.Visible = true;\r\n                            button7.Visible = false;\r\n                            label37.Visible = true;\r\n                            btloc.Image = Properties.Resources.lock0;\r\n                            ////  btloc.Text = \u0022Bloqueado\u0022;\r\n                            CHLocked.Text = \u0022Desbloquear\u0022;\r\n                            //  textbloc = \u0022\u0022;\r\n                            //  textbloc2 = \u0022\u0022;\r\n                        }\r\n                        else\r\n                        {\r\n                            richTextBox17.Text = \u0022\u0022;\r\n                            //  label37.Text = \u0022Desbloqueado\u0022;\r\n                            CHLocked.Text = \u0022Bloquear\u0022;\r\n                            btloc.Visible = false;\r\n                            button7.Visible = true;\r\n                            button2.Enabled = true;\r\n                            button17.Enabled = true;\r\n                            //  btloc.Text = \u0022 \u0022;\r\n                            // btloc.Image = Properties.Resources.lock2;\r\n                        }\r\n                        String pass11 = secondLine.Split(\u0027:\u0027)[11];\r\n                    }\r\n\r\n                    catch\r\n                    {\r\n                        // MessageBox.Show(\u0022N\u00E3o h\u00E1 cadastro com este N\u00FAmero\u0022);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //  button2.Enabled = true;\r\n                //   button17.Enabled = true;\r\n              //  button29.Enabled = false;\r\n                // richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                //panel11.Size = new Size(360, 355);\r\n                //panel11.Location = new System.Drawing.Point(95, 150);\r\n                //pictureBox7.Size = new Size(330, 320);\r\n                // pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n                try\r\n                {\r\n\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                id_exist = false;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                maskedTextBox1.Text = \u0022\u0022;\r\n                maskedTextBox2.Text = \u0022\u0022;\r\n                maskedTextBox3.Text = \u0022\u0022;\r\n                maskedTextBox4.Text = \u0022\u0022;\r\n                maskedTextBox5.Text = \u0022\u0022;\r\n                maskedTextBox1.Visible = false;\r\n                maskedTextBox2.Visible = false;\r\n                maskedTextBox3.Visible = false;\r\n                maskedTextBox4.Visible = false;\r\n                maskedTextBox5.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n\r\n\r\n                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox16_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                label37.Text = \u0022\u0022;\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                check_if_exist_number();\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void button7_Click(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE BLOQUEAR O ACESSO?\u0022, \u0022BLOQUEIO DE ACESSO\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    bb = \u0022Bloqueado\u0022;\r\n                    bloqueio();\r\n                    //  richTextBox17.Text = \u0022\u0022;\r\n                    btloc.Image = Properties.Resources.lock0;\r\n                    btloc.Visible = true;\r\n                    button7.Visible = false;\r\n                    richTextBox17.Text = \u0022\u0022;\r\n                    button2.Enabled = false;\r\n                    button17.Enabled = false;\r\n                   \r\n                    //myThread.Abort();\r\n                 //   checa_host();\r\n                    // MessageBox.Show(\u0022button7_Click\u0022);\r\n                    // atualiza_compartilhamento();\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022FAVOR JUSTIFICAR O MOTIVO DO BLOQUEIO\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void btloc_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n\r\n                if (r7 == true)\r\n                {\r\n                    DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE DESBLOQUEAR O ACESSO ? \u0022, \u0022DESBLOQUEIO DE ACESSO\u0022, MessageBoxButtons.YesNo);\r\n                    if (dialogResult == DialogResult.Yes)\r\n                    {\r\n                        bb = \u0022Desbloqueado\u0022;\r\n                        bloqueio();\r\n                        //  richTextBox17.Text = \u0022\u0022;\r\n                        btloc.Visible = false;\r\n                        button7.Visible = true;\r\n                        button2.Enabled = true;\r\n                        button17.Enabled = true;\r\n                        richTextBox17.Text = \u0022\u0022;\r\n                        //myThread.Abort();\r\n                     //   checa_host();\r\n                   //    MessageBox.Show(\u0022btloc_Click\u0022);\r\n                        // atualiza_compartilhamento();\r\n                    }\r\n                    else if (dialogResult == DialogResult.No)\r\n                    {\r\n                        //   btloc.Image = Properties.Resources.lock0;\r\n                        //  btloc.Image = Properties.Resources.lock2;\r\n\r\n                    }\r\n                    r7 = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022FAVOR JUSTIFICAR O MOTIVO DO DESBLOQUEIO\u0022);\r\n            }\r\n\r\n            /*\r\n\r\n            textbloc = richTextBox17.Text.Trim();\r\n            bt1\u002B\u002B;\r\n            if(bt1== 1)\r\n            {\r\n\r\n\r\n              //  btloc.Image = Properties.Resources.lock0;\r\n              //  btloc.Text = \u0022Bloqueado\u0022;\r\n            }\r\n            if (bt1 \u003E= 2)\r\n            {\r\n                if (textbloc!= textbloc2 \u0026\u0026 richTextBox17.Text != \u0022\u0022)\r\n                {\r\n\r\n                    btloc.Image = Properties.Resources.lock2;\r\n\r\n                    \r\n                    DialogResult dialogResult = MessageBox.Show(\u0022Sure\u0022, \u0022Some Title\u0022, MessageBoxButtons.YesNo);\r\n                    if (dialogResult == DialogResult.Yes)\r\n                    {\r\n                        bloqueio();\r\n                        richTextBox17.Text = \u0022\u0022;\r\n                    }\r\n                    else if (dialogResult == DialogResult.No)\r\n                    {\r\n                        btloc.Image = Properties.Resources.lock0;\r\n\r\n                        textbloc = textbloc2;\r\n                        richTextBox17.Text = textbloc2;\r\n                    }\r\n\r\n                    //  r7 = false;\r\n                    bt1 = 0;\r\n                }\r\n             \r\n            }\r\n            */\r\n        }\r\n        int get_pic = 0;\r\n        private void button15_Click(object sender, EventArgs e)\r\n        {\r\n            try\r\n            {\r\n\r\n                get_pic\u002B\u002B;\r\n                if (get_pic == 1)\r\n                {\r\n                    if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022)\r\n                    {\r\n                        try\r\n                        {\r\n\r\n                            button15.Text = \u0022Press again to take a picture\u0022;\r\n                            // if(cboCamera.)\r\n                            //  if(cboCamera.Items(1)==\u0022teste\u0022)\r\n\r\n                            int iten = cboCamera.Items.Count;\r\n                            if (iten \u003E= 4)\r\n                            {\r\n                                iten = 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                iten = 0;\r\n\r\n                            }\r\n                            //  MessageBox.Show(iten.ToString());\r\n                            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[0].MonikerString);\r\n                            videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                            videoCaptureDevice.Start();\r\n                            pictureBox7.Image = Properties.Resources.barcode1;\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            MessageBox.Show(\u0022Erro \u0022 \u002B ex.Message);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (get_pic == 2)\r\n                {\r\n\r\n                    if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022)\r\n                    {\r\n                        try\r\n                        {\r\n                            if (videoCaptureDevice.IsRunning)\r\n                            {\r\n\r\n                                caminhoImagemSalva2 = @\u0022c:\\compartilhamento\\data_new_picture\\\u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022.jpg\u0022;\r\n                                //caminhoImagemSalva2.\r\n                                pictureBox7.Image.Save(caminhoImagemSalva2, ImageFormat.Jpeg);\r\n\r\n                                copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                //  clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                                button15.Text = \u0022Face picture Include\u0022;\r\n                                button15.Visible = false;\r\n\r\n\r\n\r\n                            }\r\n\r\n                            if (videoCaptureDevice.IsRunning)\r\n                            {\r\n                                videoCaptureDevice.Stop();\r\n                                pictureBox7.Image = Properties.Resources.barcode1;\r\n\r\n                            }\r\n                        }\r\n                        catch\r\n                        {\r\n\r\n                        }\r\n                        //myThread.Abort();\r\n                       // checa_host();\r\n                        //  MessageBox.Show(\u0022button15_Click\u0022);\r\n                        // atualiza_compartilhamento();\r\n                    }\r\n\r\n                    get_pic = 0;\r\n                }\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n\r\n        }\r\n        private void check_locked()\r\n        {\r\n            string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n            // Start at line number 2 because there is a header\r\n            for (int i = 1; i \u003C lines.Length; i\u002B\u002B)\r\n            {\r\n                // 2 ways to do this:\r\n                if (lines[i].Contains(richTextBox4.Text))\r\n                {\r\n\r\n                    String pass0 = lines[1].Split(\u0027:\u0027)[26];\r\n\r\n                    label37.Text = pass0;\r\n\r\n                    if (label37.Text.Trim() == \u0022Bloqueado\u0022)\r\n                    {\r\n                        String pass1 = lines[1].Split(\u0027:\u0027)[28];\r\n                        richTextBox17.Text = pass1;\r\n                    }\r\n                    //   MessageBox.Show(pass0);\r\n                    // string text3 = lines[i];\r\n                    // string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B label37.Text \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    // string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    // text = text.Replace(text3, text4);\r\n                    // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n\r\n                }\r\n\r\n\r\n                // or a more structured way:\r\n                //  if (lines[i].Split(\u0027|\u0027)[2].Contains(\u0022ABC\u0022))\r\n                // {\r\n                // Copy it where you want\r\n                // }\r\n            }\r\n        }\r\n        private void ler_linha2()\r\n        {\r\n            criterio = \u0022 \u0022;\r\n            lbResultado.Items.Clear();\r\n            criterio = richTextBox4.Text;\r\n            string[] linhas = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n\r\n\r\n\r\n            if (richTextBox4.Text.Length \u003E= 7)\r\n            {\r\n                foreach (string linha in linhas)\r\n                {\r\n                    // cri\u002B\u002B;\r\n                    if (linha.Contains(criterio) \u0026\u0026 criterio != \u0022 \u0022)\r\n                    {\r\n                        cri = 1;\r\n                        lbResultado.Items.Add(linha);\r\n                        //  Number: 0 : Name: 2 : Compay: 2 :Funcition: 2  :Id: 22222222222 : E - mail : 2 : Vessel: 2 : Project: 2 : ASO: 2 : NR - 34 : 2 : Vaccine - 1 : 2 : Vaccine - 2 : 2 : Booster vaccine : 2\r\n                        //     Number:  : Name: Cristiano de Araujo Calheiros : Compay: Googlemarine: Funcition: \r\n                        //Engenheiro: Id: 111098414 : E - mail : cristiano.engengaria.ac @gmail.com: Vessel:\r\n                        //Skandi Salvador : Project: Docagem: ASO: 11 / 12 / 23 : NR - 34 : 11 / 12 / 23 :\r\n                        //Vaccine - 1 : 11 / 12 / 23 : Vaccine - 2 : 11 / 12 / 23 : Booster vaccine : 11 / 12 / 23           // Number: 14 : Name: 1 : Compay: 4 :Funcition: 2  :Id: 366666666 : E - mail : 7 : Vessel: 5 : Project: 6 : ASO: 8 : NR - 34 : 9 : Vaccine - 1 : 10 : Vaccine - 2 : 11 : Booster vaccine : 12\r\n                        string[] parts = linha.Split(\u0027:\u0027);\r\n                        string whatIWant0 = parts[1].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant1 = parts[1].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant2 = parts[3].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant3 = parts[5].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant4 = parts[7].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant5 = parts[9].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant6 = parts[11].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant7 = parts[13].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant8 = parts[15].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant9 = parts[17].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant10 = parts[19].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant11 = parts[21].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant12 = parts[23].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant13 = parts[25].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                                                              // string whatIWant14 = parts[23].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n\r\n                        // Name: Googlemarine: Compay: Cristiano calheiros  :Funcition: Engenheiro: Id: 111098888 : E - mail : cristiano.engenharia.ac @gmail.com: Vessel: Skandi Salvador : Project: reparo: ASO: 11 / 02 / 2023 : NR - 34 : 11 / 02 / 2023 : Vaccine - 1 : 11 / 02 / 2023 : Vaccine - 2 : 11 / 02 / 2023 : Booster vaccine : 11 / 02 / 2023\r\n                        richTextBox16.Text = whatIWant0;//.Remove(0, 8);   // number\r\n                        richTextBox2.Text = whatIWant2;//.Remove(0, 6);    //name\r\n                        richTextBox1.Text = whatIWant3; //.Remove(0, 9);   // company\r\n                        richTextBox3.Text = whatIWant4;//.Remove(0, 10);   // function\r\n                        richTextBox4.Text = whatIWant5;//.Remove(0, 4);    //  id\r\n                        richTextBox8.Text = whatIWant6;//.Remove(0, 4);   // e-mail\r\n                                                       //  richTextBox5.Text = whatIWant7;//.Remove(0, 8);    // vessel\r\n                                                       //  richTextBox9.Text = whatIWant8;//.Remove(0, 8);    // projeto\r\n                        richTextBox10.Text = whatIWant9;//.Remove(0, 8);   // aso\r\n                        richTextBox11.Text = whatIWant10;//.Remove(0, 8);   // nr34\r\n                        richTextBox12.Text = whatIWant11;//.Remove(0, 8);  // vaccine 1\r\n                        richTextBox13.Text = whatIWant12;//.Remove(0, 8);  // vaccine 2\r\n                        richTextBox14.Text = whatIWant13;//.Remove(0, 8);  // refo\u00E7o\r\n\r\n\r\n                        maskedTextBox1.Text = richTextBox10.Text;\r\n                        maskedTextBox2.Text = richTextBox11.Text;\r\n                        maskedTextBox3.Text = richTextBox12.Text;\r\n                        maskedTextBox4.Text = richTextBox13.Text;\r\n                        maskedTextBox5.Text = richTextBox14.Text;\r\n                        // richTextBox15.Text = whatIWant13;//.Remove(0, 8);  // refo\u00E7o\r\n\r\n                        check_locked();\r\n                    }\r\n                    else\r\n                    {\r\n                        cri = 0;\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n            if (lbResultado.Items.Count == 0)\r\n            {\r\n                if (confere == 1)\r\n                {\r\n                    escrever_palavra2();\r\n                }\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                // richTextBox4.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n\r\n\r\n\r\n            }\r\n\r\n            confere = 0;\r\n\r\n        }\r\n        private void escrever_palavra2()\r\n        {\r\n\r\n\r\n            string nomeArquivo = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n            string textoInserir = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022  :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text;\r\n            int numeroLinha = Convert.ToInt32(Linhas);\r\n\r\n            ArrayList linhas = new ArrayList();\r\n\r\n            if (File.Exists(nomeArquivo))\r\n            {\r\n                try\r\n                {\r\n                    rdr = new StreamReader(nomeArquivo);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022O arquivo : \u0022 \u002B nomeArquivo \u002B \u0022 n\u00E3o existe...\u0022);\r\n                return;\r\n            }\r\n            string linha;\r\n\r\n            while ((linha = rdr.ReadLine()) != null)\r\n            {\r\n                try\r\n                {\r\n                    linhas.Add(linha);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            rdr.Close();\r\n\r\n            if (linhas.Count \u003E numeroLinha)\r\n                linhas.Insert(numeroLinha, textoInserir);\r\n            else\r\n                linhas.Add(textoInserir);\r\n\r\n            StreamWriter wrtr = new StreamWriter(nomeArquivo);\r\n\r\n            foreach (string strNewLine in linhas)\r\n            {\r\n                wrtr.WriteLine(strNewLine);\r\n            }\r\n            wrtr.Close();\r\n            textoInserir = \u0022\u0022;\r\n            // txtArquivo.Text = AbreArquivoTexto(nomeArquivo);\r\n\r\n        }\r\n        private void check_id_onboard()\r\n        {\r\n            try\r\n            {\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                // int rich2 = Int32.Parse(label3.Text);\r\n                // int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n                for (int i = 0; i \u003C Int32.Parse(label27.Text); i\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).ElementAtOrDefault(i);\r\n                    \r\n                    //  MessageBox.Show(secondLine.Split(\u0027:\u0027)[5].Trim() \u002B \u0022//\u0022 \u002B comboBox1.SelectedItem);\r\n                //    string selected = this.comboBox1.SelectedItem.ToString();\r\n                //    label63.Text = selected;\r\n                 //   MessageBox.Show(selected);\r\n\r\n\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[1].Trim() == richTextBox16.Text.Trim())\r\n                        {\r\n                            id_onboard = true;\r\n                            richTextBox16.Text = \u0022\u0022;\r\n                            richTextBox2.Text = \u0022\u0022;\r\n                            richTextBox3.Text = \u0022\u0022;\r\n                            richTextBox4.Text = \u0022\u0022;\r\n                            richTextBox1.Text = \u0022\u0022;\r\n                            richTextBox8.Text = \u0022\u0022;\r\n                            richTextBox10.Text = \u0022\u0022;\r\n                            richTextBox11.Text = \u0022\u0022;\r\n                            richTextBox12.Text = \u0022\u0022;\r\n                            richTextBox13.Text = \u0022\u0022;\r\n                            richTextBox14.Text = \u0022\u0022;\r\n                            richTextBox15.Text = \u0022\u0022;\r\n                            maskedTextBox1.Text = \u0022\u0022;\r\n                            maskedTextBox2.Text = \u0022\u0022;\r\n                            maskedTextBox3.Text = \u0022\u0022;\r\n                            maskedTextBox4.Text = \u0022\u0022;\r\n                            maskedTextBox5.Text = \u0022\u0022;\r\n                            button2.Enabled = false;\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }\r\n                if (label27.Text == \u00220\u0022)\r\n                {\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                //  id_onboard = false;\r\n            }\r\n        }\r\n\r\n        private void check_id_onboard2()\r\n        {\r\n            try\r\n            {\r\n                id_onboard2 = false;\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                // int rich2 = Int32.Parse(label3.Text);\r\n                // int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n\r\n                int qtdLinhas = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Count();\r\n                    for (int i = 0; i \u003C qtdLinhas; i\u002B\u002B)\r\n                    {\r\n\r\n                        string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).ElementAtOrDefault(i);\r\n                        //  MessageBox.Show(secondLine.Split(\u0027:\u0027)[5].Trim());\r\n                        if (secondLine != null)\r\n                        {\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[1].Trim() == richTextBox16.Text.Trim() \u0026\u0026 secondLine.Split(\u0027:\u0027)[5].Trim() != label63.Text.Trim())\r\n                            {\r\n                                \r\n                                //  MessageBox.Show(\u0022diferente\u0022);\r\n                         \r\n                                id_onboard2 = true;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n               \r\n\r\n            }\r\n            catch\r\n            {\r\n                //  id_onboard = false;\r\n            }\r\n        }\r\n\r\n\r\n        private void check_if_exist_id()\r\n        {\r\n            try\r\n            {\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich2 = Int32.Parse(label3.Text);\r\n                int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n                for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(i);\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text)\r\n                        {\r\n\r\n                            try\r\n                            {\r\n\r\n                                pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n                                pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                            }\r\n\r\n                            if (ok_but2 == false)\r\n                            {\r\n\r\n                                try\r\n                                {\r\n                                    String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n                                    label34.Text = local222;\r\n                                    if (local222 == place1[band])\r\n                                    {\r\n                                        local1.Checked = true;\r\n                                        local2.Checked = false;\r\n                                        local4.Checked = false;\r\n                                    }\r\n                                    if (local222 == place2[band])\r\n                                    {\r\n                                        local1.Checked = false;\r\n                                        local2.Checked = true;\r\n                                        local4.Checked = false;\r\n                                    }\r\n                                    if (local222 == place4[band])\r\n                                    {\r\n                                        local1.Checked = false;\r\n                                        local2.Checked = false;\r\n                                        local4.Checked = true;\r\n                                    }\r\n                                    richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                    richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n\r\n                                }\r\n                                catch\r\n                                {\r\n\r\n                                }\r\n\r\n                                /*\r\n                                richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                                */\r\n\r\n\r\n                                richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n\r\n                                comboBox1.Items.Clear();\r\n\r\n\r\n\r\n                                comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                                comboBox1.SelectedIndex = 0;\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                                {\r\n                                    richTextBox8.Text = \u0022N/A\u0022;\r\n                                }\r\n\r\n                                maskedTextBox1.Visible = true;\r\n                                maskedTextBox2.Visible = true;\r\n                                maskedTextBox3.Visible = true;\r\n                                maskedTextBox4.Visible = true;\r\n                                maskedTextBox5.Visible = true;\r\n                                /*\r\n                                try\r\n                                {\r\n                                    string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                    //  MessageBox.Show(ok);\r\n                                    string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                    // MessageBox.Show(teste);\r\n                                    maskedTextBox1.Text = teste;\r\n\r\n\r\n                                    ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                    MessageBox.Show(ok);\r\n                                    //  MessageBox.Show(ok);\r\n                                    teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                    // MessageBox.Show(teste);\r\n                                    maskedTextBox2.Text = teste;\r\n                                }\r\n                                catch\r\n                                {\r\n\r\n                                }\r\n                                */\r\n                                // MessageBox.Show(secondLine);\r\n                                // MessageBox.Show(secondLine.Split(\u0027:\u0027)[9].Trim());\r\n                                maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                                maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                                maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                                maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                                maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                                }\r\n                                if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                                }\r\n                                if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n\r\n                                try\r\n                                {\r\n                                    richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33];\r\n                                }\r\n                                catch\r\n                                {\r\n                                    // richTextBox15.Text = \u0022\u0022;\r\n                                }\r\n                                // richTextBox6.Visible = true;\r\n                                // richTextBox7.Visible = true;\r\n                                // dateTimePicker1.Visible = false;\r\n                                // dateTimePicker2.Visible = false;\r\n                                //dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString();\r\n                                // dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString();\r\n\r\n\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[26].Trim() == \u0022Bloqueado\u0022)\r\n                            {\r\n                                button2.Enabled = false;\r\n                                button17.Enabled = false;\r\n                                button7.Visible = false;\r\n                                btloc.Visible = true;\r\n                                label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                                label37.Visible = true;\r\n                            }\r\n                            else\r\n                            {\r\n                                button2.Enabled = true;\r\n                                button17.Enabled = true;\r\n                                button7.Visible = true;\r\n                                btloc.Visible = false;\r\n                                label37.Visible = false;\r\n                            }\r\n                            id_exist = true;\r\n\r\n                            break;\r\n\r\n                        }\r\n\r\n                        label39.Text = i.ToString();\r\n                        //  MessageBox.Show((i).ToString());\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            if (i == rich2 - 1 \u0026\u0026 secondLine.Split(\u0027:\u0027)[9].Trim() != richTextBox4.Text)\r\n                            {\r\n                                richTextBox16.Text = \u0022\u0022;\r\n                                richTextBox2.Text = \u0022\u0022;\r\n                                richTextBox3.Text = \u0022\u0022;\r\n                                richTextBox4.Text = \u0022\u0022;\r\n                                richTextBox1.Text = \u0022\u0022;\r\n                                richTextBox8.Text = \u0022\u0022;\r\n                                richTextBox10.Text = \u0022\u0022;\r\n                                richTextBox11.Text = \u0022\u0022;\r\n                                richTextBox12.Text = \u0022\u0022;\r\n                                richTextBox13.Text = \u0022\u0022;\r\n                                richTextBox14.Text = \u0022\u0022;\r\n                                richTextBox15.Text = \u0022\u0022;\r\n                                maskedTextBox1.Text = \u0022\u0022;\r\n                                maskedTextBox2.Text = \u0022\u0022;\r\n                                maskedTextBox3.Text = \u0022\u0022;\r\n                                maskedTextBox4.Text = \u0022\u0022;\r\n                                maskedTextBox5.Text = \u0022\u0022;\r\n                                maskedTextBox1.Visible = false;\r\n                                maskedTextBox2.Visible = false;\r\n                                maskedTextBox3.Visible = false;\r\n                                maskedTextBox4.Visible = false;\r\n                                maskedTextBox5.Visible = false;\r\n                                button2.Enabled = false;\r\n                                button17.Enabled = false;\r\n                                id_exist = false;\r\n                                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                /// MessageBox.Show(\u0022N\u00C3O A DADOS CADASTRADOS!\u0022);\r\n            }\r\n\r\n            //  try\r\n            // {\r\n\r\n            //  string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n\r\n            // }\r\n            //  }\r\n\r\n\r\n\r\n\r\n            /*\r\n\r\n\r\n            if (richTextBox4.Text.Length \u003E= 5)\r\n            {\r\n                button2.Enabled = true;\r\n                button17.Enabled = true;\r\n                button29.Enabled = false;\r\n                richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                panel11.Size = new Size(360, 355);\r\n                panel11.Location = new System.Drawing.Point(95, 150);\r\n                pictureBox7.Size = new Size(330, 320);\r\n                pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n\r\n                richTextBox17.Text = \u0022\u0022;\r\n                //label37.Text = \u0022Bloquear\u0022;\r\n\r\n\r\n\r\n\r\n\r\n                try\r\n                {\r\n                    string path2 = richTextBox4.Text.ToString();\r\n                    Stream stream = File.Open(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text \u002B \u0022.jpg\u0022, FileMode.Open,\r\n                    FileAccess.Read, FileShare.Delete);\r\n                    pictureBox7.Image = Image.FromStream(stream);\r\n                    Bitmap bmp = new Bitmap(pictureBox7.Image);\r\n                    bmp.RotateFlip(RotateFlipType.Rotate180FlipY);\r\n                    pictureBox7.Image = bmp;\r\n                    stream.Close();\r\n\r\n                    //pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B path \u002B \u0022.jpg\u0022;\r\n                    //  pictureBox7.Image = new Bitmap(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B path \u002B \u0022.jpg\u0022);\r\n\r\n                    // pictureBox7.Dispose();\r\n\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    MessageBox.Show(\u0022N\u00E3o h\u00E1 foto cadastrada\u0022);\r\n                    string path = richTextBox4.Text.ToString();\r\n                    Stream stream = File.Open(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022, FileMode.Open,\r\n                    FileAccess.Read, FileShare.Delete);\r\n                    pictureBox7.Image = Image.FromStream(stream);\r\n\r\n                    Bitmap bmp = new Bitmap(pictureBox7.Image);\r\n                    bmp.RotateFlip(RotateFlipType.Rotate180FlipY);\r\n                    pictureBox7.Image = bmp;\r\n                    stream.Close();\r\n                    richTextBox4.Text = \u0022\u0022;\r\n                    richTextBox4.ReadOnly = false;\r\n                }\r\n                catch\r\n                {\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n                ler_linha2();\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            */\r\n        }\r\n        private void richTextBox4_TextChanged(object sender, EventArgs e)\r\n        {\r\n           \r\n\r\n\r\n                    if (richTextBox4.Text.Length \u003E= 5)\r\n            {\r\n                button15.Visible = true;\r\n\r\n                if (label7.Text == button28.Text)\r\n                {\r\n                    button2.Enabled = true;\r\n                    button17.Enabled = true;\r\n                    button29.Enabled = true;\r\n                }\r\n                else\r\n                {\r\n                    button2.Enabled = false;\r\n                    button17.Enabled = false;\r\n                    button29.Enabled = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                button15.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                button29.Enabled = false;\r\n            }\r\n\r\n            if (richTextBox4.Text == \u0022\u0022)\r\n            {\r\n                label46.Visible = true;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                button29.Enabled = false;\r\n            }\r\n            else\r\n            {\r\n                label46.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void pictureBox5_Click(object sender, EventArgs e)\r\n        {\r\n            band = 0;\r\n\r\n            lname.Text = label_nome[0];\r\n            lcompany.Text = label_emp[0];\r\n            lfunc.Text = label_Function[0];\r\n            lid.Text = label_Id[0];\r\n            lvessel.Text = label_vessel[0];\r\n            lproject.Text = label_porj[0];\r\n            lv1.Text = label_vaccine1[0];\r\n            lv2.Text = label_vaccine2[0];\r\n            lbustter.Text = label_reforco[0];\r\n            local1.Text = place1[0];\r\n            local2.Text = place2[0];\r\n            local3.Text = place3[0];\r\n            local4.Text = place4[0];\r\n            laccess.Text = label_acc[0];\r\n            level_yellow.Text = label_yellow[0];\r\n            level_green.Text = label_green[0];\r\n            level_red.Text = label_red[0];\r\n            lcheckin.Text = Label_initial[0];\r\n            lcheckout.Text = Label_final[0];\r\n            button1.Text = Label_Read_QRcode_On[0];\r\n            button28.Text = Label_Read_QRcode_Off[0];\r\n            button2.Text = Label_Create_QRcode[0];\r\n            button3.Text = Label_Show_data[0];\r\n            button4.Text = Label_Save_data[0];\r\n            //button5.Text = Label_Config[0];\r\n            button6.Text = Label_wifi[0];\r\n            button17.Text = Label_email[0];\r\n            button19.Text = Label_Mostrar_checkin[0];\r\n            button21.Text = Label_reset[0];\r\n            button22.Text = Label_fechar[0];\r\n            button8.Text = Label_entrada[0];\r\n            button9.Text = Label_saida[0];\r\n            button10.Text = Label_cancel[0];\r\n            label23.Text = label_onboard[0];\r\n            button27.Text = Label_reset_project[0];\r\n            button29.Text = label_reg[0];\r\n            label7.Text = Label_Read_QRcode_On[0];\r\n            label6.Text = onboard[0];\r\n            label_cad.Text = label_cad1[0];\r\n            label53.Text = Label_53[0];\r\n            button41.Text = bt_41[0];\r\n            button42.Text = bt_42[0];\r\n            button43.Text = bt_43[0];\r\n            button44.Text = bt_44[0];\r\n            button45.Text = bt_45[0];\r\n            regs.Text = bt_regis[0];\r\n            _cad = cad_mode[0];\r\n            _read = read_mode[0];\r\n        }\r\n\r\n        private void pictureBox6_Click(object sender, EventArgs e)\r\n        {\r\n            band = 1;\r\n            lname.Text = label_nome[1];\r\n            lcompany.Text = label_emp[1];\r\n            lfunc.Text = label_Function[1];\r\n            lid.Text = label_Id[1];\r\n            lvessel.Text = label_vessel[1];\r\n            lproject.Text = label_porj[1];\r\n            lv1.Text = label_vaccine1[1];\r\n            lv2.Text = label_vaccine2[1];\r\n            lbustter.Text = label_reforco[1];\r\n            local1.Text = place1[1];\r\n            local2.Text = place2[1];\r\n            local3.Text = place3[1];\r\n            local4.Text = place4[1];\r\n            laccess.Text = label_acc[1];\r\n            level_yellow.Text = label_yellow[1];\r\n            level_green.Text = label_green[1];\r\n            level_red.Text = label_red[1];\r\n            lcheckin.Text = Label_initial[1];\r\n            lcheckout.Text = Label_final[1];\r\n            button1.Text = Label_Read_QRcode_On[1];\r\n            button28.Text = Label_Read_QRcode_Off[1];\r\n            button2.Text = Label_Create_QRcode[1];\r\n            button3.Text = Label_Show_data[1];\r\n            button4.Text = Label_Save_data[1];\r\n            // button5.Text = Label_Config[1];\r\n            button6.Text = Label_wifi[1];\r\n            button17.Text = Label_email[1];\r\n            button19.Text = Label_Mostrar_checkin[1];\r\n            button21.Text = Label_reset[1];\r\n            button22.Text = Label_fechar[1];\r\n            button8.Text = Label_entrada[1];\r\n            button9.Text = Label_saida[1];\r\n            button10.Text = Label_cancel[1];\r\n            label23.Text = label_onboard[1];\r\n            button27.Text = Label_reset_project[1];\r\n            button29.Text = label_reg[1];\r\n            label7.Text = Label_Read_QRcode_On[1];\r\n            label6.Text = onboard[1];\r\n            label_cad.Text = label_cad1[1];\r\n            label53.Text = Label_53[1];\r\n            button41.Text = bt_41[1];\r\n            button42.Text = bt_42[1];\r\n            button43.Text = bt_43[1];\r\n            button44.Text = bt_44[1];\r\n            button45.Text = bt_45[1];\r\n            regs.Text = bt_regis[1];\r\n            _cad = cad_mode[1];\r\n            _read = read_mode[1];\r\n\r\n\r\n        }\r\n\r\n        private void richTextBox4_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter)\r\n            {\r\n                richTextBox1.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox4_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n\r\n            local1.Checked = false;\r\n            local2.Checked = false;\r\n            local3.Checked = false;\r\n            richTextBox6.Text = \u0022 \u0022;\r\n            richTextBox7.Text = \u0022 \u0022;\r\n            richTextBox15.Text = \u0022\u0022;\r\n            check_if_exist_id();\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                richTextBox6.Visible = true;\r\n                richTextBox7.Visible = true;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n\r\n               // button29.Enabled = false;\r\n            }\r\n            int lista_2 = 0;\r\n            for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n            {\r\n\r\n\r\n\r\n\r\n\r\n                //\r\n                lista_2\u002B\u002B;\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        private void button11_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button6_Click_2(object sender, EventArgs e)\r\n        {\r\n            // panel8.Location= new Point(Location.X,Location.Y);//Point(521,155);\r\n            panel8.Size = new Size(490, 353); //new Size(1030, 600);\r\n            wi\u002B\u002B;\r\n            if (wi == 1)\r\n            {\r\n                //online = true;\r\n                lview_AP.Items.Clear();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n\r\n\r\n                panel8.Visible = true;\r\n            }\r\n            if (wi == 2)\r\n            {\r\n                // online = false;\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                panel8.Visible = false;\r\n\r\n                wi = 0;\r\n            }\r\n\r\n            // System.Windows.Forms.Application.Exit();\r\n            //   this.Close();\r\n        }\r\n        private void testa_local()\r\n        {\r\n\r\n            if (local1.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local1val = 0;\r\n            }\r\n\r\n            if (local2.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local2val = 0;\r\n            }\r\n\r\n            if (local3.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local3val = 0;\r\n            }\r\n\r\n            if (local4.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local4val = 0;\r\n            }\r\n            if (level_yellow.Checked == false)\r\n            {\r\n                levelyellow = 0;\r\n            }\r\n            if (level_green.Checked == false)\r\n            {\r\n                levelgreen = 0;\r\n            }\r\n            if (level_red.Checked == false)\r\n            {\r\n                levelred = 0;\r\n            }\r\n        }\r\n        private void local1_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n\r\n\r\n\r\n                if (local1.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local1val = 1;\r\n                    local2.Checked = false;\r\n                    local4.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local1val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void local2_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n                if (local2.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local2val = 1;\r\n                    local1.Checked = false;\r\n                    local4.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local2val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void local4_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n                if (local4.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local4val = 1;\r\n                    local1.Checked = false;\r\n                    local2.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local4val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void button27_Click(object sender, EventArgs e)\r\n        {\r\n            password frm = new password();\r\n            frm.Show();\r\n        }\r\n\r\n        private void richTextBox17_Click(object sender, EventArgs e)\r\n        {\r\n            label37.Visible = false;\r\n        }\r\n\r\n        private void label37_Click(object sender, EventArgs e)\r\n        {\r\n            label37.Visible = false;\r\n        }\r\n\r\n        private void richTextBox17_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n                r7 = true;\r\n            }\r\n        }\r\n\r\n        private void richTextBox2_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox3_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox4_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox1_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox8_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            // e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox15_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox2_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox3.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox3_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox4.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox1_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox8.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox8_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox1.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox1_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox2.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox2_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox3.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox3_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox4.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox4_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox5.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox5_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox15.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox15_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox2.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n\r\n        public void sendGmail()\r\n        {\r\n            text1 = richTextBox2.Text;\r\n            text2 = richTextBox1.Text;\r\n            text5 = comboBox1.Text;\r\n            text6 = dateTimePicker1.Value.ToString(\u0022ddd, dd MMM yyyy\u0022);\r\n            text7 = dateTimePicker2.Value.ToString(\u0022ddd, dd MMM yyyy\u0022);\r\n            text8 = richTextBox8.Text;\r\n\r\n            // foi = true;\r\n            // panel1.BackColor = Color.Yellow;\r\n            // panel14.BackColor = Color.Yellow;\r\n            //  timer1.Stop();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            int width = panel4.Size.Width;\r\n            int height = panel4.Size.Height;\r\n            Bitmap bm = new Bitmap(width, height);\r\n            panel4.DrawToBitmap(bm, new System.Drawing.Rectangle(0, 0, width, height));\r\n            bm.Save(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n            //label4.Visible = false;\r\n\r\n\r\n            //pictureBox1.Image.Save(@\u0022C:\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n            System.Net.Mail.MailMessage mail = new System.Net.Mail.MailMessage();\r\n            mail.From = new System.Net.Mail.MailAddress(\u0022dof.qrcode@gmail.com\u0022);\r\n            try\r\n            {\r\n                mail.To.Add(text8); // para\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(\u0022erro send email\u0022, ex.Message);\r\n            }\r\n            mail.Subject = \u0022Libera\u00E7\u00E3o \u0022 \u002B text5 \u002B \u0022 - \u0022 \u002B text6 \u002B \u0022 at\u00E9 \u0022 \u002B text7 \u002B \u0022 -\u0022 \u002B text2;//id.Trim(); // assunto\r\n            mail.Body = \u0022\u003Cbr\u003E\u0022 \u002B text1 \u002B \u0022,\u003Cbr\u003E \u0022 \u002B \u0022\u003Cbr\u003ESeja bem vindo a DOF\u003Cbr\u003E \u003Cbr\u003ESegue o QR Code:\u003Cbr\u003EApresente este voucher de libera\u00E7\u00E3o, para acessar a embarca\u00E7\u00E3o \u003Cb\u003E\u0022 \u002B text5 \u002B \u0022\u003C/b\u003E \u003Cfont color=#FF0000\u003E, juntamente com documento de identifica\u00E7\u00E3o.\u0022;//id.Trim(); // mensagem\r\n            mail.IsBodyHtml = true;\r\n            System.Net.Mail.Attachment attachment;\r\n            mail.Attachments.Add(new System.Net.Mail.Attachment(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022));\r\n\r\n\r\n\r\n\r\n            try\r\n            {\r\n                using (var smtp = new SmtpClient(\u0022smtp.gmail.com\u0022))\r\n                {\r\n                    smtp.EnableSsl = true; // GMail requer SSL\r\n                    smtp.Port = 587;       // porta para SSL\r\n                    smtp.DeliveryMethod = SmtpDeliveryMethod.Network; // modo de envio\r\n                    smtp.UseDefaultCredentials = false; // vamos utilizar credencias especificas\r\n\r\n                    // seu usu\u00E1rio e senha para autentica\u00E7\u00E3o\r\n                    smtp.Credentials = new NetworkCredential(\u0022dof.qrcode@gmail.com\u0022, \u0022wammvtijopzdghps\u0022);\r\n                    //    smtp.Credentials = new NetworkCredential(\u0022alarm.boat@gmail.com\u0022, \u0022damhkxldmyegacvi\u0022);\r\n                    //  MessageBox.Show(\u0022acesso liberado\u0022);\r\n                    smtp.Send(mail);\r\n                    MessageBox.Show(\u0022E-mail sent with success\u0022);\r\n                    //  soma2 = 0;\r\n                    //   soma = 0;\r\n\r\n\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(\u0022erro send email\u0022, ex.Message);\r\n            }\r\n\r\n            mail.Attachments.Dispose();\r\n\r\n\r\n            // timer1.Start();\r\n\r\n        }\r\n        private void button17_Click(object sender, EventArgs e)\r\n        {\r\n            \r\n            rec = false;\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n               // ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n               // Process.Start(startInfo);\r\n                */\r\n                check_id_onboard();\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    alterado();\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n\r\n\r\n\r\n\r\n\r\n                        // \r\n                        //  if (textBox7.SelectionLength \u003E= 0)\r\n                        // {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                        // }\r\n                        /*\r\n                        String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                        String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                        String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                        String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                        String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                        String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n            */\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox2.Text != \u0022 \u0022 \u0026\u0026 richTextBox3.Text != \u0022 \u0022 \u0026\u0026 richTextBox4.Text != \u0022 \u0022 \u0026\u0026 comboBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n\r\n\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                    read_write();\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                    qr_generate = \u0022Qrcode Sent by E-mail\u0022;\r\n\r\n                                    //\r\n                                    // CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    //  create_qrcode();\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n                                    create_qrcode_new();\r\n                                    sendGmail();\r\n                                    \r\n                                    //  print_qrcode();\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO ENVIAR EMAIL SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void timer6_Tick(object sender, EventArgs e)\r\n        {\r\n            //  label52.Text = count2.ToString();\r\n\r\n\r\n\r\n\r\n            if (online_ == true)\r\n            {\r\n                //  panel12.BackColor = Color.GreenYellow;\r\n\r\n                // label40.Visible = false;\r\n\r\n            }\r\n\r\n            if (online_ == false)\r\n            {\r\n                //  panel12.BackColor = Color.Red;\r\n                // label40.Visible = false;\r\n            }\r\n\r\n            online_ = false;\r\n        }\r\n\r\n        private void textBox7_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox7_TextChanged_1(object sender, EventArgs e)\r\n        {\r\n            if (tempo == 0)\r\n            {\r\n                tempo = 1;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                timer4.Start();\r\n\r\n            }\r\n        }\r\n        int fil = 0;\r\n        private void button34_Click(object sender, EventArgs e)\r\n        {\r\n            //  MessageBox.Show(libera.ToString());\r\n            // if (libera == true)\r\n            // {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n                object misValue = System.Reflection.Missing.Value;\r\n                String line;\r\n\r\n                //   foreach (DataGridViewRow item in this.dataGridView1.SelectedRows)\r\n                //    {\r\n                //dataGridView1.Rows.RemoveAt(item.Index);\r\n                //   }\r\n\r\n                Microsoft.Office.Interop.Excel._Application app = new Microsoft.Office.Interop.Excel.Application();\r\n\r\n                Microsoft.Office.Interop.Excel._Workbook workbook = app.Workbooks.Add(Type.Missing);\r\n\r\n                Microsoft.Office.Interop.Excel._Worksheet worksheet = null;\r\n\r\n                // app.Visible = false;\r\n\r\n                worksheet = workbook.Sheets[\u0022Planilha1\u0022];\r\n                //  worksheet = workbook.ActiveSheet;\r\n\r\n                for (int i = 1; i \u003C dataGridView1.Columns.Count \u002B 1; i\u002B\u002B)\r\n                {\r\n                    worksheet.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;\r\n                }\r\n                // storing Each row and column value to excel sheet  \r\n                for (int i = 0; i \u003C dataGridView1.Rows.Count; i\u002B\u002B)\r\n                {\r\n                    for (int j = 0; j \u003C dataGridView1.Columns.Count; j\u002B\u002B)\r\n                    {\r\n                        if (dataGridView1.Rows[i].Cells[j].Value != null)\r\n                        {\r\n                            worksheet.Cells[i \u002B 2, j \u002B 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                string folder = @\u0022D:\\CRIPTOQRCODE_backup\\\u0022; //nome do diretorio a ser criado\r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n                if (!Directory.Exists(folder))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(folder);\r\n\r\n                }\r\n\r\n                if (Directory.Exists(folder))\r\n                {\r\n                    fil\u002B\u002B;\r\n\r\n                    worksheet.SaveAs(@\u0022D:\\CRIPTOQRCODE_backup\\\u0022 \u002B fil.ToString() \u002B \u0022FILTRO.xlsx\u0022, Type.Missing);\r\n                    //  app.\r\n\r\n                    app.Quit();\r\n\r\n                    System.Diagnostics.Process[] process = System.Diagnostics.Process.GetProcessesByName(\u0022Excel\u0022);\r\n                    foreach (System.Diagnostics.Process p in process)\r\n                    {\r\n                        if (!string.IsNullOrEmpty(p.ProcessName))\r\n                        {\r\n                            try\r\n                            {\r\n                                p.Kill();\r\n                            }\r\n                            catch { }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                MessageBox.Show(\u0022Backup concluido com sucesso!\u0022);\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    // textBox7.Focus();\r\n                    //textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n            ///  }\r\n        }\r\n\r\n        private void richTextBox3_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox3.Text == \u0022\u0022)\r\n            {\r\n                label45.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label45.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void richTextBox1_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox1.Text == \u0022\u0022)\r\n            {\r\n                label47.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label47.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void richTextBox8_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox8.Text == \u0022\u0022)\r\n            {\r\n                // label48.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                //  label48.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void listBox1_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            timer10.Enabled = false;\r\n            timer12.Enabled = false;\r\n            //Criar um MessageBox com os bot\u00F5es Sim e N\u00E3o e deixar o bot\u00E3o 2(N\u00E3o) selecionado por padr\u00E3o e comparar o bot\u00E3o apertado\r\n            if (DialogResult.Yes == MessageBox.Show(\u0022TEM CERTEZA QUE DESEJA DAR SAIDA MANUAL A ESTA PESSOA?\u0022, \u0022Confirma\u00E7\u00E3o\u0022, MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2))\r\n            {\r\n               \r\n                string bio = listBox1.SelectedItem.ToString().Trim();\r\n                // MessageBox.Show(bio);\r\n                string teste = \u0022\u0022;//\u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                int ver = 0;\r\n                string filePath = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n               \r\n\r\n                string tempFile = Path.GetTempFileName();\r\n\r\n                using (var sr = new StreamReader(filePath))\r\n                {\r\n                    using (var sw = new StreamWriter(tempFile))\r\n                    {\r\n                        string line;\r\n\r\n                        while ((line = sr.ReadLine()) != null)\r\n                        {\r\n                            if (line != listBox1.SelectedItem.ToString().Trim())\r\n                                sw.WriteLine(line);\r\n                        }\r\n                        sr.Close();\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                string line_to_delete = bio;\r\n                var oldLines = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                var newLines = oldLines.Where(line =\u003E !line.Contains(line_to_delete));\r\n                System.IO.File.WriteAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, newLines);\r\n\r\n                out_by_user();\r\n\r\n\r\n\r\n\r\n                // File.Delete(filePath);\r\n                // File.Move(tempFile, filePath);\r\n                // File.\r\n               // ler_linha();\r\n\r\n\r\n\r\n                while (listBox1.SelectedItems.Count \u003E 0)\r\n                {\r\n\r\n\r\n\r\n                    listBox1.Items.Remove(listBox1.SelectedItems[0]);\r\n                }\r\n\r\n                label67.Text = listBox1.SelectedItems.Count.ToString();\r\n\r\n                // Get first 12 characters substring from a string    \r\n                //   string authorName = bio.Substring(0,5);\r\n                //Sua rotina de exclus\u00E3o\r\n                //Confirmando exclus\u00E3o para o usu\u00E1rio\r\n                //   MessageBox.Show(\u0022Registro apagado com sucesso\u0022, \u0022Sucesso\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                //  MessageBox.Show(authorName, \u0022Sucesso\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                // myThread.Abort();\r\n               // checa_host();\r\n                //   MessageBox.Show(\u0022listBox1_MouseDoubleClick\u0022);\r\n                //atualiza_compartilhamento();\r\n\r\n                if (label27.Text == \u00220\u0022)\r\n                {\r\n                    panel6.Visible = false;\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // MessageBox.Show(\u0022Registro cancelado\u0022);\r\n            }\r\n\r\n            // ler_linha();\r\n\r\n            //  }\r\n\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void listBox1_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            pictureBox4.Visible = true;\r\n\r\n            try\r\n            {\r\n\r\n\r\n                if (listBox1.SelectedItem != null) {\r\n\r\n                    string path = listBox1.SelectedItem.ToString();\r\n\r\n                    string s = path;\r\n                    string id = s.Split(\u0022:\u0022.ToCharArray())[8];\r\n                    // MessageBox.Show(id);\r\n                    pictureBox4.Visible=true; \r\n                    pictureBox4.Load(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B id.Trim() \u002B \u0022.jpg\u0022);\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                pictureBox4.Visible = true;\r\n                pictureBox4.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n            }\r\n        }\r\n        int click_ = 0;\r\n        private void pictureBox4_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            click_\u002B\u002B;\r\n            if (click_ == 1)\r\n            {\r\n                pictureBox4.Size = new Size(500, 500);\r\n                pictureBox4.Location = new System.Drawing.Point(600, 300);\r\n            }\r\n            if (click_ == 2)\r\n            {\r\n                pictureBox4.Size = new Size(170, 140);\r\n                pictureBox4.Location = new System.Drawing.Point(1544, 6);\r\n                click_ = 0;//847; 56\r\n            }\r\n        }\r\n\r\n        private void pictureBox4_MouseDoubleClick_1(object sender, MouseEventArgs e)\r\n        {\r\n            click_\u002B\u002B;\r\n            if (click_ == 1)\r\n            {\r\n                pictureBox4.Size = new Size(500, 500);\r\n                pictureBox4.Location = new System.Drawing.Point(600, 300);\r\n            }\r\n            if (click_ == 2)\r\n            {\r\n                pictureBox4.Size = new Size(170, 140);\r\n                pictureBox4.Location = new System.Drawing.Point(1544, 6);\r\n                click_ = 0;//847; 56\r\n            }\r\n        }\r\n\r\n        private void button18_Click(object sender, EventArgs e)\r\n        {\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n            panel6.Visible = false;\r\n        }\r\n\r\n        private void richTextBox16_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                button7.Visible = false;\r\n                btloc.Visible = false;\r\n                button15.Visible = false;\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void richTextBox4_Click(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text == \u0022\u0022)\r\n            {\r\n                button15.Visible = false;\r\n            }\r\n        }\r\n        private void GetBiosInformation()\r\n        {\r\n            string relDt = \u0022\u0022;\r\n            try\r\n            {\r\n                string login = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\login.txt\u0022);\r\n                ManagementObjectSearcher mSearcher = new ManagementObjectSearcher(\u0022SELECT SerialNumber, SMBIOSBIOSVersion, ReleaseDate FROM Win32_BIOS\u0022);\r\n                ManagementObjectCollection collection = mSearcher.Get();\r\n                foreach (ManagementObject obj in collection)\r\n                {\r\n\r\n                    // MessageBox.Show((string)obj[\u0022SerialNumber\u0022]);\r\n                    // textBox13.Text = (string)obj[\u0022SerialNumber\u0022];\r\n                    // lblBiosSerial.Text = (string)obj[\u0022SerialNumber\u0022];\r\n                    // lblBiosVersion.Text = (string)obj[\u0022SMBIOSBIOSVersion\u0022];\r\n                    relDt = (string)obj[\u0022ReleaseDate\u0022];\r\n                    DateTime dt = ManagementDateTimeConverter.ToDateTime(relDt);\r\n                    //  lblBiosDate.Text = dt.ToString(\u0022dd-MMM-yyyy\u0022);//date format\r\n                    if (login.Trim() != (string)obj[\u0022SerialNumber\u0022])\r\n                    {\r\n                        panel9.Visible = true;\r\n                        panel9.Size = new Size(1693, 997);\r\n                        //36; 632\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                        panel9.Visible = false;\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Console.WriteLine(ex.ToString());\r\n            }\r\n\r\n\r\n        }\r\n        private void button5_Click(object sender, EventArgs e)\r\n        {\r\n            check_id_onboard2();\r\n          //  check_id_onboard();\r\n            //File.WriteAllText(@\u0022C:\\teste\\PROJETO.txt\u0022, \u0022teste1\u0022 \u002B \u0022\\r\\n\u0022 \u002B \u0022teste1\u0022);\r\n\r\n\r\n            /*\r\n            String l = \u0022\u0022;\r\n            bool ESIM = false;\r\n            bool dois = false;\r\n            bool tres = false;\r\n            string nume = \u0022\u0022;\r\n            string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\\r\n            \r\n           \u0022);\r\n            id_1 = 0;\r\n            for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n            {\r\n\r\n                if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                {\r\n\r\n\r\n\r\n\r\n                    l = lines[i].Split(\u0027:\u0027)[9].Trim();\r\n                    if (lines[i].Split(\u0027:\u0027)[1].Trim() != richTextBox16.Text.Trim()) {\r\n                        MessageBox.Show(\u0022O N\u00DAMERO DA IDENTIDADE\u0022 \u002B lines[i].Split(\u0027:\u0027)[9].Trim() \u002B \u0022 J\u00C1 EST\u00C1 CADASTRADO NO ACESSO DE N\u00DAMERO \u0022 \u002B lines[i].Split(\u0027:\u0027)[1].Trim());\r\n                    }\r\n                    ESIM = true;\r\n                    richTextBox4.Text = lines[int.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                    string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                    //  MessageBox.Show(\u0022 CADASTRO REALIZADO COM SUCESSO, A IDENTIDADE N\u00C3O FOI ALTERADA POIS J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                    break;\r\n\r\n                }\r\n                else\r\n                {\r\n                    ESIM = false;\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            if (ESIM == false)\r\n            {\r\n\r\n                id_1 = 1;\r\n                string[] lines2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                if (richTextBox4.Text.Trim() != l) {\r\n                    string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    text = text.Replace(lines2[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                    //  MessageBox.Show(\u0022CADASTRO REALIZADO COM SUCESSO\u0022);\r\n                }\r\n                else\r\n                {\r\n\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            /*\r\n                    \r\n\r\n                        if (id_1 == 0)\r\n                        {\r\n                            string id_3;\r\n                            int exs = 0;\r\n                                   string[] lines3 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                   string id_11 = lines[Int16.Parse(richTextBox16.Text)-1].Split(\u0027:\u0027)[1].Trim();\r\n\r\n                            for (int i = 0; i \u003C lines3.Length; i\u002B\u002B)\r\n                            {\r\n\r\n                                if (richTextBox4.Text.Trim() == lines[i].Split(\u0027:\u0027)[9].Trim())\r\n                                {\r\n                                    MessageBox.Show(\u0022J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                                    exs = 1;\r\n                                }\r\n\r\n                                else\r\n                                {\r\n                                    exs = 1; \r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            if (exs == 1)\r\n                            {\r\n                                id_3 = richTextBox4.Text.Trim();//lines[Int16.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                            }\r\n                            string text4 = \u0022Number : \u0022 \u002B id_11 \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B id_3 \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                            string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                            text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                            MessageBox.Show(\u0022NOVO CADASTRO REALIZADO COM SUCESSO!\u0022);\r\n\r\n                        }\r\n\r\n                        //  GetBiosInformation();\r\n                        /*\r\n                        if (dataGridView1.Rows.Count \u003E 0)\r\n                        {\r\n                            try\r\n                            {\r\n                                XcelApp.Application.Workbooks.Add(Type.Missing);\r\n                                for (int i = 1; i \u003C dataGridView1.Columns.Count \u002B 1; i\u002B\u002B)\r\n                                {\r\n                                    XcelApp.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;\r\n                                }\r\n                                //\r\n                                for (int i = 0; i \u003C dataGridView1.Rows.Count - 1; i\u002B\u002B)\r\n                                {\r\n                                    for (int j = 0; j \u003C dataGridView1.Columns.Count; j\u002B\u002B)\r\n                                    {\r\n                                        XcelApp.Cells[i \u002B 2, j \u002B 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();\r\n                                    }\r\n                                }\r\n                                //\r\n                                XcelApp.Columns.AutoFit();\r\n                                //\r\n                                XcelApp.Visible = true;\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                MessageBox.Show(\u0022Erro : \u0022 \u002B ex.Message);\r\n                                XcelApp.Quit();\r\n                            }\r\n                        }\r\n                        */\r\n            //out_by_user();\r\n            //string line2 = null;\r\n            // string line_to_delete = \u0022the line i want to delete\u0022;\r\n\r\n\r\n            // var oldLines = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            // var newLines = oldLines.Where(line =\u003E !line.Contains(line_to_delete));\r\n            // System.IO.File.WriteAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, newLines);\r\n\r\n        }\r\n\r\n        private void button9_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button36_Click(object sender, EventArgs e)\r\n        {\r\n            String ma = \u0022teste\u0022;\r\n            string str2 = string.Empty;\r\n            int val2 = 0;\r\n            //  label5.Text = ma.ToString();\r\n            for (int i = 0; i \u003C ma.Length; i\u002B\u002B)\r\n            {\r\n                if (Char.IsDigit(ma[i]))\r\n                    str2 \u002B= ma[i];\r\n            }\r\n            //label5.Text = str2;\r\n\r\n            while (str2.Length \u003E 5)\r\n            {\r\n                str2 = str2.Substring(0, str2.Length - 1);\r\n            }\r\n\r\n            if (str2.Length \u003E 0)\r\n            {\r\n                val2 = int.Parse(str2);\r\n            }\r\n\r\n\r\n            double str3 = ((Math.Sqrt(val2)) * val2) / 2;\r\n            String str5 = str3.ToString();\r\n            str5.Substring(0, 5);\r\n            StreamReader srb = new StreamReader(\u0022code.txt\u0022); //C:\\Users\\win 10\\Documents   Users\\\\win 10\\\\Documents\\\\local.txt\r\n            string xb = srb.ReadToEnd().Trim();\r\n            srb.Close();\r\n            id = val2.ToString();\r\n            label2.Text = \u0022ID: \u0022 \u002B val2.ToString();\r\n            // label9.Text = \u0022ID: \u0022 \u002B val.ToString();\r\n            if (xb != str5.Substring(0, 5).Trim())\r\n            {\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            using (StreamWriter writer = new StreamWriter(\u0022code.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n            {\r\n                // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                writer.WriteLine(textBox11.Text);\r\n                writer.Close();\r\n            }\r\n            //Task.Delay(1000).Wait();\r\n            System.Windows.Forms.Application.Restart();\r\n\r\n\r\n            int val = 0;\r\n            val = int.Parse(textBox11.Text);\r\n            double str33 = ((Math.Sqrt(val)) * val) / 2;\r\n            textBox12.Text = str3.ToString();\r\n        }\r\n\r\n        private void richTextBox6_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE ALTERAR A DATA?\u0022, \u0022ALTERA\u00C7\u00C3O DE DATA\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    dateTimePicker1.Visible = true;\r\n                    dateTimePicker2.Visible = true;\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n                    dateTimePicker1.Visible = false;\r\n                    dateTimePicker2.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox2_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox7_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE ALTERAR A DATA?\u0022, \u0022ALTERA\u00C7\u00C3O DE DATA\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    dateTimePicker1.Visible = true;\r\n                    dateTimePicker2.Visible = true;\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n                    dateTimePicker1.Visible = false;\r\n                    dateTimePicker2.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        private void button8_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button10_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button30_Click(object sender, EventArgs e)\r\n        {\r\n            label34.Text = DateTime.Now.ToString(\u0022dd/MM/yyyy\u0022).Trim();\r\n        }\r\n\r\n        private void button33_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void panel3_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox15_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        private void get_link_txt()\r\n        {\r\n            try\r\n            {\r\n                if (richTextBox15.Text != \u0022\u0022)\r\n                {\r\n                    // https://drive.google.com/file/d/12wpEOD6oDNL4eWgJXRFEzkPlmJ5fwdsT/view?usp=sharing\r\n\r\n                    // string path = richTextBox15.Text;\r\n                    //  String path2;\r\n                    //  string[] subs = path.Split(\u0027/\u0027);\r\n                    panel9.Size = new Size(1050, 43);\r\n                    path2 = \u0022https://drive.google.com/file/d/\u0022 \u002B richTextBox15.Text.Trim() \u002B \u0022/view?usp=sharing\u0022;\r\n                    // path2 = \u0022https://drive.google.com/file/d/12wpEOD6oDNL4eWgJXRFEzkPlmJ5fwdsT/view?usp=sharing\u0022;\r\n                    panel9.Visible = true;\r\n                    panel14.Visible = true;\r\n                    panel14.Size = new Size(1145, 44);\r\n\r\n                    webBrowser1.Visible = true;\r\n                    // webBrowser1.DocumentText = \u0022\u003Chtml\u003E\u003C head \u003E\u003C title \u003E HTML Backgorund Color\u003C/ title \u003E\u003C/ head \u003E\u003C body style = \u0027background-color:grey;\u0027 \u003E\u003C h1 \u003E Products \u003C/ h1 \u003E\u003C/ body \u003E\u003C/ html \u003E\u0022;\r\n                    webBrowser1.Size = new Size(1145, 680);\r\n\r\n\r\n                    this.webBrowser1.Navigate(path2);\r\n                }\r\n                // MessageBox.Show(subs[5]);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void richTextBox15_DoubleClick(object sender, EventArgs e)\r\n        {\r\n            get_link_txt();\r\n        }\r\n\r\n        private void button37_Click(object sender, EventArgs e)\r\n        {\r\n            panel9.Visible = false;\r\n            panel14.Visible = false;\r\n            webBrowser1.Visible = false;\r\n        }\r\n\r\n        private void lcompany_Click(object sender, EventArgs e)\r\n        {\r\n            richTextBox1.Text = comboBox1.Text \u002B \u0022 CREW\u0022;\r\n        }\r\n\r\n        int ip_find = 0;\r\n        int count2 = 0;\r\n        int soma = 0;\r\n        public void scan2(string start, string end)\r\n        {\r\n            comp = 0;\r\n            //   timer9.Enabled = false;\r\n            if (soma == 0)\r\n            {\r\n           \r\n                try\r\n                {\r\n\r\n                    //Split IP string into a 4 part array\r\n                    string[] startIPString = start.Split(\u0027.\u0027);\r\n                    int[] startIP = Array.ConvertAll\u003Cstring, int\u003E(startIPString, int.Parse); //Change string array to int array\r\n\r\n\r\n                    string[] endIPString = end.Split(\u0027.\u0027);\r\n                    int[] endIP = Array.ConvertAll\u003Cstring, int\u003E(endIPString, int.Parse);\r\n                    //Count the number of successful pings\r\n                    // count2 = 0;\r\n                    Ping myPing;\r\n                    PingReply reply;\r\n                    IPAddress addr;\r\n                    IPHostEntry host;\r\n                  //  \r\n\r\n                    //Progress bar\r\n\r\n                    //   listVAddr.Items.Clear();\r\n\r\n                    //Loops through the IP range, maxing out at 255\r\n                    for (int i = startIP[2]; i \u003C= endIP[2]; i\u002B\u002B)\r\n                    { //3rd octet loop\r\n                        for (int y = startIP[3]; y \u003C= 100; y\u002B\u002B)\r\n                        { //4th octet loop\r\n                            string ipAddress = startIP[0] \u002B \u0022.\u0022 \u002B startIP[1] \u002B \u0022.\u0022 \u002B i \u002B \u0022.\u0022 \u002B y; //Convert IP array back into a string\r\n                            string endIPAddress = endIP[0] \u002B \u0022.\u0022 \u002B endIP[1] \u002B \u0022.\u0022 \u002B endIP[2] \u002B \u0022.\u0022 \u002B (endIP[3] \u002B 1); // \u002B1 is so that the scanning stops at the correct range\r\n\r\n                            //If current IP matches final IP in range, break\r\n                            if (ipAddress == endIPAddress)\r\n                            {\r\n                                break;\r\n                            }\r\n\r\n                            myPing = new Ping();\r\n                            try\r\n                            {\r\n                                reply = myPing.Send(ipAddress, 10); //Ping IP address with 500ms timeout\r\n                                myping2 = reply.RoundtripTime.ToString();\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                break;\r\n                            }\r\n\r\n\r\n\r\n                            //Log pinged IP address in listview\r\n                            //Grabs DNS information to obtain system info\r\n                            if (reply != null \u0026\u0026 reply.Status == IPStatus.Success)\r\n                            {\r\n\r\n\r\n                                try\r\n                                {\r\n\r\n                                    addr = IPAddress.Parse(ipAddress);\r\n                                    host = Dns.GetHostEntry(addr);\r\n                                    // addr.Address.Trim();\r\n\r\n                                    //  listVAddr.Items.Add(new ListViewItem(new String[] { host.HostName, \u0022Up\u0022 })); //Log successful pings\r\n                                    host.HostName.Trim();\r\n\r\n                                    String input = host.HostName.Trim();//host.HostName.Substring(0, host.HostName.LastIndexOf(\u0022.\u0022));\r\n                                                                        // label21.Text = input;\r\n                                                                        //  MessageBox.Show(input.ToString());\r\n                                                                        //input = \u0022\u0022;\r\n                                                                        //  MessageBox.Show(ipAddress);\r\n                                    if (host.HostName.Trim() != hostName.Trim() \u0026\u0026 hostName != \u0022\u0022)\r\n                                    {\r\n                                        //  \r\n                                        //  ip_find\u002B\u002B;\r\n                                        //  count2=2;\r\n\r\n                                        count2\u002B\u002B;\r\n\r\n                                    }\r\n                                    if (host.HostName.Trim() == hostName)\r\n                                    {\r\n\r\n                                        // count2=1;\r\n\r\n                                        //  ip_find--;\r\n                                        //  MessageBox.Show(\u0022ok\u0022 \u002B host.HostName.Trim());\r\n                                        // online_ = false;\r\n                                    }\r\n\r\n\r\n                                    //  if (host.HostName!= \u0022LAPTOP-DRSLFUQS.local\u0022)\r\n                                    /// {\r\n\r\n                                    //  MessageBox.Show(input.Trim());\r\n                                    // MessageBox.Show(\u0022teste ip \u0022 \u002B input \u002B \u0022  \u0022 \u002B count);\r\n                                    // \r\n                                    //  \\\\CRIPTOQRCODE2\\\\compartilhamento\\\\\r\n                                   // rede1 = \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022;\r\n                                    // MessageBox.Show(rede1);\r\n                                    // host.HostName = \u0022\u0022;\r\n\r\n                                    online_ = true;\r\n                                    p = 1;\r\n                                    int at = 0;\r\n                                    //timer7.Stop();\r\n                                    //escrever_lock();\r\n                                    string hostName2 = System.Net.Dns.GetHostName();\r\n                                    string str = input.Substring(0, 6).Trim();\r\n                                    //  MessageBox.Show(input);\r\n\r\n                                    if (input != \u0022 \u0022 \u0026\u0026 input != hostName2\u002B\u0022.lan\u0022 \u0026\u0026 input != hostName2)\r\n                                    {\r\n\r\n                                        if (str == \u0022QRCODE\u0022)\r\n                                        {\r\n                                            ip_find\u002B\u002B;\r\n                                            \r\n                                            rede1 = \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022;\r\n                                            rede10= input.Trim();\r\n                                            //  panel12.BackColor = Color.Black;\r\n                                            //      MessageBox.Show(input);\r\n                                            try\r\n                                            {\r\n                                                atualiza_compartilhamento();\r\n                                            }\r\n                                            catch\r\n                                            {\r\n\r\n                                            }\r\n\r\n                                            // timer11.Start();\r\n                                            str = \u0022\u0022;\r\n\r\n\r\n                                        }\r\n                                        else\r\n                                        {\r\n\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                    {\r\n\r\n                                    }\r\n\r\n\r\n                                    //System.Threading.Thread.Sleep(1000);\r\n                                    // atualiza_compartilhamento();\r\n                                   // input = \u0022\u0022;\r\n\r\n                                    //  }\r\n\r\n                                    //  MessageBox.Show(count.ToString());\r\n\r\n                                    //  \r\n                                    //    MessageBox.Show(host.HostName.Trim());\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                                catch\r\n                                {\r\n\r\n                                    // listVAddr.Items.Add(new ListViewItem(new String[] { ipAddress, \u0022Could not retrieve\u0022, \u0022Up\u0022 })); //Logs pings that are successful, but are most likely not windows machines\r\n\r\n\r\n                                    //  online_ = false;\r\n                                    //  count2--;\r\n\r\n\r\n\r\n\r\n                                }\r\n                                // MessageBox.Show(\u0022teste ip \u0022 \u002B count);\r\n\r\n                                // count2 = 0;\r\n\r\n\r\n\r\n                            }\r\n                            else\r\n                            {\r\n\r\n\r\n\r\n                            }\r\n\r\n                            //  count2--;\r\n\r\n\r\n\r\n\r\n                            if (count2 == 0)\r\n                            {\r\n                                //  online_ = false;\r\n                                // count2 = 0;\r\n                            }\r\n                            if (count2 == 2)\r\n                            {\r\n\r\n                                // online_ = true;\r\n                            }\r\n\r\n\r\n\r\n                            if (count2 == 0)\r\n                            {\r\n                                // MessageBox.Show(\u0022sem rede\u0022);\r\n                            }\r\n                        }\r\n\r\n                        startIP[3] = 1; //If 4th octet reaches 255, reset back to 1\r\n\r\n\r\n                    }\r\n\r\n                  //  panel12.BackColor = Color.Black;\r\n                    //   MessageBox.Show(\u0022Scanning done!\\nFound \u0022 \u002B ip_find \u002B \u0022 hosts.\u0022, \u0022Done\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                    compr = 0;\r\n                 //   label62.Text = ip_find.ToString();\r\n                  //  ip_find = 0;\r\n\r\n\r\n                    //comp = 1;\r\n\r\n                    ///System.Threading.Thread.Sleep(2000);\r\n                    //  MessageBox.Show(\u0022ok\u0022);\r\n                    //  timer7.Start();\r\n\r\n                    //Re-enable buttons\r\n\r\n                    //    MessageBox.Show(\u0022Scanning done!\\nFound \u0022 \u002B ip_find \u002B \u0022 hosts.\u0022, \u0022Done\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                    //Catch exception that throws when stopping thread, caused by ping waiting to be acknowledged\r\n                   // ip_find = 0;\r\n\r\n                }\r\n                catch (ThreadAbortException tex)\r\n                {\r\n                    Console.WriteLine(tex.StackTrace);\r\n                    // txtIP.Enabled = true;\r\n                    // txtIP2.Enabled = true;\r\n\r\n                }\r\n\r\n\r\n                //Catch invalid IP types\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(ex.StackTrace);\r\n\r\n                    //txtIP.Enabled = true;\r\n                    // txtIP2.Enabled = true;\r\n\r\n                }\r\n\r\n\r\n                if (count \u003E= 2)\r\n                {\r\n                    // online_ = true;\r\n                    // if (online_ == true)\r\n                    //  {\r\n                    // label40.Visible = false;\r\n                    // panel12.BackColor = Color.GreenYellow;\r\n\r\n\r\n                    //  }\r\n                    //  if (online_ == false)\r\n                    //  {\r\n                    //  panel12.BackColor = Color.Red;\r\n                    //  label40.Visible = true;\r\n\r\n                    // }\r\n                    // online_ = false;\r\n                    //MessageBox.Show(count.ToString());\r\n                }\r\n            }\r\n           /// ip_find = 0;\r\n            //  timer9.Enabled = true;\r\n        }\r\n\r\n        private void timer7_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n            // String block = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n            if (comp == 1)\r\n            {\r\n                // ler_linha();\r\n                //   checa_host();\r\n                // atualiza_compartilhamento();\r\n\r\n                //    MessageBox.Show(comp.ToString());\r\n            }\r\n        }\r\n\r\n        private void label42_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        int ok = 1;\r\n        private void cria_CarregarPlanilha()\r\n        {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            try\r\n            {\r\n                File.Delete(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            try\r\n            {\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                // MessageBox.Show(count.ToString());\r\n\r\n                var pasta = app.Workbooks.Open(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n\r\n                var plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                // plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n                plan.Columns.AutoFit();\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n                plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n                plan.Cells[1, 1] = \u0022NUMBER\u0022;\r\n                plan.Cells[1, 2] = \u0022NAME\u0022;\r\n                plan.Cells[1, 3] = \u0022COMPANY\u0022;\r\n                plan.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n                plan.Cells[1, 5] = \u0022ID\u0022;\r\n                plan.Cells[1, 6] = \u0022EMAIL\u0022;\r\n                plan.Cells[1, 7] = \u0022VESSEL\u0022;\r\n                plan.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n                plan.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n\r\n                for (int a = 0; a \u003C count; a\u002B\u002B)\r\n                {\r\n                    ok\u002B\u002B;\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(a);\r\n                    //  ss\u002B\u002B;\r\n                    //  String local = secondLine.Split(\u0027:\u0027)[0].Trim();\r\n\r\n                    //   txtCodigoFunci.Text = lastRow.ToString();\r\n                    lastRow\u002B\u002B;\r\n                    plan.Cells[ok, 1] = secondLine.Split(\u0027:\u0027)[0].Trim();\r\n                    // plan.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.Red);\r\n                    plan.Cells[ok, 2] = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                    plan.Cells[ok, 3] = secondLine.Split(\u0027:\u0027)[2].Trim();\r\n                    plan.Cells[ok, 4] = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                    plan.Cells[ok, 5] = secondLine.Split(\u0027:\u0027)[4].Trim();\r\n                    plan.Cells[ok, 6] = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                    plan.Cells[ok, 7] = secondLine.Split(\u0027:\u0027)[6].Trim();\r\n                    plan.Cells[ok, 8] = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                    plan.Cells[ok, 9] = secondLine.Split(\u0027:\u0027)[8].Trim();\r\n                    // plan.Cells[lastRow, 10] = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                    // plan.Cells[lastRow, 11] = secondLine.Split(\u0027:\u0027)[10].Trim();\r\n                    // MessageBox.Show(\u0022ok\u0022);\r\n                }\r\n                //  plan.quit();\r\n\r\n                pasta.SaveAs(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, false, false, Excel.XlSaveAsAccessMode.xlNoChange,\r\n                Type.Missing, Type.Missing, Type.Missing, Type.Missing);\r\n                // pasta.Save();\r\n                pasta.Close();\r\n                // plan.Close();\r\n                MessageBox.Show(\u0022Backup concluido com sucesso!\u0022);\r\n\r\n                //  atualiza_compartilhamento();\r\n\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message);\r\n            }\r\n            //CarregarPlanilha();\r\n\r\n        }\r\n        void PausaComThreadSleep()\r\n        {\r\n            Thread.Sleep(5000);\r\n        }\r\n        async Task PausaComTaskDelay()\r\n        {\r\n            await Task.Delay(5000);\r\n        }\r\n        string secondLine2;\r\n        string secondLine5;\r\n        private void update()\r\n        {\r\n\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n\r\n                File.Delete(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                int ss = 7;\r\n\r\n                try\r\n                {\r\n                    var wbook = new XLWorkbook(drives.FirstOrDefault().Name.ToString() \u002B \u0022//Controle de Acesso.xlsx\u0022);\r\n                    var ws1 = wbook.Worksheet(1);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tFun\u00E7\u00E3o\tE-mail\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n\r\n                    //Number : 4 : Name : ARTHUR LOPES : Compay : ALTN :Funcition:  COORDENADOR DE LOGISTICA  :Id: 6376702601 : E-mail : altn.comercial@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 31/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : :Conv\u00E9s\r\n                    //  int count = File.ReadAllLines(@\u0022D:/Controle de Acesso.xlsx\u0022).Length;\r\n\r\n                    var columnCount = ws1.LastRowUsed().RowNumber();\r\n                    //  MessageBox.Show(columnCount.ToString());\r\n                    for (int i = 0; i \u003C (columnCount) - 7; i\u002B\u002B)\r\n                    {\r\n                        ss\u002B\u002B;\r\n                        String muda = ss.ToString();\r\n                        var data1 = ws1.Cell(\u0022B\u0022 \u002B muda).GetValue\u003Cstring\u003E();// numero\r\n                        var data2 = ws1.Cell(\u0022D\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                        var data3 = ws1.Cell(\u0022C\u0022 \u002B muda).GetValue\u003Cstring\u003E();//  empresa \r\n                        var data4 = ws1.Cell(\u0022G\u0022 \u002B muda).GetValue\u003Cstring\u003E();// CPF\r\n                        var data5 = ws1.Cell(\u0022H\u0022 \u002B muda).GetValue\u003Cstring\u003E();// fun\u00E7\u00E3o\r\n                        var data6 = ws1.Cell(\u0022I\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // E-mail\r\n                        var data7 = ws1.Cell(\u0022J\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // ASO\r\n                        var data8 = ws1.Cell(\u0022K\u0022 \u002B muda).GetValue\u003Cstring\u003E(); //  dose 1\r\n                        var data9 = ws1.Cell(\u0022L\u0022 \u002B muda).GetValue\u003Cstring\u003E(); //  dose 2\r\n                        var data10 = ws1.Cell(\u0022M\u0022 \u002B muda).GetValue\u003Cstring\u003E();//  data refor\u00E7o1\r\n                        var data11 = ws1.Cell(\u0022N\u0022 \u002B muda).GetValue\u003Cstring\u003E();// data1 refor\u00E7o 2\r\n                                                                             // var data12 = ws1.Cell(\u0022K\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // NR34\r\n                                                                             //   var data13 = ws1.Cell(\u0022E\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                        var data14 = ws1.Cell(\u0022F\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                                                                              //   lineChanger(\u0022Number:\u0022 \u002B data1 \u002B \u0022:Name:\u0022 \u002B data2 \u002B \u0022:Company:\u0022 \u002B data3 \u002B \u0022:Function:\u0022 \u002B data4, \u0022D:\\\\data2.txt\u0022,ss);\r\n\r\n\r\n                        using (StreamWriter writer = new StreamWriter(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                        {\r\n                            string teste2 = \u0022Number: \u0022 \u002B data1 \u002B \u0022 : Name :\u0022 \u002B data2 \u002B \u0022 : Company : \u0022 \u002B data3 \u002B \u0022 : Function : \u0022 \u002B data5\u002B \u0022: Id : \u0022 \u002B data14 \u002B \u0022: E-mail : \u0022 \u002B data6 \u002B \u0022: Vessel : \u0022 \u002B comboBox1.Text \u002B \u0022: Project : \u0022 \u002B richTextBox9.Text\u002B \u0022: ASO : \u0022 \u002B data7 \u002B \u0022: NR34 : \u0022 \u002B data8 \u002B \u0022: NR-10 : \u0022 \u002B data9 \u002B \u0022: NR-33 : \u0022 \u002B data10 \u002B \u0022: NR-35 :\u0022 \u002B data11;\r\n                            writer.WriteLine(teste2);\r\n                            writer.Close();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    try\r\n                    {\r\n                        System.IO.File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2_backup.txt\u0022, true);\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    string text = File.ReadAllText(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022);\r\n                    text = text.Replace(\u002200:00:00\u0022, \u0022\u0022);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n\r\n\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n                label43.Text = \u0022UPDATE CONDLUIDO COM SUCESSO!\u0022;\r\n            }\r\n            else\r\n            {\r\n                label43.Text = \u0022\u0022;\r\n                MessageBox.Show(\u0022PENDRIVE OU ARQUIVO N\u00C3O ENCONTRADO\u0022);\r\n            }\r\n            //  MessageBox.Show(\u0022PENDRIVE N\u00C3O ENCONTRADA\u0022);\r\n\r\n\r\n        }\r\n        private void button39_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n            ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo.RedirectStandardOutput = true;\r\n            startInfo.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo);\r\n            */\r\n            //https://zetcode.com/csharp/excel/ dicas excel\r\n            label43.Text = \u0022AGUARDE, FAZENDO UPDATE DA PLANILHA!\u0022;\r\n            update();\r\n\r\n          \r\n\r\n            //  PausaComThreadSleep();\r\n\r\n            //  panel15.Visible = true;\r\n            /// label43.Text = \u0022UPDATE CONDLUIDO COM SUCESSO!\u0022;\r\n        }\r\n        public bool RemoveFirstLinesFromFile(string filePath, int skip)\r\n        {\r\n            if (!File.Exists(filePath))\r\n                return false;\r\n            try\r\n            {\r\n                var filePathOld = Path.Combine(filePath, \u0022.old\u0022);\r\n                File.Move(filePath, filePathOld);\r\n                File.WriteAllLines(filePath, File.ReadAllLines(filePathOld).Skip(skip));\r\n                return true;\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        private void button38_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n            ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo.RedirectStandardOutput = true;\r\n            startInfo.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo);\r\n           */\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n                label43.Text = \u0022BACKUP CRIADO COM SUCESSO!\u0022;\r\n\r\n                lblname.Text = drives.FirstOrDefault().Name.ToString();\r\n                string fileName = \u0022novo.xlsx\u0022;\r\n                string sourcePath = @\u0022C:\\compartilhamento\\data_base\u0022;\r\n                string targetPath = drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022;\r\n\r\n                var dbExporter = new DatabaseExporter();\r\n                dbExporter.ExportDataToExcel(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022, targetPath \u002B \u0022backup.xlsx\u0022);\r\n\r\n                string destFile = System.IO.Path.Combine(targetPath, fileName) ;\r\n                System.IO.Directory.CreateDirectory(targetPath);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n              /*  if (!Directory.Exists(targetPath))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(targetPath);\r\n\r\n                }\r\n              \r\n\r\n\r\n                if (System.IO.Directory.Exists(sourcePath))\r\n                {\r\n                    string[] files = System.IO.Directory.GetFiles(sourcePath);\r\n\r\n                    foreach (string s in files)\r\n                    {\r\n\r\n                        fileName = System.IO.Path.GetFileName(s);\r\n                        destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                        System.IO.File.Copy(s, destFile, true);\r\n                    }\r\n\r\n                    // cria_CarregarPlanilha();\r\n                   ;\r\n\r\n\r\n                    try\r\n                    {\r\n                        File.Delete(@\u0022D:\\Result.txt\u0022);\r\n                        File.Delete(@\u0022D:\\teste.txt\u0022);\r\n                        File.Delete(@\u0022D:\\teste3.txt\u0022);\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    string tempo = DateTime.Now.ToString(\u0022dd_MM_yyyy_hh_mm_ss\u0022);\r\n                    /// MessageBox.Show(\u0022Backup creaded with success\u0022);\r\n                    File.Copy(lblname.Text \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\novo.xlsx\u0022, lblname.Text \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022 \u002B tempo \u002B \u0022.xlsx\u0022);\r\n                    label43.Text = \u0022BACKUP CRIADO COM SUCESSO!\u0022;\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n\r\n\r\n                else\r\n                {\r\n                    Console.WriteLine(\u0022Source path does not exist!\u0022);\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }*/\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        private string ReplaceFirst(string thise, string oldValue, string newValue)\r\n        {\r\n            int startindex = thise.IndexOf(oldValue);\r\n\r\n            if (startindex == -1)\r\n            {\r\n                return thise;\r\n            }\r\n\r\n            return thise.Remove(startindex, oldValue.Length).Insert(startindex, newValue);\r\n        }\r\n\r\n        private void back_up()\r\n        {\r\n            try\r\n            {\r\n                int ss = 7;\r\n                /// ler excel\r\n                /*\r\n                using ClosedXML.Excel;\r\n\r\n                using var wbook = new XLWorkbook(\u0022simple.xlsx\u0022);\r\n\r\n                var ws1 = wbook.Worksheet(1);\r\n                var data = ws1.Cell(\u0022A1\u0022).GetValue\u003Cstring\u003E();\r\n                */\r\n                //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tEmail\tFun\u00E7\u00E3o\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n                // Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();\r\n                // if (xlApp == null)\r\n\r\n                /// {\r\n                //  MessageBox.Show(\u0022Excel is not properly installed!!\u0022);\r\n                // return;\r\n                //   }\r\n\r\n\r\n\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                var wb = new XLWorkbook();\r\n\r\n                //  wb.Application.OnKey(\u0022^v\u0022, \u0022\u0022);\r\n\r\n\r\n                var ws = wb.Worksheets.Add(\u0022Planilha1\u0022);\r\n                ws.Range(\u0022B7\u0022, \u0022V7\u0022).Style.Fill.BackgroundColor = XLColor.FromArgb(91, 155, 213); //Color.FromArgb(91, 155, 213);\r\n                ws.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center);\r\n                ws.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center);\r\n                ws.Column(7).Width = 35;\r\n                ws.Row(7).Height = 50;\r\n                ws.Cell(\u0022B7\u0022).Value = \u0022ID Capacete  Identifica\u00E7\u00E3o\u0022;//1\r\n                ws.Cell(\u0022C7\u0022).Value = \u0022Empresa\u0022;//5\r\n                ws.Cell(\u0022D7\u0022).Value = \u0022Nome Completo\u0022;//3\r\n                ws.Cell(\u0022F7\u0022).Value = \u0022Identidade\u0022;\r\n                ws.Cell(\u0022G7\u0022).Value = \u0022CPF\u0022;//34\r\n                ws.Cell(\u0022I7\u0022).Value = \u0022Email\u0022;//11\r\n                ws.Cell(\u0022H7\u0022).Value = \u0022Fun\u00E7\u00E3o\u0022;//7\r\n                ws.Cell(\u0022J7\u0022).Value = \u0022Data  ASO\u0022;//13\r\n                ws.Cell(\u0022V7\u0022).Value = \u0022Data  NR34\u0022;//15\r\n                ws.Cell(\u0022K7\u0022).Value = \u0022Data dose 1\u0022;//17\r\n                ws.Cell(\u0022L7\u0022).Value = \u0022Data dose 2\u0022;//19\r\n                ws.Cell(\u0022M7\u0022).Value = \u0022Data Refor\u00E7o 1\u0022;//21\r\n                ws.Cell(\u0022N7\u0022).Value = \u0022Data Refor\u00E7o 2\u0022;//23\r\n\r\n\r\n                /// ClosedXML.Excel.CutCopyMode = XlCutCopyMode.xlCopy;\r\n                // Microsoft.Office.Interop.Excel.Worksheet wks = (Microsoft.Office.Interop.Excel.Worksheet)ws.Worksheets(1);\r\n                // wks.Application.CutCopyMode = (Microsoft.Office.Interop.Excel.XlCutCopyMode)0;\r\n                // wb.Worksheets.Application.CutCopyMode = 0;\r\n                //XlCutCopyMode.xlCopy = false;\r\n                ///  Application.CutCopyMode = (Microsoft.Office.Interop.Excel.XlCutCopyMode)0;\r\n                //ws.CutCopyMode = false;\r\n                for (int a = 0; a \u003C count; a\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(a);\r\n\r\n                    ss\u002B\u002B;\r\n\r\n                    ws.Cell(\u0022B\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                    ws.Cell(\u0022C\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                    ws.Cell(\u0022D\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                    ws.Cell(\u0022F\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                    ws.Cell(\u0022I\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                    ws.Cell(\u0022H\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                    ws.Cell(\u0022G\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[15].Trim();\r\n                    ws.Cell(\u0022J\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                    ws.Cell(\u0022K\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                    ws.Cell(\u0022L\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[21].Trim();\r\n                    ws.Cell(\u0022M\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[23].Trim();\r\n                    ws.Cell(\u0022N\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[25].Trim();\r\n                    ws.Cell(\u0022V\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                }\r\n                ws.Columns().AdjustToContents();\r\n\r\n                try\r\n                {\r\n                    var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n                    wb.SaveAs(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    // \r\n                }\r\n            }catch\r\n            {\r\n\r\n                MessageBox.Show(\u0022PENDRIVE N\u00C3O ENCONTRADA\u0022);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        private void button40_Click(object sender, EventArgs e)\r\n        {\r\n       \r\n            panel15.Visible = false;\r\n            System.Windows.Forms.Application.Restart();\r\n\r\n        }\r\n\r\n        private void panel15_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox7_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n    \r\n        private void timer10_Tick(object sender, EventArgs e)\r\n        {\r\n            /// DirectoryCanListFiles(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n            /// \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022\r\n            // MessageBox.Show(MyhostName); \r\n            //   MessageBox.Show(rede1);\r\n\r\n            string nome3;\r\n            Boolean rec2 = false;\r\n            // string myIP = Dns.GetHostByName(\u0022QRCODE-50\u0022).AddressList[1].ToString();\r\n            //label64.Text = myIP;\r\n          //  textBox22.Text = \u0022 \u0022;\r\n            nome3 = \u0022\u0022;\r\n\r\n            try\r\n            {\r\n\r\n                if (rede1 != null) {\r\n\r\n\r\n\r\n                    if (rede1 != \u0022\\\\\\\\\u0022 \u002B MyhostName.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022)\r\n                    {\r\n\r\n                        // MessageBox.Show(rede1);\r\n                        nome3 = rede1;\r\n                        if (rede1 != \u0022\u0022)\r\n                        {\r\n                            string nome = rede1.Split(\u0027\\\\\u0027)[2].Trim();\r\n                            string nome2 = nome.Remove(nome.Length - 6);\r\n                          //  textBox22.Text = nome \u002B \u0022 Online\u0022;\r\n                            //myString.Remove(myString.Length-3)\r\n                            //  panel12.BackColor = Color.YellowGreen;\r\n\r\n\r\n                            // \r\n\r\n                            if (rec == true)\r\n                            {\r\n                                DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                DateTime fdata1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n                                if (fdata1 == fdata0)\r\n                                {\r\n                                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                    label3.Text = count.ToString().Trim();\r\n                                    \r\n                                    //   saida_manual();\r\n                                    rec = false;\r\n\r\n                                }\r\n                              //  if (fdata1 != fdata0)\r\n                                //{\r\n                                 //   saida_manual();\r\n\r\n                               // }\r\n                            }\r\n                            //  }\r\n                            else\r\n                            {\r\n\r\n                            }\r\n                        }\r\n                      //  rede1 = \u0022\u0022;\r\n\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        //  MessageBox.Show(\u0022nulo\u0022);\r\n                    }\r\n                }\r\n                if (entrou == true)\r\n                {\r\n                   \r\n                }\r\n                \r\n            }\r\n            catch\r\n            {\r\n               // textBox22.Text = \u0022\u0022;\r\n            }\r\n            // rede1 = \u0022\u0022;\r\n\r\n\r\n\r\n        }\r\n        \r\n\r\n        \r\n        private void textBox14_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox14_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            listBox1.Items.Clear();\r\n            foreach (string s in Regex.Split(text, textBox14.Text))\r\n            {\r\n\r\n                listBox1.Items.Add(s);\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        private void richTextBox2_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox2.Text == \u0022\u0022) {\r\n                label44.Visible = true;\r\n                label50.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label44.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox1_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (maskedTextBox1.Text == \u0022  /  /\u0022)\r\n            {\r\n                label49.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label49.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void txtResult_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox10_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void label53_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            Font myfont = new Font(\u0022Arial\u0022, 14);\r\n            Brush mybrush = new System.Drawing.SolidBrush(System.Drawing.Color.Black);\r\n            e.Graphics.TranslateTransform(90, 90);\r\n            e.Graphics.RotateTransform(90);\r\n            e.Graphics.DrawString(\u0022teste12345678\u0022, myfont, mybrush, 0, 0);\r\n        }\r\n\r\n        private void button41_Click(object sender, EventArgs e)\r\n        {\r\n            label34.Text = comboBox1.Text;\r\n        }\r\n\r\n        private void comboBox1_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n            label63.Text = comboBox1.Text;\r\n            if (comboBox1.Text.Trim() == \u0022\u0022)\r\n            {\r\n                label54.Visible = true;\r\n         \r\n                // label50.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label54.Visible = false;\r\n           \r\n\r\n            }\r\n\r\n\r\n\r\n            listBox1.Items.Clear();\r\n            textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (comboBox1.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                comboname = comboBox1.Text.Trim();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox1.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                       // label67.Text = label27.Text;\r\n\r\n          \r\n                    }\r\n                }\r\n                if (lista_ == 0)\r\n                {\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    //  if (linha22.Contains(\u0022\\n\u0022))\r\n                    // {\r\n                    listBox1.Items.Add(linha22);\r\n                    lista_\u002B\u002B;\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n\r\n\r\n                    // }\r\n                }\r\n                if (lista_ == 0)\r\n                {\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n                }\r\n            }\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                // button1.PerformClick();\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        Boolean existe = false;\r\n        private void button42_Click(object sender, EventArgs e)\r\n        {\r\n            existe = false;\r\n            try\r\n            {\r\n\r\n                string result = string.Empty;\r\n                var lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                foreach (var line in lines)\r\n                {\r\n                    if (line.Contains(textBox17.Text))\r\n                    {\r\n                        //var text = line.Replace(\u0022Customer ID :\u0022, \u0022\u0022);\r\n                        //result = text.Trim();\r\n                        existe = true;\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (existe == true)\r\n                {\r\n                    MessageBox.Show(\u0022 Nome ja existente\u0022);\r\n\r\n                }\r\n\r\n                else\r\n                {\r\n\r\n\r\n                    comboBox1.Items.Clear();\r\n                    using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\vessels.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                    {\r\n                        // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                        writer.WriteLine(textBox17.Text);\r\n                        writer.Close();\r\n                    }\r\n\r\n                    MessageBox.Show(\u0022nome cadastrado com sucesso!\u0022);\r\n                    StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                    string x = sr.ReadToEnd();\r\n                    string[] y = x.Split(\u0027\\n\u0027);\r\n                    foreach (string s in y)\r\n                    {\r\n                        comboBox1.Items.Add(s);\r\n                    }\r\n                    sr.Close();\r\n\r\n\r\n                    //  comboBox1.Items.Add(textBox17.Text.Trim());\r\n\r\n\r\n\r\n\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.ToString());\r\n            }\r\n\r\n            //  ListBox1.Items.Add(TextBox1.Text)\r\n            //  Else\r\n            //     MessageBox.Show(\u0022Item ja existente\u0022, Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Information)\r\n            //  End If\r\n        }\r\n\r\n        private void button41_Click_1(object sender, EventArgs e)\r\n        {\r\n            //panel16.Visible = false;\r\n            pcad.Visible = false;\r\n        }\r\n\r\n        private void checkBox1_CheckStateChanged(object sender, EventArgs e)\r\n        {\r\n            //if(checkBox1.CheckState == )\r\n        }\r\n\r\n        private void textBox16_TextChanged(object sender, EventArgs e)\r\n        {\r\n            // button1.PerformClick();\r\n            listBox1.Items.Clear();\r\n\r\n            // lista2_ = 0;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n            foreach (string linha22 in linhas22)\r\n            {\r\n                if (linha22.Contains(textBox16.Text.Trim()))\r\n                {\r\n                    //   listBox1.Items.Add(linha22);\r\n                    //lista2_\u002B\u002B;\r\n                    //label27.Text = lista_.ToString();\r\n                }\r\n            }\r\n\r\n            if (comboBox2.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                listBox1.Items.Clear();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(textBox16.Text.Trim()) \u0026\u0026 linha22.Contains(comboBox2.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n\r\n                        //  lista_\u002B\u002B;\r\n                        //  label27.Text = lista_.ToString();\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                listBox1.Items.Clear();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(textBox16.Text.Trim()))\r\n                        // {\r\n                        listBox1.Items.Add(linha22);\r\n\r\n                    // lista_\u002B\u002B;\r\n                    // label27.Text = lista_.ToString();\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        private void comboBox2_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n            listBox1.Items.Clear();\r\n            pictureBox4.Visible = false;\r\n            textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (comboBox2.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                lista_ = 0;\r\n               // label67.Text = lista_.ToString();\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox2.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                       /// label67.Text = lista_.ToString();\r\n\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                lista_ = 0;\r\n               // label67.Text = lista_.ToString();\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    //  if (linha22.Contains(\u0022\\n\u0022))\r\n                    // {\r\n                    listBox1.Items.Add(linha22);\r\n                    lista_\u002B\u002B;\r\n                    label27.Text = lista_.ToString();\r\n                  //  label67.Text = lista_.ToString();\r\n\r\n\r\n                    // }\r\n                }\r\n\r\n                if (lista_ == 0)\r\n                {\r\n                    // label27.Text = lista_.ToString();\r\n                }\r\n\r\n            }\r\n            button1.PerformClick();\r\n            if (richTextBox16.Text == \u0022 \u0022)\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void comboBox1_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox3.Text != \u0022\u0022)\r\n            {\r\n                comboBox1.Items.Clear();\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                string[] y = x.Split(\u0027\\n\u0027);\r\n                foreach (string s in y)\r\n                {\r\n                    comboBox1.Items.Add(s);\r\n                }\r\n                sr.Close();\r\n            }\r\n        }\r\n\r\n        private void textBox19_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void regs_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (pcad.Visible == false)\r\n            {\r\n                pcad.Visible = true;\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                sr.Close();\r\n\r\n                IP_START.Text = x.Split(\u0027,\u0027)[0].Trim();\r\n                IP_STOP.Text = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            }\r\n            else\r\n            {\r\n                pcad.Visible = false;\r\n            }\r\n        }\r\n        static string ReplaceLastLetter(string text, string newLetter)\r\n        {\r\n            string substring = text.Substring(0, text.Length - 1); // ABC -\u003E AB\r\n            return substring \u002B newLetter; // ABD\r\n        }\r\n        private void button43_Click(object sender, EventArgs e)\r\n        {\r\n            // string text = \u0022Guatavo,1234567890,\u0022;\r\n            // string newLetter = \u0022,Rosana,123456,\u0022;\r\n\r\n\r\n            //  string replaced = ReplaceLastLetter(text, newLetter);\r\n            //  MessageBox.Show(replaced);\r\n\r\n\r\n\r\n            if (comboBox3.Text != \u0022\u0022 \u0026\u0026 textBox19.Text != \u0022\u0022 \u0026\u0026 textBox21.Text != \u0022\u0022 \u0026\u0026 textBox20.Text != \u0022\u0022)\r\n            {\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                sr.Close();\r\n\r\n                string replaced = x.Replace(comboBox3.Text, textBox21.Text).Replace(textBox19.Text, textBox20.Text);\r\n\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                    writer.Write(replaced);\r\n                    writer.Close();\r\n                }\r\n                MessageBox.Show(\u0022CONCLUIDO COM SUCESSO!\u0022);\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022INFORME OS DADOS PARA CADASTRO OU ALTERA\u00C7\u00C3O\u0022);\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button44_Click(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n            int numVirgulas = x.Split(\u0027,\u0027).Length;\r\n\r\n            if (numVirgulas \u003E= 16)\r\n            {\r\n                MessageBox.Show(\u0022O N\u00DAMRO DE USU\u00C1RIOS J\u00C1 EST\u00C1 PREEENCHIDO!\u0022);\r\n\r\n            }\r\n            else\r\n            {\r\n                string text = x;\r\n                string newLetter = \u0022,\u0022 \u002B comboBox3.Text \u002B \u0022,\u0022 \u002B textBox19.Text \u002B \u0022,\u0022;\r\n                string replaced = ReplaceLastLetter(text, newLetter);\r\n\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                    writer.Write(replaced);\r\n                    writer.Close();\r\n                }\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n\r\n        private void button45_Click(object sender, EventArgs e)\r\n        {\r\n            pcad.Visible = false;\r\n           // System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button46_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)\r\n        {\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[1];\r\n            String pass1 = x.Split(\u0027,\u0027)[3];\r\n            String pass2 = x.Split(\u0027,\u0027)[5];\r\n            String pass3 = x.Split(\u0027,\u0027)[7];\r\n            String pass4 = x.Split(\u0027,\u0027)[9];\r\n            String pass5 = x.Split(\u0027,\u0027)[11];\r\n\r\n            if (comboBox3.SelectedIndex == 0)\r\n            {\r\n                textBox19.Text = pass0;\r\n            }\r\n            if (comboBox3.SelectedIndex == 1)\r\n            {\r\n                textBox19.Text = pass1;\r\n            }\r\n            if (comboBox3.SelectedIndex == 2)\r\n            {\r\n                textBox19.Text = pass2;\r\n            }\r\n            if (comboBox3.SelectedIndex == 3)\r\n            {\r\n                textBox19.Text = pass3;\r\n            }\r\n            if (comboBox3.SelectedIndex == 4)\r\n            {\r\n                textBox19.Text = pass4;\r\n            }\r\n            if (comboBox3.SelectedIndex == 5)\r\n            {\r\n                textBox19.Text = pass5;\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void comboBox3_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void comboBox3_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[0];\r\n            String pass1 = x.Split(\u0027,\u0027)[2];\r\n            String pass2 = x.Split(\u0027,\u0027)[4];\r\n            String pass3 = x.Split(\u0027,\u0027)[6];\r\n            String pass4 = x.Split(\u0027,\u0027)[8];\r\n            String pass5 = x.Split(\u0027,\u0027)[10];\r\n\r\n            comboBox3.Items.Clear();\r\n            comboBox3.Items.Insert(0, pass0);\r\n            comboBox3.Items.Insert(1, pass1);\r\n            comboBox3.Items.Insert(2, pass2);\r\n            comboBox3.Items.Insert(3, pass3);\r\n            comboBox3.Items.Insert(4, pass4);\r\n            comboBox3.Items.Insert(5, pass5);\r\n\r\n\r\n        }\r\n\r\n        private void comuser_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[0];\r\n            String pass1 = x.Split(\u0027,\u0027)[2];\r\n            String pass2 = x.Split(\u0027,\u0027)[4];\r\n            String pass3 = x.Split(\u0027,\u0027)[6];\r\n            String pass4 = x.Split(\u0027,\u0027)[8];\r\n            String pass5 = x.Split(\u0027,\u0027)[10];\r\n\r\n            comuser.Items.Clear();\r\n            comuser.Items.Insert(0, pass0);\r\n            comuser.Items.Insert(1, pass1);\r\n            comuser.Items.Insert(2, pass2);\r\n            comuser.Items.Insert(3, pass3);\r\n            comuser.Items.Insert(4, pass4);\r\n            comuser.Items.Insert(5, pass5);\r\n        }\r\n\r\n        private void pictureBox3_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button46_Click_1(object sender, EventArgs e)\r\n        {\r\n            using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n            {\r\n                // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                writer.Write(IP_START.Text \u002B \u0022,\u0022 \u002B IP_STOP.Text);\r\n                writer.Close();\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void regs_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        public static bool HasWriteAccessToFolder(string folderPath)\r\n        {\r\n            try\r\n            {\r\n                // Attempt to get a list of security permissions from the folder. \r\n                // This will raise an exception if the path is read only or do not have access to view the permissions. \r\n                System.Security.AccessControl.DirectorySecurity ds = Directory.GetAccessControl(folderPath);\r\n                MessageBox.Show(\u0022sim\u0022);\r\n                return true;\r\n            }\r\n            catch (UnauthorizedAccessException)\r\n            {\r\n                MessageBox.Show(\u0022n\u00E3o\u0022);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public static String RemoveEnd(String str, int len)\r\n        {\r\n            if (str.Length \u003C len)\r\n            {\r\n                return string.Empty;\r\n            }\r\n\r\n            return str.Remove(str.Length - len);\r\n        }\r\n\r\n\r\n        private void button47_Click(object sender, EventArgs e)\r\n\r\n\r\n        {\r\n            apaga_palavra_txt();\r\n\r\n        }\r\n\r\n        private void button50_Click(object sender, EventArgs e)\r\n        {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n                lblname.Text = drives.FirstOrDefault().Name.ToString();\r\n                string fileName = \u00222022_02_22.xls\u0022;\r\n                string sourcePath = @\u0022C:\\compartilhamento\\data_base\u0022;\r\n                string targetPath = drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022;\r\n\r\n                string destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                System.IO.Directory.CreateDirectory(targetPath);\r\n\r\n                // string folder = @\u0022D:\\CRIPTOQRCODE_AllBackup\\\u0022; //nome do diretorio a ser criado\r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n                if (!Directory.Exists(targetPath))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(targetPath);\r\n\r\n                }\r\n\r\n\r\n\r\n                if (System.IO.Directory.Exists(sourcePath))\r\n                {\r\n                    string[] files = System.IO.Directory.GetFiles(sourcePath);\r\n\r\n                    foreach (string s in files)\r\n                    {\r\n\r\n                        fileName = System.IO.Path.GetFileName(s);\r\n                        destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                        System.IO.File.Copy(s, destFile, true);\r\n                    }\r\n\r\n                    cria_CarregarPlanilha();\r\n                    MessageBox.Show(\u0022Backup creaded with success\u0022);\r\n\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n\r\n\r\n                else\r\n                {\r\n                    Console.WriteLine(\u0022Source path does not exist!\u0022);\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        private void button49_Click(object sender, EventArgs e)\r\n        {\r\n            //https://zetcode.com/csharp/excel/ dicas excel\r\n            SautinSoft.UseOffice u = new SautinSoft.UseOffice();\r\n\r\n            string inpFile = Path.GetFullPath(@\u0022D:\\Controle de Acesso.xlsx\u0022);\r\n            string outFile = Path.GetFullPath(@\u0022D:\\Result.txt\u0022);\r\n            int ret = u.InitExcel();\r\n            if (ret == 1)\r\n            {\r\n                Console.WriteLine(\u0022Error! Can\u0027t load MS Excel library in memory\u0022);\r\n                return;\r\n            }\r\n\r\n            ret = u.ConvertFile(inpFile, outFile, SautinSoft.UseOffice.eDirection.XLS_to_TEXT);\r\n\r\n            u.CloseExcel();\r\n\r\n            string text = File.ReadAllText(@\u0022D:\\Result.txt\u0022);\r\n            text = text.Replace(\u0022\t\u0022, \u0022:\u0022);\r\n            text = text.Replace(\u0022.\u0022, \u0022\u0022);\r\n            text = text.Replace(\u0022-\u0022, \u0022\u0022);\r\n            //var lines2 = File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            //File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines2.Skip(1).ToArray());\r\n\r\n            File.WriteAllText(@\u0022D:\\teste.txt\u0022, text);\r\n\r\n            string text2 = File.ReadAllText(@\u0022D:\\teste.txt\u0022);\r\n            text2 = text2.Replace(\u0022::\u0022, \u0022:\u0022);\r\n            text2 = text2.Replace(\u0022::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022:::::::::::::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022:::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022::::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022::\u0022, \u0022:\u0022);\r\n            text2 = text2.Replace(\u0022-\u0022, \u0022\u0022);\r\n            text2 = text2.ToUpper(new CultureInfo(\u0022en-US\u0022, false));\r\n            File.WriteAllText(@\u0022D:\\teste3.txt\u0022, text2);\r\n            //var lines = File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            //File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1).ToArray());\r\n\r\n\r\n            var lines = System.IO.File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            System.IO.File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1));\r\n            lines = System.IO.File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            System.IO.File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1));\r\n            //  RemoveFirstLinesFromFile(@\u0022D:\\teste3.txt\u0022,1);\r\n            String palavra = File.ReadAllText(@\u0022D:\\teste3.txt\u0022);\r\n            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, palavra);\r\n            MessageBox.Show(\u0022Update concluido com sucesso!\u0022);\r\n        }\r\n\r\n        private void button48_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n           using ClosedXML.Excel;\r\n\r\n           using var wbook = new XLWorkbook(\u0022simple.xlsx\u0022);\r\n\r\n           var ws1 = wbook.Worksheet(1);\r\n           var data = ws1.Cell(\u0022A1\u0022).GetValue\u003Cstring\u003E();\r\n           */\r\n            //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tEmail\tFun\u00E7\u00E3o\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n            Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();\r\n            if (xlApp == null)\r\n\r\n            {\r\n                MessageBox.Show(\u0022Excel is not properly installed!!\u0022);\r\n                return;\r\n            }\r\n\r\n            Excel.Workbook xlWorkBook;\r\n            Excel.Worksheet xlWorkSheet;\r\n\r\n\r\n            object misValue = System.Reflection.Missing.Value;\r\n\r\n            xlWorkBook = xlApp.Workbooks.Add(misValue);\r\n\r\n            xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);\r\n            var plan = xlWorkBook.Worksheets[\u0022Planilha1\u0022];\r\n            plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n            plan.Cells.Style.VerticalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n            //ws.Ranges(\u0022C5, F5:G8\u0022).Style.Fill.BackgroundColor = XLColor.Gray;\r\n            // xlWorkSheet.Rows.AutoFit();\r\n            xlWorkSheet.Cells[1, 1] = \u0022ID Capacete  Identifica\u00E7\u00E3o\u0022;\r\n            xlWorkSheet.Cells[1, 1].EntireColumn.ColumnWidth = 35;\r\n            xlWorkSheet.Cells[1, 1].RowHeight = 50;\r\n            xlWorkSheet.Range[\u0022B1:M1\u0022].Interior.Color = Color.FromArgb(91, 155, 213);// System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightBlue);\r\n                                                                                     // xlWorkSheet.Range[\u0022A1:M1\u0022].Rows;\r\n            xlWorkSheet.Cells[1, 2] = \u0022Empresa\u0022;\r\n            xlWorkSheet.Cells[1, 3] = \u0022Nome Completo\u0022;\r\n            xlWorkSheet.Cells[1, 4] = \u0022Identidade\u0022;\r\n            xlWorkSheet.Cells[1, 5] = \u0022CPF\u0022;\r\n            xlWorkSheet.Cells[1, 6] = \u0022Email\u0022;\r\n            xlWorkSheet.Cells[1, 7] = \u0022Fun\u00E7\u00E3o\u0022;\r\n            xlWorkSheet.Cells[1, 8] = \u0022Data  ASO\u0022;\r\n            xlWorkSheet.Cells[1, 9] = \u0022Data  NR34\u0022;\r\n            xlWorkSheet.Cells[1, 10] = \u0022Data dose 1\u0022;\r\n            xlWorkSheet.Cells[1, 11] = \u0022Data dose 2\u0022;\r\n            xlWorkSheet.Cells[1, 12] = \u0022Data Refor\u00E7o 1\u0022;\r\n            xlWorkSheet.Cells[1, 13] = \u0022Data Refor\u00E7o 2\u0022;\r\n            Excel.Range _range;\r\n\r\n            _range = xlWorkSheet.get_Range(\u0022B1\u0022, \u0022M2000\u0022);\r\n\r\n            //Get the borders collection.\r\n\r\n            Excel.Borders borders = _range.Borders;\r\n\r\n            //Set the hair lines style.\r\n\r\n            borders.LineStyle = Excel.XlLineStyle.xlContinuous;\r\n\r\n            borders.Weight = 2d;\r\n\r\n            xlWorkSheet.Columns.AutoFit();\r\n\r\n            xlWorkBook.SaveAs(\u0022d:\\\\Controle de Acesso_backup.xls\u0022, Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);\r\n            xlWorkBook.Close(true, misValue, misValue);\r\n            xlApp.Quit();\r\n            Marshal.ReleaseComObject(xlWorkSheet);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlApp);\r\n            MessageBox.Show(\u0022Excel file created , you can find the file d:\\\\Controle de Acesso_backup.xls\u0022);\r\n\r\n            //panel15.Visible = false;\r\n        }\r\n\r\n        private void panel11_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer5_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void pictureBox4_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer11_Tick(object sender, EventArgs e)\r\n        {\r\n           \r\n           // timer11.Stop();\r\n        }\r\n\r\n        private void timer11_Tick_1(object sender, EventArgs e)\r\n        {\r\n            \r\n        }\r\n\r\n        private void timer12_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer11_Tick_2(object sender, EventArgs e)\r\n        {\r\n            Ping pingClass = new Ping();\r\n            PingReply pingReply = pingClass.Send(textBox18.Text.Trim());\r\n            label65.Text = (pingReply.RoundtripTime.ToString())\u002B \u0022 ms\u0022;\r\n            //\u002B \u0022ms\u0022);\r\n           // label64.Text = (pingReply.Status.ToString());\r\n        }\r\n\r\n        private void label61_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button24_Click(object sender, EventArgs e)\r\n        {\r\n            if (textBox18.Text != \u0022\u0022) {\r\n                if (timer11.Enabled == false)\r\n                {\r\n                    button24.Text = \u0022PING ON\u0022;\r\n                    timer11.Enabled = true;\r\n                }\r\n                else\r\n                {\r\n                    button24.Text = \u0022PING OFF\u0022;\r\n                    timer11.Enabled = false;\r\n                    label65.Text = \u0022\u0022;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void label65_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer12_Tick_1(object sender, EventArgs e)\r\n        {\r\n            DateTime fdataa = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (pega == false)\r\n            {\r\n                DateTime fdatab = fdataa;\r\n                pega = true;\r\n            }\r\n\r\n\r\n\r\n            if (fdatab != fdataa)\r\n            {\r\n                ler_linha();\r\n                pega = false;\r\n            }\r\n        }\r\n\r\n        private void button48_Click_1(object sender, EventArgs e)\r\n        {\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n            richTextBox1.Text = \u0022 VISITANTE  \u0022\u002BrichTextBox1.Text ;\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B \u0022VISITANTE \u0022 \u002B richTextBox1.Text \u002B \u0022 \\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n         this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n         initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n         final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n            MessageBox.Show(data2);\r\n        }\r\n\r\n        private void bindingSource1_CurrentChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void bindingSource2_CurrentChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button49_Click_1(object sender, EventArgs e)\r\n\r\n        {\r\n            if (richTextBox18.Text != \u0022\u0022)\r\n            {\r\n                imprime_novo();\r\n                button1.PerformClick();\r\n                richTextBox18.Text = \u0022\u0022;\r\n            }\r\n            //create_qrcode_invited_new(); ;// cadastrar_invited()\r\n            //  cadastrar_invited();\r\n        }\r\n\r\n        private void label1_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button31_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void InsertQueue\u003CT\u003E(T data, string collectionName)\r\n        {\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var collection = db.GetCollection\u003CT\u003E(collectionName);\r\n                collection.Insert(data);\r\n            }\r\n        }\r\n\r\n\r\n        private List\u003CUsuario\u003E GetAll()\r\n        {\r\n            var list = new List\u003CUsuario\u003E();\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var col = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                foreach (Usuario _id in col.FindAll())\r\n                {\r\n                    list.Add(_id);\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n\r\n        public void DisplayPresetData()\r\n        {\r\n            dataGridView1.Size = new System.Drawing.Size(1693, 800);\r\n            dataGridView1.DataSource = GetAll();\r\n            this.dataGridView1.DefaultCellStyle.ForeColor = Color.White;\r\n            this.dataGridView1.DefaultCellStyle.BackColor = Color.FromArgb(51, 51, 76);\r\n\r\n            // Allow user to order columns\r\n            dataGridView1.AllowUserToOrderColumns = true;\r\n\r\n            // Enable sorting on all columns\r\n            foreach (DataGridViewColumn column in dataGridView1.Columns)\r\n            {\r\n                column.SortMode = DataGridViewColumnSortMode.Automatic;\r\n            }\r\n\r\n            dataGridView1.Visible = true;\r\n        }\r\n\r\n        private void change()\r\n        {\r\n            //string connectionString = \u0022banco.db\u0022; // Update with your database file path\r\n\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var usuariocollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022); // Update with your collection name\r\n                var usuario = usuariocollection.FindOne(x =\u003E x.Number.ToString().Contains(\u002233\u0022));\r\n                usuario.Name = \u0022fabio\u0022;\r\n                usuario.Company = \u0022teste\u0022;\r\n                usuariocollection.Update(usuario);\r\n            }\r\n\r\n        }\r\n        //1- ler o QR e extrai os dados do usuario\r\n        //2 - Parse dos campo e atribui a um novo User()\r\n        //3 - Envia esse novo User() populado ao add_data()\r\n        private void add_data()\r\n        {\r\n            NUM = NUM \u002B 1;\r\n            Usuario usuario = new Usuario(NUM, \u0022ALEX\u0022, \u0022Googlemarine\u0022, \u0022 4\u0022, 111098414, \u0022 5\u0022, \u0022 6\u0022, \u0022 7\u0022, \u0022 8\u0022, \u0022 9 \u0022, \u002210\u0022, \u0022 11\u0022, \u002212 \u0022, \u002213\u0022, \u002214 \u0022, \u002215 \u0022, \u0022 16\u0022, \u0022 17\u0022, \u0022 18 \u0022, \u002219 \u0022, \u002220 \u0022, \u0022 21 \u0022, \u002222 \u0022, \u002223\u0022);\r\n            InsertQueue(usuario, \u0022usuario\u0022);\r\n        }\r\n\r\n        private void add_data2(Usuario usuario)\r\n        {\r\n            InsertQueue(usuario, \u0022usuario\u0022);\r\n        }\r\n\r\n        private void get_last()\r\n        {\r\n            string connectionString = @\u0022C:\\compartilhamento\\dados\\banco.db\u0022; // Updated database file path\r\n\r\n            using (var db = new LiteDatabase(connectionString))\r\n            {\r\n                var collection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n\r\n                var lastData = collection.Query()\r\n                    .OrderByDescending(x =\u003E x.Number)\r\n                    .FirstOrDefault();\r\n\r\n                if (lastData != null)\r\n                {\r\n                    textBox1.Text = $\u0022Numero: {lastData.Number},Nome: {lastData.Name}, Empresa: {lastData.Company},Identidade: {lastData.Id_number}\u0022;\r\n                    NUM = lastData.Number;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void AddOrUpdateCadastroData(Cadastro cadastro)\r\n        {\r\n            InsertQueue(cadastro, \u0022cadastro\u0022);\r\n        }\r\n\r\n        private void UpdateDataGridView()\r\n        {\r\n            \r\n            Console.WriteLine(\u0022UpdateDataGridView triggered.\u0022);\r\n\r\n            var allData = GetAll();  // Step 1: Get all data\r\n            Console.WriteLine($\u0022Initial Count: {allData.Count}\u0022);\r\n\r\n            string filterString = dataGridView1.FilterString;\r\n            string sortString = dataGridView1.SortString;\r\n            Console.WriteLine(filterString);\r\n            Console.WriteLine(\u0022Filter String: \u0022 \u002B filterString);\r\n            Console.WriteLine(\u0022Sort String: \u0022 \u002B sortString);\r\n\r\n            // Handling filtering based on the specific format from DataGridView\r\n            if (!string.IsNullOrEmpty(filterString))\r\n            {\r\n                // Filter by Name\r\n                var nameMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Name\\] IN \\((.*?)\\)\u0022);\r\n                if (nameMatch.Success)\r\n                {\r\n                    var names = nameMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Names for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, names));\r\n                    allData = allData.Where(u =\u003E names.Contains(u.Name)).ToList();\r\n                }\r\n\r\n                // Filter by Company\r\n                var companyMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Company\\] IN \\((.*?)\\)\u0022);\r\n                if (companyMatch.Success)\r\n                {\r\n                    var companies = companyMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Companies for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, companies));\r\n                    allData = allData.Where(u =\u003E companies.Contains(u.Company)).ToList();\r\n                }\r\n\r\n                // Filter by Function\r\n                var functionMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Function\\] IN \\((.*?)\\)\u0022);\r\n                if (functionMatch.Success)\r\n                {\r\n                    var functions = functionMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Functions for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, functions));\r\n                    allData = allData.Where(u =\u003E functions.Contains(u.Function)).ToList();\r\n                }\r\n                \r\n                //Filter by Vessel\r\n                var vesselMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Vessel\\] IN \\((.*?)\\)\u0022);\r\n                if (vesselMatch.Success)\r\n                {\r\n                    var vessels = vesselMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Vessels for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, vessels));\r\n                    allData = allData.Where(u =\u003E vessels.Contains(u.Vessel)).ToList();\r\n                }\r\n\r\n                //Filter by Local\r\n                var localMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Local\\] IN \\((.*?)\\)\u0022);\r\n                if (localMatch.Success)\r\n                {\r\n                    var local = localMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, local));\r\n                    allData = allData.Where(u =\u003E local.Contains(u.Local)).ToList();\r\n                }\r\n\r\n                //Filter by Checked_in_val\r\n                var checkedInValMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Checked_in_val\\] IN \\((.*?)\\)\u0022);\r\n                if (checkedInValMatch.Success)\r\n                {\r\n                    var checkedInVal = checkedInValMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkedInValMatch));\r\n                    allData = allData.Where(u =\u003E checkedInVal.Contains(u.Checked_in_val)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_val\r\n                var checkOutValMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_val\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutValMatch.Success)\r\n                {\r\n                    var checkOutVal = checkOutValMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutValMatch));\r\n                    allData = allData.Where(u =\u003E checkOutVal.Contains(u.Check_out_val)).ToList();\r\n                }\r\n\r\n                //Filter by Check_in_data\r\n                var checkInDataMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_in_data\\] IN \\((.*?)\\)\u0022);\r\n                if (checkInDataMatch.Success)\r\n                {\r\n                    var checkInData = checkInDataMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkInDataMatch));\r\n                    allData = allData.Where(u =\u003E checkInData.Contains(u.Check_in_data)).ToList();\r\n                }\r\n\r\n                //Filter by Check_in_hora\r\n                var checkInHoraMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_in_hora\\] IN \\((.*?)\\)\u0022);\r\n                if (checkInHoraMatch.Success)\r\n                {\r\n                    var checkInHora = checkInHoraMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkInHoraMatch));\r\n                    allData = allData.Where(u =\u003E checkInHora.Contains(u.Check_in_hora)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_data\r\n                var checkOutDataMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_data\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutDataMatch.Success)\r\n                {\r\n                    var checkOutData = checkOutDataMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutDataMatch));\r\n                    allData = allData.Where(u =\u003E checkOutData.Contains(u.Check_out_data)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_hora\r\n                var checkOutHoraMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_hora\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutHoraMatch.Success)\r\n                {\r\n                    var checkOutHora = checkOutHoraMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutHoraMatch));\r\n                    allData = allData.Where(u =\u003E checkOutHora.Contains(u.Check_out_hora)).ToList();\r\n                }\r\n\r\n                //Filter by Projec\r\n                var projecMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Projec\\] IN \\((.*?)\\)\u0022);\r\n                if (projecMatch.Success)\r\n                {\r\n                    var projec = projecMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Projec for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, projec));\r\n                    allData = allData.Where(u =\u003E projec.Contains(u.Projec)).ToList();\r\n                }\r\n\r\n                //Filter by Aso\r\n                var asoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Aso\\] IN \\((.*?)\\)\u0022);\r\n                if (asoMatch.Success)\r\n                {\r\n                    var aso = asoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Aso for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, aso));\r\n                    allData = allData.Where(u =\u003E aso.Contains(u.Aso)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_34\r\n                var nr34Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_34\\] IN \\((.*?)\\)\u0022);\r\n                if (nr34Match.Success)\r\n                {\r\n                    var nr34 = nr34Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_34 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr34));\r\n                    allData = allData.Where(u =\u003E nr34.Contains(u.Nr_34)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_10\r\n                var nr10Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_10\\] IN \\((.*?)\\)\u0022);\r\n                if (nr10Match.Success)\r\n                {\r\n                    var nr10 = nr10Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_10 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr10));\r\n                    allData = allData.Where(u =\u003E nr10.Contains(u.Nr_10)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_33\r\n                var nr33Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_33\\] IN \\((.*?)\\)\u0022);\r\n                if (nr33Match.Success)\r\n                {\r\n                    var nr33 = nr33Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_33 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr33));\r\n                    allData = allData.Where(u =\u003E nr33.Contains(u.Nr_33)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_35\r\n                var nr35Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_35\\] IN \\((.*?)\\)\u0022);\r\n                if (nr35Match.Success)\r\n                {\r\n                    var nr35 = nr35Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_35 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr35));\r\n                    allData = allData.Where(u =\u003E nr35.Contains(u.Nr_35)).ToList();\r\n                }\r\n\r\n                //Filter by Motivo\r\n                var motivoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Motivo\\] IN \\((.*?)\\)\u0022);\r\n                if (motivoMatch.Success)\r\n                {\r\n                    var motivo = motivoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Motivo for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, motivo));\r\n                    allData = allData.Where(u =\u003E motivo.Contains(u.Motivo)).ToList();\r\n                }\r\n\r\n                //Filter by Level\r\n                var levelMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Level\\] IN \\((.*?)\\)\u0022);\r\n                if (levelMatch.Success)\r\n                {\r\n                    var level = levelMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Level for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, level));\r\n                    allData = allData.Where(u =\u003E level.Contains(u.Level)).ToList();\r\n                }\r\n\r\n                //Filter by Estado\r\n                var estadoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Estado\\] IN \\((.*?)\\)\u0022);\r\n                if (estadoMatch.Success)\r\n                {\r\n                    var estado = estadoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Estado for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, estado));\r\n                    allData = allData.Where(u =\u003E estado.Contains(u.Estado)).ToList();\r\n                }\r\n\r\n                //Filter by User\r\n                var userMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[User\\] IN \\((.*?)\\)\u0022);\r\n                if (userMatch.Success)\r\n                {\r\n                    var user = userMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed User for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, user));\r\n                    allData = allData.Where(u =\u003E user.Contains(u.User)).ToList();\r\n                }\r\n\r\n\r\n            }\r\n\r\n            // Sorting logic\r\n            if (!string.IsNullOrEmpty(sortString))\r\n            {\r\n                if (sortString.Contains(\u0022[Number]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Number).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Number).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Name]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Name).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Name).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Company]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Company).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Company).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Vessel]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Vessel).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Vessel).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Function]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Function).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Function).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Level]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Level).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Level).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Id_number]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Id_number).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Id_number).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Email]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Email).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Email).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Checked_in_val]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Checked_in_val).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Checked_in_val).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_val]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_val).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_val).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_in_data]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_in_data).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_in_data).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_in_hora]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_in_hora).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_in_hora).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_data]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_data).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_data).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_hora]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_hora).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_hora).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Projec]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Projec).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Projec).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Aso]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Aso).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Aso).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_34]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_34).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_34).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_10]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_10).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_10).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_33]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_33).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_33).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_35]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_35).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_35).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Estado]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Estado).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Estado).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Motivo]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Motivo).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Motivo).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[User]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.User).ToList() :\r\n                              allData.OrderBy(u =\u003E u.User).ToList();\r\n                }\r\n\r\n            }\r\n\r\n            Console.WriteLine($\u0022Filtered and Sorted Object Count: {allData.Count}\u0022);\r\n\r\n            // Update the DataGridView\r\n            dataGridView1.DataSource = allData;\r\n\r\n            \r\n            Console.WriteLine(filterString);\r\n        }\r\n\r\n\r\n\r\n        private void dataGridView1_SortStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.SortEventArgs e)\r\n        {\r\n            UpdateDataGridView();\r\n        }\r\n\r\n        private void dataGridView1_FilterStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.FilterEventArgs e)\r\n        {\r\n             UpdateDataGridView();\r\n        }\r\n      \r\n\r\n\r\n\r\n        private void Create_DB()\r\n        {\r\n            //make dir C:\\compartilhamento\\dados if not exist\r\n            if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n            {\r\n                Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n            }\r\n\r\n\r\n            LiteDatabase db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022);\r\n            //create Usuario collection\r\n            var usuarioCollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n            var cadastroCollection = db.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n            //popuplate Usuario collection\r\n         //usuarioCollection.Insert(new Usuario(1, \u0022ALEX\u0022, \u0022Googlemarine\u0022, \u0022 4\u0022, 111098414, \u0022 5\u0022, \u0022 6\u0022, \u0022 7\u0022, \u0022 8\u0022, \u0022 9 \u0022, \u002210\u0022, \u0022 11\u0022, \u002212 \u0022, \u002213\u0022, \u002214 \u0022, \u002215 \u0022, \u0022 16\u0022, \u0022 17\u0022, \u0022 18 \u0022, \u002219 \u0022, \u002220 \u0022, \u0022 21 \u0022, \u002222 \u0022, \u002223\u0022));  \r\n            hasDb = true;\r\n            db.Dispose();\r\n        }\r\n\r\n   \r\n\r\n        private async void button50_Click_1(object sender, EventArgs e)\r\n        {\r\n            //synch_db(rede1.Trim());\r\n            /*\r\n           QRCodeEncryptor = new QRCodeEncryptor();\r\n            string originalText = \u0022Texto que ser\u00E1 criptografado e depois descriptografado.\u0022;\r\n\r\n            // Criptografa o texto\r\n            string encryptedText = QRCodeEncryptor.EncryptQRCode(originalText);\r\n            Console.WriteLine(\u0022Texto criptografado: \u0022 \u002B encryptedText);\r\n\r\n            // Descriptografa o texto\r\n            string decryptedText = QRCodeEncryptor.DecryptQRCode(encryptedText);\r\n            Console.WriteLine(\u0022Texto descriptografado: \u0022 \u002B decryptedText);\r\n            */\r\n\r\n\r\n            // Supondo que o endere\u00E7o IP da rede local \u00E9 192.168.0.*\r\n            // Supondo que o endere\u00E7o IP da rede local \u00E9 192.168.0.*\r\n            string baseIP = \u0022190.168.0.\u0022;\r\n\r\n            // Executar as tarefas em paralelo para acelerar o processo.\r\n            var tasks = new Task[255];\r\n\r\n            for (int i = 1; i \u003C= 254; i\u002B\u002B)\r\n            {\r\n                string ip = baseIP \u002B i.ToString();\r\n                tasks[i - 1] = PingAsync(ip);\r\n            }\r\n\r\n            await Task.WhenAll(tasks);\r\n        }\r\n        private async Task PingAsync(string ip)\r\n        {\r\n            Ping ping = new Ping();\r\n            PingReply reply = await ping.SendPingAsync(ip, 1000); // Timeout de 1000 ms\r\n            if (reply.Status == IPStatus.Success)\r\n            {\r\n                // Aqui voc\u00EA pode adicionar o IP a uma lista, ou fazer algo com ele.\r\n                Console.WriteLine($\u0022M\u00E1quina ativa encontrada em: {ip}\u0022);\r\n            }\r\n        }\r\n        private void richTextBox12_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void lbustter_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void lv1_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void label18_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox18_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            button28.PerformClick();\r\n            if (richTextBox18.Text != \u0022\u0022)\r\n            {\r\n                richTextBox16.Text = richTextBox18.Text;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                label37.Text = \u0022\u0022;\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                check_if_exist_number2();\r\n                \r\n            }\r\n        }\r\n\r\n        private void richTextBox18_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer13_Tick(object sender, EventArgs e)\r\n        {\r\n            try\r\n            {\r\n                textBox22.Text = \u0022\u0022;\r\n                textBox22.Text = rede \u002B \u0022 On-Line\u0022;\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic class DatabaseExporter\r\n{\r\n    public void ExportDataToExcel(string dbPath, string excelFilePath)\r\n    {\r\n        using (var db = new LiteDatabase(dbPath))\r\n        {\r\n            var usuarioCollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n            var allUsuarios = usuarioCollection.FindAll().ToList();\r\n\r\n            using (var workbook = new XLWorkbook())\r\n  \r\n            {\r\n                var worksheet = workbook.Worksheets.Add(\u0022Usuarios\u0022);\r\n                worksheet.Cell(1, 1).Value = \u0022Number\u0022;\r\n                worksheet.Cell(1, 2).Value = \u0022Name\u0022;\r\n                worksheet.Cell(1, 3).Value = \u0022Company\u0022;\r\n                worksheet.Cell(1, 4).Value = \u0022Function\u0022;\r\n                worksheet.Cell(1, 5).Value = \u0022Id_number\u0022;\r\n                worksheet.Cell(1, 6).Value = \u0022Email\u0022;\r\n                worksheet.Cell(1, 7).Value = \u0022Vessel\u0022;\r\n                worksheet.Cell(1, 8).Value = \u0022Checked_in_val\u0022;\r\n                worksheet.Cell(1, 9).Value = \u0022Check_out_val\u0022;\r\n                worksheet.Cell(1, 10).Value = \u0022Check_in_data\u0022;\r\n                worksheet.Cell(1, 11).Value = \u0022Check_in_hora\u0022;\r\n                worksheet.Cell(1, 12).Value = \u0022Check_out_data\u0022;\r\n                worksheet.Cell(1, 13).Value = \u0022Check_out_hora\u0022;\r\n                worksheet.Cell(1, 14).Value = \u0022Projec\u0022;\r\n                worksheet.Cell(1, 15).Value = \u0022Aso\u0022;\r\n                worksheet.Cell(1, 16).Value = \u0022Nr_34\u0022;\r\n                worksheet.Cell(1, 17).Value = \u0022Nr_10\u0022;\r\n                worksheet.Cell(1, 18).Value = \u0022Nr_33\u0022;\r\n                worksheet.Cell(1, 19).Value = \u0022Nr_35\u0022;\r\n                worksheet.Cell(1, 20).Value = \u0022Local\u0022;\r\n                worksheet.Cell(1, 21).Value = \u0022Level\u0022;\r\n                worksheet.Cell(1, 22).Value = \u0022Estado\u0022;\r\n                worksheet.Cell(1, 23).Value = \u0022Motivo\u0022;\r\n                worksheet.Cell(1, 24).Value = \u0022User\u0022;\r\n                \r\n\r\n                for (int i = 0; i \u003C allUsuarios.Count; i\u002B\u002B)\r\n                {\r\n                    var usuario = allUsuarios[i];\r\n                    worksheet.Cell(i \u002B 2, 1).Value = usuario.Number;\r\n                    worksheet.Cell(i \u002B 2, 2).Value = usuario.Name;\r\n                    worksheet.Cell(i \u002B 2, 3).Value = usuario.Company;\r\n                    worksheet.Cell(i \u002B 2, 4).Value = usuario.Function;\r\n                    worksheet.Cell(i \u002B 2, 5).Value = usuario.Id_number;\r\n                    worksheet.Cell(i \u002B 2, 6).Value = usuario.Email;\r\n                    worksheet.Cell(i \u002B 2, 7).Value = usuario.Vessel;\r\n                    worksheet.Cell(i \u002B 2, 8).Value = usuario.Checked_in_val;\r\n                    worksheet.Cell(i \u002B 2, 9).Value = usuario.Check_out_val;\r\n                    worksheet.Cell(i \u002B 2, 10).Value = usuario.Check_in_data;\r\n                    worksheet.Cell(i \u002B 2, 11).Value = usuario.Check_in_hora;\r\n                    worksheet.Cell(i \u002B 2, 12).Value = usuario.Check_out_data;\r\n                    worksheet.Cell(i \u002B 2, 13).Value = usuario.Check_out_hora;\r\n                    worksheet.Cell(i \u002B 2, 14).Value = usuario.Projec;\r\n                    worksheet.Cell(i \u002B 2, 15).Value = usuario.Aso;\r\n                    worksheet.Cell(i \u002B 2, 16).Value = usuario.Nr_34;\r\n                    worksheet.Cell(i \u002B 2, 17).Value = usuario.Nr_10;\r\n                    worksheet.Cell(i \u002B 2, 18).Value = usuario.Nr_33;\r\n                    worksheet.Cell(i \u002B 2, 19).Value = usuario.Nr_35;\r\n                    worksheet.Cell(i \u002B 2, 20).Value = usuario.Local;\r\n                    worksheet.Cell(i \u002B 2, 21).Value = usuario.Level;\r\n                    worksheet.Cell(i \u002B 2, 22).Value = usuario.Estado;\r\n                    worksheet.Cell(i \u002B 2, 23).Value = usuario.Motivo;\r\n                    worksheet.Cell(i \u002B 2, 24).Value = usuario.User;\r\n                }\r\n\r\n                workbook.SaveAs(excelFilePath);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic class NetworkConnection : IDisposable\r\n{\r\n    string _networkName;\r\n\r\n    public NetworkConnection(string networkName, NetworkCredential credentials)\r\n    {\r\n        _networkName = networkName;\r\n\r\n        var netResource = new NetResource()\r\n        {\r\n            Scope = ResourceScope.GlobalNetwork,\r\n            ResourceType = ResourceType.Disk,\r\n            DisplayType = ResourceDisplaytype.Share,\r\n            RemoteName = networkName\r\n        };\r\n\r\n        var result = WNetAddConnection2(netResource, credentials.Password, credentials.UserName, 0);\r\n\r\n        if (result != 0)\r\n        {\r\n         \r\n        }\r\n    }\r\n\r\n    ~NetworkConnection()\r\n    {\r\n        Dispose(false);\r\n    }\r\n\r\n    public void Dispose()\r\n    {\r\n        Dispose(true);\r\n        GC.SuppressFinalize(this);\r\n    }\r\n\r\n    protected virtual void Dispose(bool disposing)\r\n    {\r\n        WNetCancelConnection2(_networkName, 0, true);\r\n    }\r\n\r\n    [DllImport(\u0022mpr.dll\u0022)]\r\n    private static extern int WNetAddConnection2(NetResource netResource, string password, string username, int flags);\r\n\r\n    [DllImport(\u0022mpr.dll\u0022)]\r\n    private static extern int WNetCancelConnection2(string name, int flags, bool force);\r\n\r\n    [StructLayout(LayoutKind.Sequential)]\r\n    public class NetResource\r\n    {\r\n        public ResourceScope Scope;\r\n        public ResourceType ResourceType;\r\n        public ResourceDisplaytype DisplayType;\r\n        public int Usage;\r\n        public string LocalName;\r\n        public string RemoteName;\r\n        public string Comment;\r\n        public string Provider;\r\n    }\r\n\r\n    public enum ResourceScope : int\r\n    {\r\n        Connected = 1,\r\n        GlobalNetwork,\r\n        Remembered,\r\n        Recent,\r\n        Context\r\n    };\r\n\r\n    public enum ResourceType : int\r\n    {\r\n        Any = 0,\r\n        Disk = 1,\r\n        Print = 2,\r\n        Reserved = 8,\r\n    }\r\n\r\n    public enum ResourceDisplaytype : int\r\n    {\r\n        Generic = 0x0,\r\n        Domain = 0x01,\r\n        Server = 0x02,\r\n        Share = 0x03,\r\n        File = 0x04,\r\n        Group = 0x05,\r\n        Network = 0x06,\r\n        Root = 0x07,\r\n        Shareadmin = 0x08,\r\n        Directory = 0x09,\r\n        Tree = 0x0a,\r\n        Ndscontainer = 0x0b\r\n    }\r\n}","Selections":[{"Caret":439815,"Start":439502,"End":439944}],"FilePath":"C:\\Cripto_qr_mult - Copia\\criptoqrcode_multi\\criptoqrcode\\Form1.cs","Language":"C#"}],"PreSelectedSkill":null,"CorrelationId":{"Guid":"dc41c754-e8c6-4b16-9645-57544b1d645f"}}},"Response":{"Content":"Sure, I can help you with that. If you\u0027re trying to sync your LiteDB database with another database while also using it for other tasks, there are a few things you should keep in mind.\r\n\r\nFirst, make sure to always use the same instance of LiteDB throughout your application. LiteDB isn\u0027t thread safe by default, so if you create multiple instances you\u0027ll run into issues with the database becoming locked. To avoid this, you should use a Singleton design pattern or ensure that you\u0027re using dependency injection to pass a single instance around to all classes and methods that need to access the database.\r\n\r\nSecond, you should use transactions to ensure that any changes to the database made during syncing are handled in a consistent and reliable way. For example, if you\u0027re syncing data from another database into your LiteDB database and the sync process fails halfway through, you\u0027ll want to make sure that none of the changes made during the failed sync are committed to the database. Transactions let you do this by grouping multiple changes into a single unit of work that can be rolled backed if necessary.\r\n\r\nLastly, you should always make sure that you\u0027re syncing the database correctly. One way to do this is to use a library like LiteSync, which is specifically designed for syncing LiteDB databases with other data sources. LiteSync handles things like conflict resolution and change tracking automatically, so you can focus on using your data rather than worrying about how to keep it in sync.","Type":0,"Status":1,"FollowUpPrompts":["How can I implement the Singleton design pattern with LiteDB?","Can you explain transactions in LiteDB?"]},"SelectedFunctionName":"Explain","LoggedSkillInvocations":null}
{"version":1,"Request":{"Prompt":"How can I implement the Singleton design pattern with LiteDB?","Context":{"VisibleDocuments":[{"Content":"using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Forms;\r\nusing System;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing AForge.Video;\r\nusing AForge.Video.DirectShow;\r\nusing System.Windows.Forms;\r\nusing NPOI.SS.UserModel;\r\nusing NPOI.HSSF.UserModel;\r\nusing NPOI.XSSF.UserModel;\r\nusing Microsoft.Office.Interop.Excel;\r\nusing ZXing;\r\nusing System.IO;\r\nusing System.Runtime.InteropServices;\r\nusing Spire.Barcode;\r\nusing System.Drawing.Printing;\r\nusing System.Drawing.Imaging;\r\nusing System.Data.OleDb;\r\nusing System.Collections;\r\nusing System.Text.RegularExpressions;\r\nusing SimpleWifi;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\nusing System.Net.Mail;\r\nusing System.Net;\r\nusing System.Net.NetworkInformation;\r\nusing System.Threading;\r\nusing System.Management;\r\nusing System.Diagnostics;\r\nusing System.Globalization;\r\nusing System.Text;\r\nusing Font = System.Drawing.Font;\r\nusing System.Security.Permissions;\r\nusing System.Security;\r\nusing ClosedXML.Excel;\r\nusing Excel = Microsoft.Office.Interop.Excel;\r\nusing Microsoft.Office.Interop.Excel;\r\nusing System.Security.AccessControl;\r\nusing System.Security.Principal;\r\nusing System.Reflection;\r\nusing DocumentFormat.OpenXml.Bibliography;\r\nusing uPLibrary.Networking.M2Mqtt;\r\nusing uPLibrary.Networking.M2Mqtt.Messages;\r\nusing ZXing.QrCode.Internal;\r\nusing static System.Windows.Forms.VisualStyles.VisualStyleElement;\r\nusing static System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar;\r\nusing DocumentFormat.OpenXml.Vml.Office;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing Color = System.Drawing.Color;\r\nusing DocumentFormat.OpenXml.Drawing;\r\nusing Path = System.IO.Path;\r\nusing LiteDB;\r\nusing NPOI.SS.Formula.Functions;\r\nusing System.Security.Cryptography;\r\nusing criptoqrcode;\r\nusing DocumentFormat.OpenXml.ExtendedProperties;\r\nusing DocumentFormat.OpenXml.Office2010.Word;\r\nusing System.Net.NetworkInformation;\r\nusing System.Threading.Tasks;\r\nusing DocumentFormat.OpenXml.Vml;\r\nusing System.Collections.Concurrent;\r\n\r\nnamespace criptoqrcode\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n\r\n        delegate void SetTextCallback(string text);\r\n        private QRCodeEncryptor QRCodeEncryptor;\r\n        MqttClient client;\r\n        string clientId;\r\n        string vintequatro;\r\n        string vintedois;\r\n        string vinte;\r\n        string vinteum;\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            PopularCadastro.ParseAndInsertToLiteDB(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n        }\r\n        //internal static password Password = new password();\r\n        static AutoResetEvent reconnectEvent = new AutoResetEvent(false);\r\n        //static S22.Imap.ImapClient client;\r\n        //Form mainFormHandler;\r\n        //Microsoft.Office.Interop.Excel.Application XcelApp = new Microsoft.Office.Interop.Excel.Application();\r\n        private static Wifi wifi;\r\n        public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }\r\n        // public static extern int GetWindowThreadProcessId(int handle, out int processId);\r\n        Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();\r\n        Microsoft.Office.Interop.Excel.Workbook wb;\r\n\r\n        Microsoft.Office.Interop.Excel.Worksheet ws;\r\n        //  Excel.Application app = new Excel.Application();\r\n        Microsoft.Office.Interop.Excel.Workbook pasta;\r\n        Microsoft.Office.Interop.Excel.Worksheet plan;\r\n        Microsoft.Office.Interop.Excel.Application XcelApp = new Microsoft.Office.Interop.Excel.Application();\r\n        StreamReader rdr = null;\r\n\r\n        String[] lMessage1 = { \u0022Favor marcar o local e o nivel de acesso para finalizar o cadastro\u0022, \u0022Check Local and Access level Please\u0022 };\r\n        String[] label_nome = { \u0022N\u00FAmero/Nome\u0022, \u0022Number/Name\u0022 };//onboard People\r\n        String[] label_onboard = { \u0022Pessoas a bordo\u0022, \u0022People Onboard\u0022 };//onboard People\r\n        String[] label_emp = { \u0022Empresa/Trip\u0022, \u0022Company/Crew\u0022 };\r\n        // registration only\r\n        //N\u00FAmero de pessoas a bordo:\r\n        String[] onboard = { \u0022N\u00FAmero de pessoas a bordo:\u0022, \u0022                    Onboard People:\u0022 };\r\n        String[] label_reg = { \u0022Cadastrar\u0022, \u0022Registration\u0022 };\r\n        String[] label_vessel = { \u0022Local\u0022, \u0022Place\u0022 };\r\n        String[] label_porj = { \u0022Projeto\u0022, \u0022Project\u0022 };\r\n        String[] label_Function = { \u0022Fun\u00E7\u00E3o\u0022, \u0022Function\u0022 };\r\n        String[] label_Id = { \u0022Identidade\u0022, \u0022ID number\u0022 };\r\n        String[] label_vaccine1 = { \u0022NR-10\u0022, \u0022NR-10\u0022 };\r\n        String[] label_vaccine2 = { \u0022NR-33\u0022, \u0022NR-33\u0022 };\r\n        String[] label_reforco = { \u0022NR-35\u0022, \u0022NR-35\u0022 };\r\n        String[] label_level = { \u0022Nivel\u0022, \u0022Level\u0022 };\r\n        String[] label_acc = { \u0022Nivel de Acesso\u0022, \u0022Access Level\u0022 };\r\n        String[] label_yellow = { \u0022Amarelo\u0022, \u0022Yellow\u0022 };\r\n        String[] label_green = { \u0022Verde\u0022, \u0022Green\u0022 };\r\n        String[] label_red = { \u0022Vermelho\u0022, \u0022Red\u0022 };\r\n        String[] place1 = { \u0022Conv\u00E9s\u0022, \u0022Main Deck\u0022 };\r\n        String[] place2 = { \u0022Pra\u00E7a de Maquina\u0022, \u0022Engine Roon\u0022 };\r\n        String[] place3 = { \u0022Tijup\u00E1\u0022, \u0022monkey island\u0022 };\r\n        String[] place4 = { \u0022Casario\u0022, \u0022Acomodation Place\u0022 };\r\n        String[] Label_initial = { \u0022Data Inicial\u0022, \u0022Check-in\u0022 };\r\n        String[] Label_final = { \u0022Data Limite \u0022, \u0022Check-out\u0022 };\r\n        String[] Label_Read_QRcode_On = { \u0022Modo ler Qrcode \u0022, \u0022Read QRcode mode\u0022 };\r\n        String[] Label_Read_QRcode_Off = { \u0022Modo Cadastro\u0022, \u0022Registration mode\u0022 };\r\n        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n        String[] Label_close_data = { \u0022Fecha banco de dados:\u0022, \u0022Close DataBase\u0022 };\r\n        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n        String[] Label_Mostrar_checkin = { \u0022Pessoas a bordo:\u0022, \u0022Show Onboard\u0022 };\r\n        String[] Label_fechar = { \u0022Fechar:\u0022, \u0022Exit\u0022 };\r\n        String[] Label_reset = { \u0022Reiniciar:\u0022, \u0022Reset\u0022 };\r\n        String[] Label_cancel = { \u0022Cancelar\u0022, \u0022Cancel\u0022 };\r\n        String[] Label_entrada = { \u0022Entrada\u0022, \u0022Check-in\u0022 };\r\n        String[] Label_saida = { \u0022Saida\u0022, \u0022Check-out\u0022 };\r\n        String[] id_check = { \u0022ESTA IDENTIDADE J\u00C1 EST\u00C1 CADASTRADA\u0022, \u0022THIS ID NUMBER ALREADY EXIST\u0022 };\r\n        String[] Label_reset_project = { \u0022Novo Projeto\u0022, \u0022New Project\u0022 };\r\n        String[] Label_cadastro = { \u0022Cadastro Concluido com sucesso\u0022, \u0022Register concluded with success\u0022 };\r\n        String[] label_cad1 = { \u0022Cadastrados\u0022, \u0022Registed\u0022 };\r\n        String[] Label_53 = { \u0022Cadastro Embarca\u00E7\u00E3o\u0022, \u0022Vessel Register\u0022 };\r\n        String[] bt_41 = { \u0022Sair\u0022, \u0022Exit\u0022 };\r\n        String[] bt_42 = { \u0022Cadastrar\u0022, \u0022Register\u0022 };\r\n        String[] bt_43 = { \u0022Editar\u0022, \u0022Edit\u0022 };\r\n        String[] bt_44 = { \u0022Cadastrar\u0022, \u0022Register\u0022 };\r\n        String[] bt_45 = { \u0022Sair\u0022, \u0022Exit\u0022 };\r\n        String[] bt_regis = { \u0022CADASTRAR\u0022, \u0022REGISTER\u0022 };\r\n        String[] cad_mode = { \u0022Favor selecionar o local antes de colocar em modo cadastro\u0022, \u0022Please select the place option before use register mode\u0022 };\r\n        String[] read_mode = { \u0022Favor selecionar o local antes de colocar em modo ler qrcode\u0022, \u0022Please select the place option before use read mode\u0022 };\r\n        DateTime fdataa;\r\n        DateTime fdatab;\r\n        string _cad;\r\n        string _read;\r\n        string nb;\r\n        Boolean checa_host_ = false;\r\n\r\n        string passall;\r\n        bool libera = false;\r\n        Boolean entrou = false;\r\n        Boolean online_ = false;\r\n        // Print QRcode Create Show DataBase Save Backup Settings Wi-Fi connection Send Qr Code  by E-mail\r\n        //Show Check-in\r\n        int NUM = 0;\r\n        string hostName = System.Net.Dns.GetHostName();\r\n        string _ipstart;\r\n        string _ipstop;\r\n        string MyhostName;\r\n        int tempo = 0;\r\n        string bb;\r\n        string rede10;\r\n        string rede1;\r\n        string rede2;\r\n        string rede3;\r\n        string localname;\r\n        string comboname = \u0022\u0022;\r\n        string qr_generate = \u0022\u0022;\r\n        string data2 = \u0022NOME: CRISTIANO\u0022;\r\n        string number = \u0022Number\u0022;\r\n        string nome = \u0022NOME:\u0022;\r\n        string emp = \u0022COMPANY:\u0022;\r\n        string function = \u0022FUNCTION:\u0022;\r\n        string id = \u0022ID:\u0022;\r\n        string vessel = \u0022VESSEL:\u0022;\r\n        string initial = \u0022START\u0022;\r\n        string final = \u0022END\u0022;\r\n        string input_data = \u0022\u0022;\r\n        string input_hora = \u0022\u0022;\r\n        string output_data = \u0022\u0022;\r\n        string output_hora = \u0022\u0022;\r\n        string email = \u0022\u0022;\r\n        string criterio;\r\n        string path2;\r\n        string path3;\r\n        string[] subs2;\r\n        DateTime fproj;\r\n        int band = 0;\r\n        int confere = 0;\r\n        int teste = 0;\r\n        int resultado = 0;\r\n        int checado = 0;\r\n        int checado2 = 0;\r\n        int zzz = 0;\r\n        int comp = 0;\r\n        int compr = 0;\r\n        int lista2 = 0;\r\n        int lista3_;\r\n        string st;\r\n        int loc = 0;\r\n        int lav = 0;\r\n        bool rec = false;\r\n        int ping_local = 0;\r\n        int count = 2; //Count the number of successful pings\r\n        bool grava_number = false;\r\n        Boolean pega = false;\r\n        String varPalavra = \u0022teste\u0022;\r\n        string path = @\u0022C:\\compartilhamento\\data_base\\2022_02_19.xls\u0022;\r\n        int Linhas = 0;\r\n        string z = \u0022\u0022;\r\n        int inside = 0;\r\n        int s4 = 0;\r\n        int okay = 0;\r\n        int cri = 0;\r\n        int aso_1 = 0;\r\n        string rede = \u0022\u0022;\r\n        int id_1 = 0;\r\n        bool online = false;\r\n        string text1 = \u0022\u0022;\r\n        string text2 = \u0022\u0022;\r\n        string text3 = \u0022\u0022;\r\n        string text4 = \u0022\u0022;\r\n        string text5 = \u0022\u0022;\r\n        string text6 = \u0022\u0022;\r\n        string text7 = \u0022\u0022;\r\n        string text8 = \u0022\u0022;\r\n        string ip;\r\n        string ip1;\r\n        string ip2;\r\n        string ip3;\r\n        string rich5 = \u0022\u0022;\r\n        string rich9 = \u0022\u0022;\r\n        int local1val = 0;\r\n        int local2val = 0;\r\n        int local3val = 0;\r\n        int local4val = 0;\r\n        int levelyellow = 0;\r\n        int levelgreen = 0;\r\n        int levelred = 0;\r\n        String myping2 = \u0022\u0022;\r\n        int p = 0;\r\n        Boolean inout = false;\r\n        int mmm = 0;\r\n        string textbloc;\r\n        string textbloc2;\r\n        int l = 0;\r\n        public string caminhoImagemSalva = null;\r\n        public string caminhoImagemSalva2 = null;\r\n        bool r7 = false;\r\n        bool company_loc = false;\r\n        bool id_exist = false;\r\n        bool ok_but2 = false;\r\n        bool valor_ch = false;\r\n        bool id_onboard = false;\r\n        bool id_onboard2 = false;\r\n        bool cad_change = false;\r\n        bool alter = false;\r\n        bool cad = false;\r\n        bool print_ = false;\r\n        bool lido = false;\r\n        bool hasDb = false;\r\n        FilterInfoCollection filterInfoCollection;\r\n        VideoCaptureDevice videoCaptureDevice;\r\n        Bitmap bmp;\r\n        // DateTime flogo3;\r\n\r\n        DateTime flogo3 = DateTime.Now;\r\n\r\n        int tr = 0;\r\n\r\n\r\n\r\n        public static string GetWIFISignalStrength()\r\n        {\r\n            try\r\n            {\r\n                ObjectQuery query = new ObjectQuery(\u0022SELECT * FROM MSNdis_80211_ReceivedSignalStrength Where active = true\u0022);\r\n                ManagementScope scope = new ManagementScope(\u0022root\\\\wmi\u0022);\r\n                ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);\r\n                string result = \u0022\u0022;\r\n                foreach (ManagementObject obj in searcher.Get())\r\n                {\r\n                    if ((bool)obj[\u0022Active\u0022] == true)\r\n                    {\r\n                        result \u002B= (string)obj[\u0022Ndis80211ReceivedSignalStrength\u0022].ToString() \u002B Environment.NewLine;\r\n                    }\r\n                }\r\n                if (result == \u0022\u0022)\r\n                {\r\n                    result = \u0022No active WI-FI adapters found!\u0022;\r\n                }\r\n\r\n                return result.Trim();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message, \u0022Search Error\u0022, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n                return string.Empty;\r\n            }\r\n        }\r\n\r\n        private static void CopyFilesRecursively(string sourcePath, string targetPath)\r\n        {\r\n            //Now Create all of the directories\r\n            foreach (string dirPath in Directory.GetDirectories(sourcePath, \u0022*\u0022, SearchOption.AllDirectories))\r\n            {\r\n                Directory.CreateDirectory(dirPath.Replace(sourcePath, targetPath));\r\n            }\r\n\r\n            //Copy all the files \u0026 Replaces any files with the same name\r\n            foreach (string newPath in Directory.GetFiles(sourcePath, \u0022*.*\u0022, SearchOption.AllDirectories))\r\n            {\r\n                File.Copy(newPath, newPath.Replace(sourcePath, targetPath), true);\r\n            }\r\n        }\r\n        // Move a file into another file, delete the original, and create a backup of the replaced file.\r\n        public static void ReplaceFile(string fileToMoveAndDelete, string fileToReplace, string backupOfFileToReplace)\r\n        {\r\n            // Create a new FileInfo object.\r\n            FileInfo fInfo = new FileInfo(fileToMoveAndDelete);\r\n\r\n            // replace the file.\r\n            fInfo.Replace(fileToReplace, backupOfFileToReplace, true);\r\n        }\r\n\r\n\r\n        public static void copyAll(string SourcePath, string DestinationPath)\r\n        {\r\n            try\r\n            {\r\n                //Now Create all of the directories\r\n                foreach (string dirPath in Directory.GetDirectories(SourcePath, \u0022*\u0022, SearchOption.AllDirectories))\r\n                    Directory.CreateDirectory(Path.Combine(DestinationPath, dirPath.Remove(0, SourcePath.Length)));\r\n\r\n                //Copy all the files \u0026 Replaces any files with the same name\r\n                foreach (string newPath in Directory.GetFiles(SourcePath, \u0022*.*\u0022, SearchOption.AllDirectories))\r\n                    File.Copy(newPath, Path.Combine(DestinationPath, newPath.Remove(0, SourcePath.Length)), true);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void clearFolder(string FolderName)\r\n        {\r\n            DirectoryInfo dir = new DirectoryInfo(FolderName);\r\n\r\n            foreach (FileInfo fi in dir.GetFiles())\r\n            {\r\n                fi.Delete();\r\n            }\r\n\r\n            foreach (DirectoryInfo di in dir.GetDirectories())\r\n            {\r\n                clearFolder(di.FullName);\r\n                di.Delete();\r\n            }\r\n        }\r\n        int vas = 0;\r\n        int valor = 0;\r\n\r\n\r\n\r\n        private void atualiza_received()\r\n        {\r\n\r\n\r\n\r\n\r\n\r\n\r\n            p = 0;\r\n\r\n            vas = 0;\r\n            l = 1;\r\n            try\r\n            {\r\n\r\n\r\n                DateTime fvessel = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                DateTime fvesse2 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022\\\\data_txt\\\\PROJETO.txt\u0022);\r\n                if (fvessel \u003E fvesse2)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n                if (fvessel \u003C fvesse2)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    // copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n\r\n                    copyAll(rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(p.ToString());\r\n                DateTime flogo = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022);\r\n                DateTime flogo1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                if (flogo \u003E flogo1)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(p.ToString());\r\n                DateTime fpicture = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                DateTime fpicture1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_new_picture\\\\\u0022);\r\n                if (fpicture \u003E fpicture1)\r\n                {\r\n\r\n\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, rede1.Trim() \u002B \u0022data_picture\\\\\u0022);\r\n                    clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n                //  MessageBox.Show(\u0022data_picture ok\u0022);\r\n\r\n\r\n\r\n                DateTime ftime = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim());\r\n                DateTime ftime1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim());\r\n\r\n\r\n                //MessageBox.Show(ftime2.ToString());\r\n                if (ftime \u003E ftime1)\r\n                {\r\n                    // MessageBox.Show(ftime.ToString());\r\n                    // File.Copy(rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim() \u002B \u0022.backup\u0022, true);\r\n                    //  File.Delete(rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim());\r\n                    // File.Copy(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), true);\r\n\r\n                }\r\n\r\n                if (ftime1 \u003E ftime)\r\n                {\r\n\r\n                    // File.Copy(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), @\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim() \u002B \u0022.backup\u0022, true);\r\n                    //  File.Delete(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim());\r\n                    File.Copy(rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), @\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), true);\r\n\r\n                }\r\n\r\n\r\n\r\n                ///  MessageBox.Show(\u0022data_base ok\u0022);\r\n\r\n                ////////////////////////////////////////\r\n                ///\r\n\r\n\r\n                DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                if (vas == 0)\r\n                {\r\n\r\n                    DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n\r\n                    if (fdata \u003E f1data)\r\n                    {\r\n                        // vas = 1;\r\n                        // File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, true);\r\n                        // ler_linha();\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n                if (vas == 0)\r\n                {\r\n\r\n                    // DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                    DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n                    if (f1data \u003E fdata)\r\n                    {\r\n                        vas = 1;\r\n                        File.Copy(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n                        //  ler_linha();\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n\r\n                DateTime fdata1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n\r\n                if (fdata0 \u003E fdata1)\r\n                {\r\n\r\n                    File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, true);\r\n                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                    label3.Text = count.ToString().Trim();\r\n                }\r\n\r\n\r\n                if (fdata1 \u003E fdata0)\r\n                {\r\n                    //   File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    File.Copy(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true);\r\n                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                    label3.Text = count.ToString().Trim();\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(\u0022data2.txt ok\u0022);\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(ex.Message);\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n                // valor\u002B\u002B;\r\n            }\r\n\r\n            finally\r\n            {\r\n\r\n\r\n\r\n                //  atualiza_compartilhamento();\r\n            }\r\n            l = 0;\r\n            // ler_linha();\r\n\r\n            //  }\r\n\r\n\r\n            timer8.Start();\r\n        }\r\n\r\n        private void atualiza_compartilhamento()\r\n        {\r\n            // string rede2 = rede1.Replace(\u0022.lan\u0022, \u0022\u0022);\r\n            synch_db(rede1.Trim());\r\n            \r\n                        using (new NetworkConnection(rede2, new NetworkCredential(\u0022Cristiano Eng\u0022, \u0022469618106086\u0022)))\r\n                        {\r\n\r\n                            // Console.WriteLine($\u0022M\u00E1quina ativa encontrada em: {rede1.Trim()}\u0022);\r\n\r\n                            \r\n\r\n\r\n                            rede = rede2.Split(\u0027\\\\\u0027)[2].Trim();\r\n\r\n                            string linha;\r\n                            using (StreamReader reader = new StreamReader(@\u0022C:\\\\compartilhamento\\recebido.txt\u0022))\r\n                            {\r\n                                linha = reader.ReadLine();\r\n                            }\r\n\r\n                            soma = 1;\r\n                            // timer9.Enabled= false;\r\n                            // somando = 0;\r\n\r\n                            //  if (p == 1)\r\n                            //  {\r\n                            //   MessageBox.Show(p.ToString());\r\n\r\n                            //  MessageBox.Show(rede1.ToString());\r\n\r\n                            rec = false;\r\n                            p = 0;\r\n\r\n                            vas = 0;\r\n                            l = 1;\r\n                            try\r\n                            {\r\n                                //      MessageBox.Show(rede1.Trim() \u002B \u0022 Before Synch\u0022);\r\n\r\n\r\n                                DateTime fvessel = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                                DateTime fvesse2 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022\\\\data_txt\\\\PROJETO.txt\u0022);\r\n                                if (fvessel \u003E fvesse2)\r\n                                {\r\n\r\n                                    File.Copy(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, true);\r\n\r\n\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n\r\n\r\n\r\n\r\n                                }\r\n                                // \r\n\r\n                                if (fvessel \u003C fvesse2)\r\n                                {\r\n                                    string caminhoArquivo3 = rede2.Trim() \u002B \u0022\\\\recebido.txt\u0022;\r\n                                    // Abre o arquivo para escrita\r\n                                    using (StreamWriter sw = new StreamWriter(caminhoArquivo3))\r\n                                    {\r\n                                        sw.WriteLine(\u00220\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                    }\r\n\r\n                                    File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, true);\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    // copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n\r\n                                    //   copyAll(rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                DateTime flogo = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022);\r\n                                DateTime flogo1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                                if (flogo \u003E flogo1)\r\n                                {\r\n\r\n\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede2.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                }\r\n\r\n\r\n                                DateTime fpicture = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                                if (rede2 != null)\r\n                                {\r\n                                    DateTime fpicture1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_new_picture\\\\\u0022);\r\n                                    if (fpicture \u003E fpicture1)\r\n                                    {\r\n\r\n                                        copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                        copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, rede2.Trim() \u002B \u0022data_picture\\\\\u0022);\r\n                                        clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                    }\r\n                                    //  MessageBox.Show(\u0022data_picture ok\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    // Uncomment the following line if you want to display a message box indicating the synchronization is done\r\n                                    // MessageBox.Show(\u0022data_base ok\u0022);\r\n\r\n\r\n                                    ////////////////////////////////////////\r\n                                    ///\r\n\r\n\r\n                                    DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                                    if (vas == 0)\r\n                                    {\r\n\r\n                                        DateTime f1data = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n\r\n                                        if (fdata \u003E f1data)\r\n                                        {\r\n                                            vas = 1;\r\n                                            //if (linha == \u00221\u0022)\r\n                                            // {\r\n                                            File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, true);\r\n                                            //  saida_manual();\r\n                                            //     linha=\u00220\u0022;\r\n                                            //  }\r\n\r\n                                            // client.Publish(\u0022switch1\u0022, Encoding.UTF8.GetBytes(\u0022ok 1\u0022), MqttMsgBase.QOS_LEVEL_AT_MOST_ONCE, false);\r\n                                            // File.\r\n                                            // ler_linha();\r\n                                            //  MessageBox.Show(number);\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                    if (vas == 0)\r\n                                    {\r\n\r\n                                        // DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                                        DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n                                        if (f1data \u003E fdata)\r\n                                        {\r\n                                            vas = 1;\r\n                                            File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n                                            // ler_linha();\r\n\r\n\r\n                                            // MessageBox.Show(\u0022data menor\u0022);\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                    DateTime fdata1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n\r\n                                    if (fdata0 \u003E fdata1)\r\n                                    {\r\n                                        //  if (linha == \u00221\u0022)\r\n                                        //  {\r\n\r\n                                        File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, true);\r\n                                        int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                        label3.Text = count.ToString().Trim();\r\n                                        //   linha = \u00220\u0022;\r\n                                        // }  \r\n                                    }\r\n\r\n\r\n                                    if (fdata1 \u003E fdata0)\r\n                                    {\r\n                                        //   File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                        File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true);\r\n                                        int count2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                        label3.Text = count2.ToString().Trim();\r\n\r\n\r\n                                    }\r\n                                    //     MessageBox.Show(\u0022data\u0022);\r\n\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                                string caminhoArquivo = rede2.Trim() \u002B \u0022data_txt\\\\data4.txt\u0022;\r\n                                // Abre o arquivo para escrita\r\n                                //   using (StreamWriter sw = new StreamWriter(caminhoArquivo))\r\n                                //   {\r\n                                //      sw.WriteLine(\u00221\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                //   }\r\n\r\n                                // somando\u002B\u002B;\r\n\r\n                                //   string caminhoArquivo2 = rede1.Trim() \u002B \u0022\\\\recebido.txt\u0022;\r\n                                // Abre o arquivo para escrita\r\n                                //  using (StreamWriter sw = new StreamWriter(caminhoArquivo2))\r\n                                // {\r\n                                // sw.WriteLine(\u00221\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                // }\r\n\r\n                                // MessageBox.Show(rede1.Trim());\r\n\r\n                                MessageBox.Show(\u0022ok\u0022);\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                // somando--;\r\n\r\n                                MessageBox.Show(rede2.Trim() \u002B \u0022  \u0022 \u002B ex.Message);\r\n                                ///   MessageBox.Show(\u0022falha\u0022);\r\n                                // valor\u002B\u002B;\r\n                                // panel12.BackColor = Color.Black;\r\n\r\n                            }\r\n\r\n                            //  MessageBox.Show(\u0022ok\u0022);\r\n                            l = 0;\r\n\r\n                            comp = 1;\r\n                            //  string nomeArquivo3 = rede1.Trim() \u002B \u0022lock.txt\u0022;\r\n                            //  using (StreamWriter writer = new StreamWriter(nomeArquivo3, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                            //  {\r\n                            //    writer.WriteLine(\u00220\u0022);\r\n                            //    writer.Close();\r\n                            // }\r\n\r\n\r\n\r\n                            rec = true;\r\n                            soma = 0;\r\n                            /// timer9.Enabled = true;\r\n                            //   timer9.Enabled = true;\r\n                        }\r\n                        \r\n        }\r\n\r\n\r\n        private void synch_db(String rede)\r\n        {\r\n            using (new NetworkConnection(rede, new NetworkCredential(\u0022111111\u0022, \u0022469618106086\u0022)))\r\n            {\r\n                // rede = rede1.Split(\u0027\\\\\u0027)[2].Trim();\r\n                try\r\n                {\r\n                    string localDbPath = @\u0022C:\\compartilhamento\\dados\\banco.db\u0022;\r\n                    //  string remoteDbPath = rede \u002B \u0022\\\\dados\\\\banco.db\u0022;\r\n                    string rede2 = rede.Replace(\u0022.lan\u0022, \u0022\u0022);\r\n                    string remoteDbPath = rede2 \u002B \u0022\\\\dados\\\\banco.db\u0022;\r\n\r\n                    List\u003CUsuario\u003E localUsers;\r\n                    List\u003CUsuario\u003E remoteUsers;\r\n\r\n                    List\u003CCadastro\u003E localCadastro;\r\n                    List\u003CCadastro\u003E remoteCadastro;\r\n\r\n                    // Fetch all the users from the local database\r\n                    using (var localDb = new LiteDatabase(localDbPath))\r\n                    {\r\n\r\n                        localUsers = localDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022)\r\n                                            .FindAll()\r\n                                            .ToList();\r\n\r\n                        localCadastro = localDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022)\r\n                            .FindAll()\r\n                                            .ToList();\r\n                    }\r\n\r\n                    // Fetch all the users from the remote database\r\n                    using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                    {\r\n\r\n                        remoteUsers = remoteDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022)\r\n                                              .FindAll()\r\n                                              .ToList();\r\n\r\n                        remoteCadastro = remoteDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022)\r\n                            .FindAll()\r\n                                              .ToList();\r\n                    }\r\n\r\n                    // Synchronization logic\r\n                    SynchronizeDatabases(localDbPath, remoteDbPath, localUsers, remoteUsers);\r\n                    SynchronizeCadastroDatabases(localDbPath, remoteDbPath, localCadastro, remoteCadastro);\r\n                    //MessageBox.Show(\u0022ok\u0022);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    // MessageBox.Show(\u0022DB_Synch 867\u0022);\r\n                    MessageBox.Show(rede.Trim() \u002B \u0022  \u0022 \u002B ex.Message);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        void SynchronizeDatabases(string localDbPath, string remoteDbPath, List\u003CUsuario\u003E localUsers, List\u003CUsuario\u003E remoteUsers)\r\n        {\r\n            try\r\n            {\r\n\r\n\r\n\r\n                // Find the intersection and the unique users from each database\r\n                var intersectUsers = localUsers.Intersect(remoteUsers).ToList();\r\n                var localUniqueUsers = localUsers.Except(intersectUsers).ToList();\r\n                var remoteUniqueUsers = remoteUsers.Except(intersectUsers).ToList();\r\n\r\n                // Update the local database with unique users from the remote database\r\n                using (var localDb = new LiteDatabase(localDbPath))\r\n                {\r\n                    var userCollection = localDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                    userCollection.InsertBulk(remoteUniqueUsers);\r\n                }\r\n\r\n                // Update the remote database with unique users from the local database\r\n                using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                {\r\n                    var userCollection = remoteDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                    userCollection.InsertBulk(localUniqueUsers);\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Log the exception details\r\n\r\n            }\r\n\r\n        }\r\n\r\n        void SynchronizeCadastroDatabases(string localDbPath, string remoteDbPath, List\u003CCadastro\u003E localCadastro, List\u003CCadastro\u003E remoteCadastro)\r\n        {\r\n            try\r\n            {\r\n\r\n\r\n\r\n                // Find the intersection and the unique users from each database\r\n                var intersectCadastro = localCadastro.Intersect(remoteCadastro).ToList();\r\n                var localUniqueCadastro = localCadastro.Except(intersectCadastro).ToList();\r\n                var remoteUniqueCadastro = remoteCadastro.Except(intersectCadastro).ToList();\r\n\r\n                // Update the local database with unique users from the remote database\r\n                using (var localDb = new LiteDatabase(localDbPath))\r\n                {\r\n                    var cadastroCollection = localDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n                    cadastroCollection.InsertBulk(remoteUniqueCadastro);\r\n                }\r\n\r\n                // Update the remote database with unique users from the local database\r\n                using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                {\r\n                    var cadastroCollection = remoteDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n                    cadastroCollection.InsertBulk(localUniqueCadastro);\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Log the exception details\r\n\r\n            }\r\n        }\r\n\r\n        System.Data.DataTable dt = new System.Data.DataTable();\r\n        private DataSet ds;\r\n        int number2 = 0;\r\n        private void print_qrcode()\r\n        {\r\n\r\n            try\r\n            {\r\n                if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1)\r\n                {\r\n\r\n\r\n                    String data_new;\r\n                    String data2_new;\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n                    else\r\n                    {\r\n                        data_new = richTextBox6.Text.Trim();\r\n                    }\r\n                    if (dateTimePicker2.Visible == true)\r\n                    {\r\n                        data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n                    else\r\n                    {\r\n                        data2_new = richTextBox7.Text.Trim();\r\n                    }\r\n                    if (richTextBox16.Text == \u0022\u0022)\r\n                    {\r\n\r\n\r\n\r\n                        int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                        string number = count.ToString().Trim();\r\n\r\n                        // string number = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                        label3.Text = number;\r\n                        number2 = Int32.Parse(label3.Text);\r\n                        lb4.Visible = true;\r\n                        number2\u002B\u002B;\r\n                        // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022, number2.ToString());\r\n                        label3.Text = number2.ToString();\r\n                        lb4.Text = label3.Text;\r\n\r\n\r\n\r\n\r\n                        label5.Text = \u0022 \u0022;\r\n                        label28.Text = \u0022 \u0022;\r\n                        label30.Text = \u0022 \u0022;\r\n                        label31.Text = \u0022 \u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        panel11.Visible = false;\r\n                        panel4.Visible = true;\r\n                        label5.Text = richTextBox2.Text;\r\n                        label28.Text = comboBox1.Text;\r\n                        label30.Text = richTextBox9.Text;\r\n                        label31.Text = \u0022De: \u0022 \u002B data_new;\r\n                        label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n                    }\r\n\r\n                    else\r\n                    {\r\n\r\n                        label5.Text = \u0022 \u0022;\r\n                        label28.Text = \u0022 \u0022;\r\n                        label30.Text = \u0022 \u0022;\r\n                        label31.Text = \u0022 \u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        panel11.Visible = false;\r\n                        panel4.Visible = true;\r\n                        label5.Text = richTextBox2.Text;\r\n                        label28.Text = comboBox1.Text;\r\n                        label30.Text = richTextBox9.Text;\r\n                        label31.Text = \u0022De: \u0022 \u002B data_new;\r\n                        label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n                    }\r\n\r\n\r\n                    int width = panel4.Size.Width;\r\n                    int height = panel4.Size.Height;\r\n                    Bitmap bm = new Bitmap(width, height);\r\n                    panel4.DrawToBitmap(bm, new System.Drawing.Rectangle(0, 0, width, height));\r\n                    bm.Save(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n\r\n\r\n                    PrintDocument pd = new PrintDocument();\r\n                    comboPaperSize.DisplayMember = \u0022Etiqueta\u0022;\r\n                    System.Drawing.Printing.PaperSize pkSize;\r\n                    pkSize = pd.PrinterSettings.PaperSizes[57];\r\n                    //   pd.DefaultPageSettings.PrinterResolution = new PrinterResolution() { Kind = PrinterResolutionKind.Medium };\r\n\r\n                    comboPaperSize.Items.Add(pkSize);\r\n                    pd.DefaultPageSettings.Landscape = true;\r\n                    pd.PrintPage \u002B= (sender, args) =\u003E\r\n                    {\r\n                        Image i = bm;\r\n                        System.Drawing.Rectangle m = args.PageBounds;\r\n                        args.Graphics.DrawImage(i, 20, 5, 296, 216);\r\n                    };\r\n\r\n                    //  bm.Save(@\u0022C:\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n                    pd.Print();\r\n                    pd.Print();\r\n                    // label5.Visible = false;\r\n                    /// label4.Visible = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    if (band == 0)\r\n                    {\r\n                        MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                    }\r\n\r\n                    if (band == 1)\r\n                    {\r\n                        MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                    }\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022A IMPRESSORA BROTHER QL810 ou QL800 N\u00C3O EST\u00C1 DEFINIDA COMO IMPRESSORA PADR\u00C3O, FAVOR DEFINIR NO PAINEL DE CONTROLE DO WINDOWS NA OP\u00C7\u00C3O (Dispositivos e Impressoras)!\u0022);\r\n            }\r\n        }\r\n        private void out_by_user()\r\n        {\r\n            try\r\n            {\r\n\r\n                // richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                string bio = listBox1.SelectedItem.ToString().Trim();\r\n                // string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(Int16.Parse(bio.Split(\u0027:\u0027)[0]));\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich2 = Int32.Parse(label3.Text);\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n\r\n\r\n\r\n\r\n                for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n                {\r\n                    //print \u0022entrou no for\u0022\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(i);\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[1].Trim() == bio.Split(\u0027:\u0027)[1].Trim())\r\n                        {\r\n\r\n                            //NUMBER\tNAME\tCOMPANY\tFUNCTION\tID\tEMAIL\tVESSEL\tCHECK-IN VALIDATION\t  CHECK-OUT VALIDATION\t CHECK-IN\t     CHECK-OUT\tPROJECT\tASO\tNR-35\tVACCINE-1\tVACCINE-2\tBOOST VACCINE\tLOCAL\tLEVEL\tESTADO\tMOTIVO\tUSUARIO\r\n                            try\r\n                            {    //  1        2          3     4        5    6       7          8                           9                  10              11             12              13         14      15      16        17            18             19          20     21      22     23       24\r\n\r\n                                // NUMBER    NAME    COMPANY FUNCTION    ID EMAIL   VESSEL CHECK-IN VALIDATION     CHECK-OUT VALIDATION   CHECK-IN  DATA  CHECK-IN  HORA CHECK-OUT DATA CHECK-OUT HORA PROJECT    ASO    NR-35   VACCINE - 1   VACCINE - 2   BOOST VACCINE   LOCAL LEVEL   ESTADO MOTIVO  USUARIO\r\n\r\n                                //Number: 1  Name: CRISTIANO CALHEIROS  Compay: GOOGLEMARINE Id: 111098414  :E - Mail: cristiano.engenharia.ac @gmail.com\r\n                                // string bio = listBox1.SelectedItem.ToString().Trim();\r\n\r\n                                // 0      1    2              3             4         5             6           7      8       9          10                    11                      12         13          14      15      16        17           18            19            20              22              23               24               25              26         27   28\r\n                                // Number: 1 : Name: CRISTIANO CALHEIROS : Compay: GOOGLEMARINE: Funcition: ENGENHEIRO: Id: 111098414 : E - mail : cristiano.engenharia.ac @gmail.com: Vessel: Googlemarine: Project: 190605 : ASO: 02 / 02 / 2025 : NR - 34 : 02 / 02 / 2025 : Vaccine - 1 : 02 / 02 / 2025 : Vaccine - 2 : 02 / 02 / 2025 : Booster vaccine : 02 / 02 / 2025 :  : COMUM:\r\n\r\n                                output_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                                output_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n\r\n\r\n\r\n\r\n                                var num = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                var nome = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                var empresa = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                var funcao = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                var id = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                var email = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                                var vessel = secondLine.Split(\u0027:\u0027)[13].Trim();\r\n                                var checked_in_val = \u0022\u0022;\r\n                                var check_out_val = \u0022\u0022;\r\n                                var checked_in_data = \u0022*\u0022;\r\n                                var checked_in_hora = \u0022*\u0022;\r\n                                var checked_out_data = output_data;\r\n                                var checked_out_hora = output_hora \u002B \u0022: MANUAL PELO USU\u00C1RIO\u0022;\r\n                                var user = comuser.Text;\r\n\r\n                                //create and populate new Usuario\r\n                                Usuario usuario = new Usuario(\r\n                                     Int32.Parse(num), nome, empresa, funcao, Int32.Parse(id), email, vessel, checked_in_val, check_out_val, checked_in_data, checked_in_hora, checked_out_data, checked_out_hora, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, user);\r\n                                add_data2(usuario);\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                            // */\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                /// MessageBox.Show(\u0022N\u00C3O A DADOS CADASTRADOS!\u0022);\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n        // [DllImport(\u0022user32.dll\u0022), CharSet= CharSet.Auto, SetLastError = true)]\r\n        //  public static extern int GetWindowThreadProcessId(int handle,out int processId);\r\n\r\n\r\n\r\n        private void carrega_planilha_txt()\r\n        {\r\n            string filePath = \u0022C:\\\\compartilhamento\\\\data_base\\\\novo.txt\u0022;\r\n\r\n\r\n\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            vinte = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n            vinteum = localname;\r\n\r\n            string contentToAppend = richTextBox16.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox2.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox1.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox3.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox8.Text.Trim() \u002B \u0022,\u0022 \u002B comboBox1.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B input_data.Trim() \u002B \u0022,\u0022 \u002B input_hora.Trim() \u002B \u0022,\u0022 \u002B output_data.Trim() \u002B \u0022,\u0022 \u002B output_hora.Trim() \u002B \u0022,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,\u0022 \u002B vinteum \u002B \u0022,\u0022 \u002B vintedois \u002B \u0022,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n\r\n            // Verifica se o arquivo existe antes de tentar adicionar o conte\u00FAdo\r\n            if (File.Exists(filePath))\r\n            {\r\n                // Abre o arquivo em modo de anexa\u00E7\u00E3o (append)\r\n                using (StreamWriter writer = File.AppendText(filePath))\r\n                {\r\n                    // Escreve o conte\u00FAdo no arquivo\r\n                    writer.WriteLine(contentToAppend);\r\n                }\r\n\r\n                Console.WriteLine(\u0022Conte\u00FAdo adicionado com sucesso.\u0022);\r\n            }\r\n        }\r\n        private void CarregarPlanilha()\r\n        {\r\n\r\n            //  int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n            pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n            plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n            txtCodigoFunci.Text = lastRow.ToString();\r\n            lastRow\u002B\u002B;\r\n            /*\r\nxlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\nxlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\nxlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\nxlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\nxlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\nxlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\nxlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\nxlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\nxlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\nxlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\nxlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\nxlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\nxlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\nxlWorkSheet.Cells[1, 16] = \u0022NR-35\u0022;\r\nxlWorkSheet.Cells[1, 17] = \u0022VACCINE-1\u0022;\r\nxlWorkSheet.Cells[1, 18] = \u0022VACCINE-2\u0022;\r\nxlWorkSheet.Cells[1, 19] = \u0022BOOST VACCINE\u0022;\r\nxlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\nxlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\nxlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\nxlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\nxlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n                         output_data = DateTime.Now.ToString(\u0022dd-MM-yyyy\u0022);\r\n                output_hora = DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n*/\r\n\r\n            string contentToAppend = nb \u002B \u0022,\u0022 \u002B richTextBox2.Text \u002B \u0022,\u0022 \u002B richTextBox1.Text \u002B \u0022,\u0022 \u002B richTextBox3.Text \u002B \u0022,\u0022 \u002B richTextBox4.Text \u002B \u0022,\u0022 \u002B richTextBox8.Text \u002B \u0022,\u0022 \u002B comboBox1.Text \u002B \u0022,\u0022 \u002B richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text \u002B \u0022,\u0022 \u002B input_data \u002B \u0022,\u0022 \u002B input_hora \u002B \u0022,\u0022 \u002B output_data \u002B \u0022,\u0022 \u002B output_hora \u002B \u0022,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,,\u0022 \u002B vintedois \u002B \u0022,,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n            plan.Cells[lastRow, 1] = richTextBox16.Text;\r\n            plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n            plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n            plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n            plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n            plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n            plan.Cells[lastRow, 7] = comboBox1.Text;\r\n            plan.Cells[lastRow, 8] = richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim();\r\n            plan.Cells[lastRow, 9] = \u0022.\u0022 \u002B richTextBox7.Text.Trim(); //DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n            plan.Cells[lastRow, 10] = input_data;\r\n            plan.Cells[lastRow, 11] = input_hora;\r\n            plan.Cells[lastRow, 12] = output_data;\r\n            plan.Cells[lastRow, 13] = output_hora;\r\n            plan.Cells[lastRow, 14] = richTextBox9.Text.Trim();\r\n            plan.Cells[lastRow, 15] = richTextBox10.Text.Trim();\r\n            plan.Cells[lastRow, 16] = richTextBox11.Text.Trim();\r\n            plan.Cells[lastRow, 17] = richTextBox12.Text.Trim();\r\n            plan.Cells[lastRow, 18] = richTextBox13.Text.Trim();\r\n            plan.Cells[lastRow, 19] = richTextBox14.Text.Trim();\r\n            plan.Cells[lastRow, 24] = comuser.Text;\r\n\r\n            localname = \u0022\u0022;\r\n\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            plan.Cells[lastRow, 20] = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n\r\n            plan.Cells[lastRow, 21] = localname;\r\n\r\n            pasta.Save();\r\n            pasta.Close();\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n\r\n            ///  checa_host();\r\n\r\n\r\n            try\r\n            {\r\n                //   checa_host();\r\n                // atualiza_compartilhamento();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(ex.ToString(), ex.Message, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n            }\r\n            //  MessageBox.Show(\u0022CarregarPlanilha - leitura\u0022);\r\n        }\r\n\r\n        private void bloqueio()\r\n        {\r\n            try\r\n            {\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n                // Start at line number 2 because there is a header\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n                    if (richTextBox16.Text.Trim() != \u0022\u0022)\r\n                    {\r\n                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                        {\r\n                            // Copy it where you want\r\n                            //  MessageBox.Show(lines[i].ToString());\r\n                            string text3 = lines[i];\r\n\r\n                            string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                            string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                            text = text.Replace(text3, text4);\r\n                            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //////////////////////////\r\n\r\n                pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n                plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n                txtCodigoFunci.Text = lastRow.ToString();\r\n                lastRow\u002B\u002B;\r\n\r\n                if (richTextBox16.Text == \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = number2;\r\n                }\r\n                if (richTextBox16.Text != \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = Int32.Parse(richTextBox16.Text);\r\n                }\r\n                /*\r\nxlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\nxlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\nxlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\nxlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\nxlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\nxlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\nxlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\nxlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\nxlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\nxlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\nxlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\nxlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\nxlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\nxlWorkSheet.Cells[1, 16] = \u0022NR-35\u0022;\r\nxlWorkSheet.Cells[1, 17] = \u0022VACCINE-1\u0022;\r\nxlWorkSheet.Cells[1, 18] = \u0022VACCINE-2\u0022;\r\nxlWorkSheet.Cells[1, 19] = \u0022BOOST VACCINE\u0022;\r\nxlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\nxlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\nxlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\nxlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\nxlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n             output_data = DateTime.Now.ToString(\u0022dd-MM-yyyy\u0022);\r\n    output_hora = DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n*/\r\n                // qr_generate = label37.Text;\r\n                plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n                plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n                plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n                plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n                plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n                plan.Cells[lastRow, 7] = comboBox1.Text;\r\n                // plan.Cells[lastRow, 8] = DateTime.Now;\r\n\r\n                //xlWorkSheet.Cells[1, 20] = \u0022ESTADO\u0022;\r\n                // xlWorkSheet.Cells[1, 21] = \u0022MOTIVO\u0022;\r\n                // xlWorkSheet.Cells[1, 22] = \u0022USUARIO\u0022;\r\n                plan.Cells[lastRow, 14] = richTextBox9.Text;\r\n                plan.Cells[lastRow, 15] = richTextBox10.Text;\r\n                plan.Cells[lastRow, 16] = richTextBox11.Text;\r\n                plan.Cells[lastRow, 17] = richTextBox12.Text;\r\n                plan.Cells[lastRow, 18] = richTextBox13.Text;\r\n                plan.Cells[lastRow, 19] = richTextBox14.Text;\r\n                plan.Cells[lastRow, 22] = bb;\r\n                plan.Cells[lastRow, 23] = richTextBox17.Text;\r\n                plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n\r\n                localname = \u0022\u0022;\r\n                bb = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (local1.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n                }\r\n                if (local2.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n                }\r\n                if (local3.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n                }\r\n                if (local4.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 20] = localname;\r\n\r\n                localname = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (level_yellow.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n                }\r\n                if (level_green.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n                }\r\n                if (level_red.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n                }\r\n\r\n                plan.Cells[lastRow, 21] = localname;\r\n\r\n\r\n\r\n\r\n                pasta.Save();\r\n                //pasta.Close();\r\n                app.Quit();\r\n                pasta.Close();\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                //CarregarPlanilha();\r\n                //   atualiza_compartilhamento();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                // MessageBox.Show(ex.ToString(), ex.Message, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n            }\r\n\r\n        }\r\n        public void txt_to_excel()\r\n        {\r\n            string[] InputNamesLines = System.IO.File.ReadAllLines(@\u0022c:\\teste\\excel.txt\u0022);\r\n            string secondLine = File.ReadLines(@\u0022c:\\teste\\data2.txt\u0022).ElementAtOrDefault(1);\r\n            //if()\r\n            Excel.Application oXl;\r\n            Excel._Workbook oWB;\r\n            Excel._Worksheet xlWorkSheet;\r\n            Excel.Range oRng;\r\n            object misvalue = System.Reflection.Missing.Value;\r\n            try\r\n            {\r\n                oXl = new Excel.Application();\r\n                oXl.Visible = true;\r\n\r\n                oWB = (Excel._Workbook)(oXl.Workbooks.Add(\u0022\u0022));\r\n                xlWorkSheet = (Excel.Worksheet)oWB.ActiveSheet;\r\n                xlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\n                xlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\n                xlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\n                xlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n                xlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\n                xlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\n                xlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\n                xlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n                xlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\n                xlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\n                xlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\n                xlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\n                xlWorkSheet.Cells[1, 16] = \u0022NR-34\u0022;\r\n                xlWorkSheet.Cells[1, 17] = \u0022NR-10\u0022;\r\n                xlWorkSheet.Cells[1, 18] = \u0022NR-33\u0022;\r\n                xlWorkSheet.Cells[1, 19] = \u0022NR-35\u0022;\r\n                xlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\n                xlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\n                xlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\n                xlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\n                xlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n                xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022).Font.Bold = true;\r\n                xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022).VerticalAlignment = Excel.XlVAlign.xlVAlignCenter;\r\n                for (int i = 1; i \u003C= InputNamesLines.Length; i\u002B\u002B)\r\n                {\r\n                    // oSheet.Cells[1][i \u002B 1] = i;\r\n                    // oSheet.Cells[2][i \u002B 1] =   InputNamesLines[i - 1];\r\n                    // oSheet.Cells[3]= secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                }\r\n                xlWorkSheet.Cells[1, 3] = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                Thread.Sleep(5000);\r\n                oRng = xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022);\r\n                oRng.EntireColumn.AutoFit();\r\n                oXl.Visible = false;\r\n                oWB.SaveAs(@\u0022c:\\teste\\teste.xls\u0022, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, false, false, Excel.XlSaveAsAccessMode.xlNoChange,\r\n                    Type.Missing, Type.Missing, Type.Missing, Type.Missing);\r\n                oWB.Close();\r\n                Marshal.ReleaseComObject(oWB);\r\n                Marshal.ReleaseComObject(oWB);\r\n                Marshal.ReleaseComObject(oWB);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void carrega_planilha2_txt()\r\n        {\r\n            string filePath = \u0022C:\\\\compartilhamento\\\\data_base\\\\novo.txt\u0022;\r\n\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                nb = number2.ToString();\r\n            }\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                nb = richTextBox16.Text.Trim();\r\n            }\r\n            if (alter == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022ALTERADO\u0022;\r\n                alter = false;\r\n            }\r\n            if (print_ == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022PRINTED\u0022;\r\n                print_ = false;\r\n\r\n            }\r\n            if (lido == true)\r\n            {\r\n                vintedois = \u0022LIDO\u0022;\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                lido = false;\r\n            }\r\n\r\n            if (cad == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022CADASTRADO\u0022;\r\n                cad = false;\r\n            }\r\n\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            vinte = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n\r\n\r\n            string contentToAppend = nb \u002B \u0022,\u0022 \u002B richTextBox2.Text \u002B \u0022,\u0022 \u002B richTextBox1.Text \u002B \u0022,\u0022 \u002B richTextBox3.Text \u002B \u0022,\u0022 \u002B richTextBox4.Text \u002B \u0022,\u0022 \u002B richTextBox8.Text \u002B \u0022,\u0022 \u002B comboBox1.Text \u002B \u0022,\u0022 \u002B richTextBox6.Text \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text \u002B \u0022,,,,,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,,\u0022 \u002B vintedois \u002B \u0022,,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n\r\n            //string to int function\r\n            int number = Int32.Parse(richTextBox16.Text);\r\n            //identidade string to int function\r\n            int identidade = Int32.Parse(richTextBox4.Text);\r\n\r\n            //create new Usuario() object and assign values to its properties respectively\r\n            Usuario usuario = new Usuario(\r\n                number,\r\n                richTextBox2.Text,\r\n                richTextBox1.Text,\r\n                richTextBox3.Text,\r\n                identidade,\r\n                richTextBox8.Text,\r\n                comboBox1.Text,\r\n                richTextBox6.Text \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text,\r\n                \u0022.\u0022 \u002B richTextBox7.Text,\r\n                input_data,\r\n                input_hora,\r\n                output_data,\r\n                output_hora,\r\n                richTextBox9.Text,\r\n                richTextBox10.Text,\r\n                richTextBox11.Text,\r\n                richTextBox12.Text,\r\n                richTextBox13.Text,\r\n                richTextBox14.Text,\r\n                vinte,\r\n                vinteum,\r\n                vintedois,\r\n                vintequatro,\r\n                comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now\r\n                );\r\n\r\n            add_data2(usuario);\r\n\r\n\r\n            // Verifica se o arquivo existe antes de tentar adicionar o conte\u00FAdo\r\n            if (File.Exists(filePath))\r\n            {\r\n                // Abre o arquivo em modo de anexa\u00E7\u00E3o (append)\r\n                using (StreamWriter writer = File.AppendText(filePath))\r\n                {\r\n                    // Escreve o conte\u00FAdo no arquivo\r\n                    writer.WriteLine(contentToAppend);\r\n                }\r\n\r\n                Console.WriteLine(\u0022Conte\u00FAdo adicionado com sucesso.\u0022);\r\n            }\r\n        }\r\n\r\n        private void CarregarPlanilha2()\r\n        {\r\n            try\r\n            {\r\n\r\n                okay = 1;\r\n                pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n\r\n                plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n\r\n                txtCodigoFunci.Text = lastRow.ToString();\r\n                lastRow\u002B\u002B;\r\n\r\n                if (richTextBox16.Text == \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = number2;\r\n                }\r\n                if (richTextBox16.Text != \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = Int16.Parse(richTextBox16.Text.Trim());\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n                plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n                plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n                plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n                plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n                plan.Cells[lastRow, 7] = comboBox1.Text;\r\n                plan.Cells[lastRow, 8] = richTextBox6.Text;\r\n                plan.Cells[lastRow, 9] = \u0022.\u0022 \u002B richTextBox7.Text;\r\n                plan.Cells[lastRow, 14] = richTextBox9.Text;\r\n\r\n\r\n                plan.Cells[lastRow, 15] = richTextBox10.Text.Trim();\r\n                plan.Cells[lastRow, 16] = richTextBox11.Text.Trim();\r\n                plan.Cells[lastRow, 17] = richTextBox12.Text.Trim();\r\n                plan.Cells[lastRow, 18] = richTextBox13.Text.Trim();\r\n                plan.Cells[lastRow, 19] = richTextBox14.Text.Trim();\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n\r\n\r\n                // plan.Cells[lastRow, 24] = comuser.Text;\r\n\r\n                localname = \u0022\u0022;\r\n\r\n\r\n\r\n\r\n                if (alter == true)\r\n                {\r\n                    plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 22] = \u0022CADASTRO ALTERADO\u0022;\r\n                }\r\n                if (alter == false)\r\n                {\r\n                    plan.Cells[lastRow, 22] = qr_generate \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 24] = comuser.Text;\r\n                }\r\n                if (cad == true)\r\n                {\r\n                    plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 22] = \u0022CADASTRADO\u0022;\r\n                    cad = false;\r\n                }\r\n\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (local1.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n                }\r\n                if (local2.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n                }\r\n                if (local3.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n                }\r\n                if (local4.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 20] = localname;\r\n\r\n                localname = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (level_yellow.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n                }\r\n                if (level_green.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n                }\r\n                if (level_red.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n                }\r\n\r\n                plan.Cells[lastRow, 21] = localname;\r\n\r\n\r\n\r\n\r\n                pasta.Save();\r\n                pasta.Close();\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                //  atualiza_compartilhamento();\r\n                // myThread.Abort();\r\n                //   checa_host();\r\n                //  MessageBox.Show(\u0022CarregarPlanilha - atualiza excel\u0022);\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            //CarregarPlanilha();\r\n\r\n        }\r\n        private static void CloseExcel(Excel.Application ExcelApplication = null)\r\n        {\r\n            if (ExcelApplication != null)\r\n            {\r\n                //ExcelApplication.Workbooks.Close();\r\n                // ExcelApplication.Quit();\r\n            }\r\n\r\n            System.Diagnostics.Process[] PROC = System.Diagnostics.Process.GetProcessesByName(\u0022EXCEL\u0022);\r\n            foreach (System.Diagnostics.Process PK in PROC)\r\n            {\r\n                //  if (PK.MainWindowTitle.Length == 0) { PK.Kill(); }\r\n            }\r\n\r\n\r\n            var valor = 1;\r\n            //  var array[] = 1;\r\n            int x = 2;\r\n            var processes = Process.GetProcessesByName(\u0022Excel\u0022);\r\n\r\n            foreach (var p in processes)\r\n            {\r\n\r\n\r\n                //  x\u002B\u002B;\r\n                if (x \u003E= 2)\r\n                {\r\n                    valor = p.Id;\r\n\r\n                    //MessageBox.Show(valor.ToString());\r\n                    Process processes2 = Process.GetProcessById(valor);\r\n                    processes2.Kill();\r\n                    x--;\r\n                }\r\n            }\r\n            x = 2;\r\n\r\n\r\n        }\r\n        private void excel_close()\r\n        {\r\n\r\n            int ourPID = 0;\r\n            int tmpX = 0;\r\n            int indexRow = 1;\r\n            int indexCol = 1;\r\n            int[] existingPIDs;\r\n            existingPIDs = new int[100];\r\n\r\n            Process[] localByName = Process.GetProcessesByName(\u0022excel\u0022);\r\n            // user didnt have any excels open, kill excel\r\n            if (tmpX == 0)\r\n            {\r\n                foreach (Process proc in localByName)\r\n                {\r\n                    proc.Kill();\r\n                }\r\n            }\r\n            // user does have excel(s) already open, only kill our apps excel\r\n            else if (tmpX \u003E 0 \u0026\u0026 ourPID != 0)\r\n            {\r\n                foreach (Process proc in localByName)\r\n                {\r\n                    if (proc.Id == ourPID)\r\n                    {\r\n                        proc.Kill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        private void GerarCabecalho()\r\n        {\r\n\r\n            pasta = app.Workbooks.Open(\u0022label17.Text\u0022);\r\n            plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            plan.Cells[1, 1].Text = \u0022NAME\u0022;\r\n            plan.Cells[1, 2].Text = \u0022COMPANY\u0022;\r\n            plan.Cells[1, 3].Text = \u0022FUNCTION\u0022;\r\n            plan.Cells[1, 4].Text = \u0022ID\u0022;\r\n            plan.Cells[1, 5].Text = \u0022EMAIL:\u0022;\r\n            plan.Cells[1, 6].text = \u0022VESSEL\u0022;\r\n            plan.Cells[1, 7].Text = \u0022INITIAL\u0022;\r\n            plan.Cells[1, 8].Text = \u0022FINAL\u0022;\r\n            plan.Cells[1, 9].Text = \u0022INPUT\u0022;\r\n            plan.Cells[1, 10].Text = \u0022OUTPU\u0022;\r\n            pasta.Save();\r\n            pasta.Close();\r\n            app.Quit();\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n        }\r\n\r\n        int wi = 0;\r\n        // VideoCaptureDevice videoCaptureDevice;\r\n        private void button6_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        private void atualizar_file()\r\n        {\r\n\r\n            var file2 = new DirectoryInfo(@\u0022C:\\compartilhamento\\data_base\\\u0022).GetFiles().OrderBy(o =\u003E o.CreationTime).LastOrDefault();\r\n            label17.Text = file2.ToString();\r\n\r\n\r\n            //  if (label17.Text != label18.Text)\r\n            //  {\r\n            Microsoft.Office.Interop.Excel.Workbook xlWorkBook;\r\n            Microsoft.Office.Interop.Excel.Worksheet xlWorkSheet;\r\n            object misValue = System.Reflection.Missing.Value;\r\n\r\n            xlWorkBook = app.Workbooks.Add(misValue);\r\n            xlWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);\r\n\r\n            // xlWorkSheet = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            xlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\n            xlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\n            xlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\n            xlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n            xlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\n            xlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\n            xlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\n            xlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n            xlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\n            xlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\n            xlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\n            xlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\n            xlWorkSheet.Cells[1, 16] = \u0022NR-34\u0022;\r\n            xlWorkSheet.Cells[1, 17] = \u0022NR-10\u0022;\r\n            xlWorkSheet.Cells[1, 18] = \u0022NR-33\u0022;\r\n            xlWorkSheet.Cells[1, 19] = \u0022NR-35\u0022;\r\n            xlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\n            xlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\n            xlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\n            xlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\n            xlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n\r\n\r\n            // xlWorkSheet.Pictures.Add(1, 1, @\u0022E:\\work\\sample.jpg\u0022);\r\n            string mydate = DateTime.Today.ToString(\u0022yyyy/MM/dd\u0022);\r\n            label18.Text = mydate.Replace(\u0022/\u0022, \u0022_\u0022) \u002B \u0022.xls\u0022;\r\n\r\n            xlWorkBook.SaveAs(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text, Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);\r\n            xlWorkBook.Close(true, misValue, misValue);\r\n            app.Quit();\r\n\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n\r\n            MessageBox.Show(\u0022New date created\u0022);\r\n            System.Windows.Forms.Application.Restart();\r\n            //  }\r\n\r\n        }\r\n\r\n        private void inicialize_qrreader()\r\n        {\r\n            vid = 1;\r\n            richTextBox1.ReadOnly = true;\r\n            richTextBox2.ReadOnly = true;\r\n            richTextBox3.ReadOnly = true;\r\n            richTextBox4.ReadOnly = true;\r\n            //richTextBox5.ReadOnly = true;\r\n            richTextBox6.ReadOnly = true;\r\n            richTextBox7.ReadOnly = true;\r\n            richTextBox8.ReadOnly = true;\r\n            // button2.Enabled = false;\r\n\r\n            button1.Text = \u0022Read QRcode On\u0022;\r\n            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n            videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n            //   videoCaptureDevice.Start();\r\n            dateTimePicker1.Visible = false;\r\n            dateTimePicker2.Visible = false;\r\n\r\n\r\n\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n\r\n            richTextBox6.Visible = true;\r\n            richTextBox7.Visible = true;\r\n            if (timer4.Enabled == false)\r\n            {\r\n                // button2.Enabled = false;\r\n                timer4.Start();\r\n            }\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n        }\r\n\r\n        private static string GetFiles(string path)\r\n        {\r\n\r\n            var file = new DirectoryInfo(path).GetFiles().OrderByDescending(o =\u003E o.LastWriteTime).FirstOrDefault();\r\n            return file.Name;\r\n            // label18.Text =\r\n        }\r\n        private void ckecked_false()\r\n        {\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            // richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n            // richTextBox9.Text = \u0022\u0022;\r\n            richTextBox10.Text = \u0022\u0022;\r\n            richTextBox11.Text = \u0022\u0022;\r\n            richTextBox12.Text = \u0022\u0022;\r\n            richTextBox13.Text = \u0022\u0022;\r\n            richTextBox14.Text = \u0022\u0022;\r\n            richTextBox16.Text = \u0022\u0022;\r\n            button8.Visible = false;\r\n            button9.Visible = false;\r\n            button10.Visible = false;\r\n            maskedTextBox1.Text = \u0022 \u0022;\r\n            maskedTextBox2.Text = \u0022 \u0022;\r\n            maskedTextBox3.Text = \u0022 \u0022;\r\n            maskedTextBox4.Text = \u0022 \u0022;\r\n            maskedTextBox5.Text = \u0022 \u0022;\r\n            local1.Checked = false;\r\n            local2.Checked = false;\r\n            local3.Checked = false;\r\n            // local4.Checked = false;\r\n\r\n\r\n            //level_green.Checked = false;\r\n            // level_red.Checked = false;\r\n            //  level_yellow.Checked = false;\r\n\r\n        }\r\n        private void FinalFrame_NewFrame(object sender, NewFrameEventArgs eventArgs)\r\n        {\r\n            eventArgs.Frame.RotateFlip(RotateFlipType.RotateNoneFlipX);\r\n            pictureBox7.Image = (Bitmap)eventArgs.Frame.Clone();\r\n        }\r\n\r\n        int vid = 0;\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            if (comboBox1.Text != \u0022\u0022)\r\n            {\r\n\r\n                if (panel6.Visible == false)\r\n                {\r\n\r\n                    if (richTextBox3.Text != \u0022\u0022)\r\n                    {\r\n                        comboBox1.Items.Clear();\r\n                        StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                        string x = sr.ReadToEnd();\r\n                        string[] y = x.Split(\u0027\\n\u0027);\r\n                        foreach (string s in y)\r\n                        {\r\n                            comboBox1.Items.Add(s);\r\n                        }\r\n                        sr.Close();\r\n                    }\r\n                }\r\n\r\n                label54.Visible = false;\r\n                label44.Visible = false;\r\n                label45.Visible = false;\r\n                label46.Visible = false;\r\n                label47.Visible = false;\r\n                label48.Visible = false;\r\n                label49.Visible = false;\r\n                label50.Visible = false;\r\n\r\n\r\n                dataGridView1.Visible = false;\r\n                local1.Enabled = false;\r\n                local2.Enabled = false;\r\n                local4.Enabled = false;\r\n                plant = 0;\r\n\r\n                if (band == 0)\r\n                {\r\n                    button3.Text = Label_Show_data[0];\r\n                }\r\n                else\r\n                {\r\n                    button3.Text = Label_Show_data[1];\r\n                }\r\n\r\n                // button3.Text = \u0022Show DataBase\u0022;\r\n\r\n\r\n                button1.Enabled = true;\r\n\r\n\r\n                tempo = 0;\r\n                panel11.Visible = true;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                panel11.BackColor = Color.White;\r\n                label8.Visible = false;\r\n                maskedTextBox1.ReadOnly = true;\r\n                maskedTextBox2.ReadOnly = true;\r\n                maskedTextBox3.ReadOnly = true;\r\n                maskedTextBox4.ReadOnly = true;\r\n                maskedTextBox5.ReadOnly = true;\r\n                maskedTextBox1.Text = \u0022 \u0022;\r\n                maskedTextBox2.Text = \u0022 \u0022;\r\n                maskedTextBox3.Text = \u0022 \u0022;\r\n                maskedTextBox4.Text = \u0022 \u0022;\r\n                maskedTextBox5.Text = \u0022 \u0022;\r\n                vid = 1;\r\n\r\n\r\n                //  if (vid == 1)\r\n                // {\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                richTextBox1.ReadOnly = true;\r\n                richTextBox2.ReadOnly = true;\r\n                richTextBox3.ReadOnly = true;\r\n                richTextBox4.ReadOnly = true;\r\n                //richTextBox5.ReadOnly = true;\r\n                richTextBox6.ReadOnly = true;\r\n                richTextBox7.ReadOnly = true;\r\n                richTextBox8.ReadOnly = true;\r\n                //richTextBox9.ReadOnly = true;\r\n                richTextBox10.ReadOnly = true;\r\n                richTextBox11.ReadOnly = true;\r\n                richTextBox12.ReadOnly = true;\r\n                richTextBox13.ReadOnly = true;\r\n                richTextBox14.ReadOnly = true;\r\n                richTextBox16.ReadOnly = true;\r\n                // button2.Enabled = false;\r\n                if (band == 0)\r\n                {\r\n                    button1.Text = Label_Read_QRcode_On[0];\r\n                    label7.Text = button1.Text;\r\n                }\r\n                else\r\n                {\r\n                    button1.Text = Label_Read_QRcode_On[1];\r\n                    label7.Text = button1.Text;\r\n                }\r\n\r\n                panel10.Visible = false;\r\n\r\n                videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                //  pictureBox1.BackgroundImage = Properties.Resources.frame;\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                // richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox16.Text = \u0022\u0022;\r\n\r\n                richTextBox6.Visible = true;\r\n                richTextBox7.Visible = true;\r\n\r\n                ckecked_false();\r\n                //  if (timer4.Enabled == false)\r\n                //  {\r\n                //  button2.Enabled = false;\r\n                // timer4.Start();\r\n                //  }\r\n\r\n\r\n                //}\r\n\r\n                if (vid == 2)\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(_read);\r\n            }\r\n        }\r\n\r\n        private void ler_linha()\r\n        {\r\n            //   String locked = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n\r\n            //  timer8.Stop();\r\n\r\n            // textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n\r\n            try\r\n            {\r\n                if (textBox16.Text == \u0022\u0022) {\r\n\r\n                    if (comboBox2.Text.Trim() == \u0022ALL\u0022)\r\n                    {\r\n                        listBox1.Items.Clear();\r\n                        lista_ = 0;\r\n                        foreach (string linha22 in linhas22)\r\n                        {\r\n                            if (linha22.Contains(\u0022Vessel\u0022))\r\n                            {\r\n                                listBox1.Items.Add(linha22);\r\n                                lista_\u002B\u002B;\r\n                                label27.Text = lista_.ToString();\r\n                                label67.Text = lista_.ToString();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        if (lista_ == 0)\r\n                        {\r\n                            label27.Text = lista_.ToString();\r\n                            //label67.Text = label27.Text;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        listBox1.Items.Clear();\r\n                        lista_ = 0;\r\n                        foreach (string linha222 in linhas22)\r\n                        {\r\n\r\n                            if (linha222.Contains(comboBox2.Text.Trim()))\r\n                            {\r\n                                //  if (linha22.Contains(\u0022\\n\u0022))\r\n                                // {\r\n                                listBox1.Items.Add(linha222);\r\n                                lista_\u002B\u002B;\r\n                                label27.Text = lista_.ToString();\r\n                                label67.Text = lista_.ToString();\r\n                                // }\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        if (lista_ == 0)\r\n                        {\r\n                            label27.Text = lista_.ToString();\r\n                            label67.Text = lista_.ToString();\r\n                            //label67.Text = label27.Text;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n                string FileToRead = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n                TextReader Leitor = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);//Inicializa o Leitor\r\n                int Linhas = 0;\r\n\r\n                while (Leitor.Peek() != -1)\r\n                {//Enquanto o arquivo n\u00E3o acabar, o Peek n\u00E3o retorna -1 sendo adequando para o loop while...\r\n                    Linhas\u002B\u002B;//Incrementa 1 na contagem\r\n                    Leitor.ReadLine();//Avan\u00E7a uma linha no arquivo\r\n                }\r\n                Leitor.Close(); //Fecha o Leitor, dando acesso ao arquivo para outros programas....\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                string number = count.ToString().Trim();\r\n\r\n                //   MessageBox.Show(rich5);\r\n\r\n\r\n                //string criterio = comboBox1.Text.Trim();// id\r\n\r\n                // string[] linhas2 = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                //  foreach (string linha in linhas2)\r\n                //  {\r\n                // if (linha.Contains(criterio))\r\n                //  lbResultado.Items.Add(linha);\r\n                // label27.Text = Linhas.ToString();\r\n                //  }\r\n                label27.Text = Linhas.ToString();\r\n                //  label67.Text = label27.Text;\r\n\r\n                //  string number = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                label3.Text = number;\r\n                //  number2 = Int32.Parse(label3.Text);\r\n                // MessageBox.Show(\u0022linha ok\u0022);\r\n            }\r\n            catch\r\n            {\r\n                //   MessageBox.Show(\u0022n\u00E3o consegui acessar o caminho  \u0022 \u002B @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void wifi_level()\r\n        {\r\n            try\r\n            {\r\n                System.Diagnostics.Process p = new System.Diagnostics.Process();\r\n                ///  System.Diagnostics.h\r\n                p.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                p.StartInfo.CreateNoWindow = true;\r\n                p.StartInfo.FileName = \u0022netsh.exe\u0022;\r\n                p.StartInfo.Arguments = \u0022wlan show interfaces\u0022;\r\n                p.StartInfo.UseShellExecute = false;\r\n                p.StartInfo.RedirectStandardOutput = true;\r\n\r\n                p.Start();\r\n\r\n                string s = p.StandardOutput.ReadToEnd();\r\n                string s1 = s.Substring(s.IndexOf(\u0022Perfil\u0022));\r\n                s1 = s1.Substring(2, s1.IndexOf(\u0022:\u0022));\r\n                s1 = s1.Substring(2, s1.IndexOf(\u0022\\n\u0022)).Trim();\r\n\r\n                string s2 = s.Substring(s.IndexOf(\u0022Sinal\u0022));\r\n                s2 = s2.Substring(s2.IndexOf(\u0022:\u0022));\r\n                s2 = s2.Substring(2, s2.IndexOf(\u0022\\n\u0022)).Trim();\r\n                string s3 = s2.Replace(\u0022%\u0022, \u0022\u0022);\r\n\r\n                s4 = Int32.Parse(s3);\r\n                label20.Text = s3;\r\n\r\n                p.WaitForExit();\r\n\r\n                if (s4 \u003C= 10 || s4 == null)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level0_1;\r\n                }\r\n                if (s4 \u003C= 20)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level1_1;\r\n                }\r\n                if (s4 \u003C= 50)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level2_1;\r\n                }\r\n                if (s4 \u003E= 100)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level31;\r\n                }\r\n            }\r\n            catch (ArgumentException ex)\r\n            {\r\n\r\n                button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level0_1;\r\n            }\r\n\r\n        }\r\n        private void ler_linha_projeto()\r\n        {\r\n\r\n            // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n            string[] arquivo = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            // TextReader Leitor = new StreamReader(@\u0022C:\\data_txt\\ROJETO.txt\u0022, true);//Inicializa o Leitor\r\n\r\n\r\n            // comboBox1.Text = arquivo[0].ToString();\r\n            richTextBox9.Text = arquivo[1].ToString();\r\n            // Leitor.Close(); //Fecha o Leitor, dando acesso ao arquivo para outros programas....\r\n\r\n\r\n        }\r\n        private void ler_data_txt()\r\n        {\r\n            using (StreamReader sr = new StreamReader(\u0022data_time.txt\u0022))\r\n            {\r\n                string line;\r\n\r\n                while ((line = sr.ReadLine()) != null)\r\n                {\r\n                    z = line;\r\n                }\r\n            }\r\n        }\r\n        private void Form1_FormClosing(object sender, FormClosingEventArgs e)\r\n        {\r\n            client.Disconnect();\r\n        }\r\n        void client_MqttMsgPublishReceived(object sender, MqttMsgPublishEventArgs e)\r\n        {\r\n            string ReceivedMessage = Encoding.UTF8.GetString(e.Message);\r\n\r\n            // we need this construction because the receiving code in the library and the UI with textbox run on different threads\r\n            SetText(ReceivedMessage);\r\n\r\n        }\r\n        private void SetText(string text)\r\n        {\r\n            // we need this construction because the receiving code in the library and the UI with textbox run on different threads\r\n            if (this.RecText.InvokeRequired)\r\n            {\r\n                SetTextCallback d = new SetTextCallback(SetText);\r\n                this.Invoke(d, new object[] { text });\r\n            }\r\n            else\r\n            {\r\n                this.RecText.Text = text;\r\n            }\r\n        }\r\n        private void Form1_Load(object sender, EventArgs e)\r\n        {\r\n            checa_host_ = true;\r\n            if (!File.Exists(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                Create_DB();\r\n                if (hasDb == true)\r\n                {\r\n                    get_last();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                get_last();\r\n            }\r\n\r\n            ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n            startInfo2.RedirectStandardOutput = true;\r\n            startInfo2.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo2.CreateNoWindow = true;\r\n            startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo2);\r\n\r\n            //  client = new MqttClient(\u0022stellar-veterinary.cloudmqtt.com\u0022, 1883, false, null, null, MqttSslProtocols.TLSv1_2);\r\n\r\n            //  client.MqttMsgPublishReceived \u002B= client_MqttMsgPublishReceived;\r\n            //  clientId = Guid.NewGuid().ToString();\r\n            //  client.Connect(clientId, \u0022suport1\u0022, \u002212345\u0022);\r\n\r\n            //   client.Subscribe(new string[] { \u0022suport1\u0022 }, new byte[] { 0 });   // we need arrays as parameters because we can subscribe to different topics with one call\r\n            //   SetText(\u0022\u0022);\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n            IP_START.Text = x.Split(\u0027,\u0027)[0].Trim();\r\n            IP_STOP.Text = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            _ipstart = x.Split(\u0027,\u0027)[0].Trim();\r\n            _ipstop = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            //  MessageBox.Show(IP_START.Text);\r\n\r\n\r\n            label44.Visible = false;\r\n            label45.Visible = false;\r\n            label46.Visible = false;\r\n            label47.Visible = false;\r\n            label48.Visible = false;\r\n            label49.Visible = false;\r\n            label50.Visible = false;\r\n\r\n            passall = File.ReadAllText(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            //  rede = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n            // rede1 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(0);\r\n            // rede2 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(1);\r\n            // rede3 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(2);\r\n            // rede = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n\r\n\r\n\r\n            fproj = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            FileIOPermission f2 = new FileIOPermission(FileIOPermissionAccess.AllAccess, \u0022C:\\\\compartilhamento\\\\\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n            int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n            string number = count.ToString().Trim();//System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n            label3.Text = number;\r\n            number2 = Int32.Parse(label3.Text);\r\n            //string constr = String.Format(@\u0022Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\u0022\u0022Excel 8.0;HDR=YES;IMEX=1;\u0022\u0022\u0022, \u0022C:\\\\data_base\\\\\u0022 \u002B label18.Text);\r\n            try\r\n            {\r\n                wifi_level();\r\n\r\n\r\n                textBox6.Select();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            ler_linha_projeto();\r\n            ler_linha();\r\n            ler_data_txt();\r\n            filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);\r\n            foreach (FilterInfo Device in filterInfoCollection)\r\n                cboCamera.Items.Add(Device.Name);\r\n            cboCamera.SelectedIndex = 0;\r\n            videoCaptureDevice = new VideoCaptureDevice();\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n            lcompany.Text = nome;\r\n            lname.Text = emp;\r\n            lfunc.Text = function;\r\n            lid.Text = id;\r\n            lvessel.Text = vessel;\r\n            lcheckin.Text = Label_initial[1];\r\n            lcheckout.Text = Label_final[1];\r\n            // button7.Visible = false;\r\n\r\n            dateTimePicker1.Visible = true;\r\n            dateTimePicker2.Visible = true;\r\n            // textBox2.Text = dateTimePicker1.Value.ToString();\r\n            richTextBox6.Visible = false;\r\n            richTextBox7.Visible = false;\r\n            filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);\r\n            foreach (FilterInfo Device in filterInfoCollection)\r\n                cboCamera.Items.Add(Device.Name);\r\n            cboCamera.SelectedIndex = 0;\r\n            videoCaptureDevice = new VideoCaptureDevice();\r\n\r\n\r\n\r\n            label18.Text = GetFiles(@\u0022C:\\compartilhamento\\data_base\u0022);\r\n\r\n            inicialize_qrreader();\r\n\r\n            lname.Text = label_nome[0];\r\n            lcompany.Text = label_emp[0];\r\n            lfunc.Text = label_Function[0];\r\n            lid.Text = label_Id[0];\r\n            lvessel.Text = label_vessel[0];\r\n            lproject.Text = label_porj[0];\r\n            lv1.Text = label_vaccine1[0];\r\n            lv2.Text = label_vaccine2[0];\r\n            lbustter.Text = label_reforco[0];\r\n            local1.Text = place1[0];\r\n            local2.Text = place2[0];\r\n            local3.Text = place3[0];\r\n            local4.Text = place4[0];\r\n            laccess.Text = label_acc[0];\r\n            level_yellow.Text = label_yellow[0];\r\n            level_green.Text = label_green[0];\r\n            level_red.Text = label_red[0];\r\n            lcheckin.Text = Label_initial[0];\r\n            lcheckout.Text = Label_final[0];\r\n            button1.Text = Label_Read_QRcode_On[0];\r\n            button28.Text = Label_Read_QRcode_Off[0];\r\n            button2.Text = Label_Create_QRcode[0];\r\n            button3.Text = Label_Show_data[0];\r\n            button4.Text = Label_Save_data[0];\r\n            // button5.Text = Label_Config[0];\r\n            button6.Text = Label_wifi[0];\r\n            button17.Text = Label_email[0];\r\n            button19.Text = Label_Mostrar_checkin[0];\r\n            button21.Text = Label_reset[0];\r\n            button22.Text = Label_fechar[0];\r\n            button8.Text = Label_entrada[0];\r\n            button9.Text = Label_saida[0];\r\n            button10.Text = Label_cancel[0];\r\n            label23.Text = label_onboard[0];\r\n            button27.Text = Label_reset_project[0];\r\n            button29.Text = label_reg[0];\r\n            label7.Text = button1.Text;\r\n            label6.Text = onboard[0];\r\n            label_cad.Text = label_cad1[0];\r\n\r\n            label53.Text = Label_53[0];\r\n            button41.Text = bt_41[0];\r\n            button42.Text = bt_42[0];\r\n            button43.Text = bt_43[0];\r\n            button44.Text = bt_44[0];\r\n            button45.Text = bt_45[0];\r\n            regs.Text = bt_regis[0];\r\n            _cad = cad_mode[0];\r\n            _read = read_mode[0];\r\n\r\n            /*\r\n             Label_reset\r\n                        String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                        String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                        String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                        String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                        String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                        String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n            */\r\n            panel11.Size = new Size(460, 455);\r\n            //  panel11.Location = new System.Drawing.Point(95, 150);\r\n            pictureBox7.Size = new Size(430, 420);\r\n            pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n            ip = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\IP.txt\u0022);\r\n            ip1 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(0);\r\n            ip2 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(1);\r\n            ip3 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(2);\r\n\r\n            textBox7.Focus();\r\n            textBox7.Text = \u0022\u0022;\r\n\r\n            GetBiosInformation();\r\n            // CloseExcel();\r\n            // myThread.Abort();\r\n            //  checa_host();\r\n            // atualiza_compartilhamento();\r\n            comp = 1;\r\n\r\n\r\n            try\r\n            {\r\n                // open file dialog\r\n                OpenFileDialog open = new OpenFileDialog();\r\n                // image filters\r\n                //  open.Filter = \u0022Image Files(*.jpg; *.jpeg; *.gif; *.bmp)|*.jpg; *.jpeg; *.gif; *.bmp\u0022;\r\n                String foto = @\u0022C:\\compartilhamento\\logo_criptoqrcode\\logo.png\u0022;\r\n                //  if (open.ShowDialog() == DialogResult.OK)\r\n                // {\r\n                // display image in picture box\r\n                pictureBox2.Image = new Bitmap(foto);\r\n                // image file path\r\n                // textBox1.Text = open.FileName;\r\n                // }\r\n                StreamReader sr2 = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                string x2 = sr2.ReadToEnd();\r\n                string[] y = x2.Split(\u0027\\n\u0027);\r\n                foreach (string s in y)\r\n                {\r\n                    comboBox1.Items.Add(s);\r\n                    comboBox2.Items.Add(s);\r\n                }\r\n                sr.Close();\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022O arquivo com a logo deve estar no formato PNG. Corriga o formato e inicie o programa novamente\u0022);\r\n                // throw new ApplicationException(\u0022Image loading error....\u0022);\r\n            }\r\n\r\n\r\n            int milliseconds = 5000;\r\n            Thread.Sleep(milliseconds);\r\n\r\n            MyhostName = System.Net.Dns.GetHostName();\r\n            string hostName = System.Net.Dns.GetHostName();\r\n            string myIP = Dns.GetHostByName(hostName).AddressList[0].ToString();\r\n            label66.Text = \u0022IP: \u0022 \u002B myIP;\r\n            timer10.Enabled = true;\r\n        }\r\n\r\n\r\n        Thread myThread = null;\r\n        int plant = 0;\r\n\r\n\r\n        public void checa_host()\r\n        {\r\n            if (checa_host_ == true)\r\n            {\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n\r\n                if (IP_START.Text == string.Empty)\r\n                {\r\n                    //MessageBox.Show(\u0022No IP address entered.\u0022, \u0022Error\u0022, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n                    // lblStatus.ForeColor = System.Drawing.Color.Red;\r\n                    // lblStatus.Text = \u0022No IP address entered.\u0022;\r\n                }\r\n                else\r\n                {\r\n\r\n                    //Create new thread for pinging\r\n                    //myThread = new Thread(() =\u003E scan(txtIP.Text));\r\n                    myThread = new Thread(() =\u003E scan2(IP_START.Text, IP_STOP.Text));\r\n                    myThread.Start();\r\n\r\n                    if (myThread.IsAlive == true)\r\n                    {\r\n                        // cmdStop.Enabled = true;\r\n                        //  cmdScan.Enabled = false;\r\n                        // txtIP.Enabled = false;\r\n                        // txtIP2.Enabled = false;\r\n                        //  MessageBox.Show(\u0022checa_host ok\u0022);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        static void SetDoubleBuffer(System.Windows.Forms.Control dgv, bool DoubleBuffered)\r\n        {\r\n            typeof(System.Windows.Forms.Control).InvokeMember(\u0022DoubleBuffered\u0022,\r\n                BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.SetProperty,\r\n                null, null, new object[] { DoubleBuffered });\r\n        }\r\n        private async void button3_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            try\r\n            {\r\n                String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n\r\n\r\n\r\n                /// criar_excel();\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                plant\u002B\u002B;\r\n                if (plant == 1)\r\n                {\r\n                    //  criar_excel();\r\n                    //if (libera == true)\r\n                    // {\r\n                    button34.Visible = true;\r\n                    // }\r\n                    // else\r\n                    // {\r\n                    //  button34.Visible = false;\r\n                    // }\r\n\r\n                    if (band == 0)\r\n                    {\r\n                        button3.Text = Label_close_data[0];\r\n                    }\r\n                    else\r\n                    {\r\n                        button3.Text = Label_close_data[1];\r\n                    }\r\n                    //  button3.Text = \u0022Close DataBase\u0022;\r\n                    //  button1.Enabled = false;\r\n                    //button2.Enabled = false;\r\n                    /*\r\n                    String name = \u0022Planilha1\u0022;\r\n\r\n\r\n\r\n                    string constr = String.Format(@\u0022Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\u0022\u0022Excel 8.0;HDR=YES;IMEX=1;\u0022\u0022\u0022, \u0022C:\\\\compartilhamento\\\\data_base\\\\\u0022 \u002B label18.Text);\r\n\r\n                    OleDbConnection con = new OleDbConnection(constr);\r\n                    OleDbCommand oconn = new OleDbCommand(\u0022Select * From [\u0022 \u002B name \u002B \u0022$]\u0022, con);\r\n                    con.Open();\r\n\r\n                    OleDbDataAdapter sda = new OleDbDataAdapter(oconn);\r\n                    System.Data.DataTable data = new System.Data.DataTable();\r\n                    sda.Fill(data);\r\n                    con.Close();\r\n\r\n                    */\r\n\r\n                    //  dataGridView1.FilterAndSortEnabled = true;\r\n                    // bindingSource1.DataSource = data;\r\n                    panel5.Visible = false;\r\n                    DisplayPresetData();\r\n\r\n                }\r\n                else\r\n                {\r\n                    dataGridView1.Visible = false;\r\n                    dataGridView1.Visible = false;\r\n                    button34.Visible = false;\r\n                    panel5.Visible = true;\r\n\r\n                    plant = 0;\r\n\r\n                    if (band == 0)\r\n                    {\r\n                        button3.Text = Label_Show_data[0];\r\n                    }\r\n                    else\r\n                    {\r\n                        button3.Text = Label_Show_data[1];\r\n                    }\r\n\r\n\r\n\r\n\r\n                    button1.Enabled = true;\r\n\r\n\r\n                    dataGridView1.DataSource = null;\r\n                    dataGridView1.CleanFilter();\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022data base corrompida ou n\u00E3o encontrada. feche a planilha se estiver aberta e inicie o programa novamente!\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void acha_palavra_txt()\r\n        {\r\n            if (l == 0)\r\n            {\r\n\r\n                lbResultado.Items.Clear();\r\n                Refresh();\r\n\r\n                string criterio = richTextBox4.Text;// id\r\n\r\n                string[] linhas = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                foreach (string linha in linhas)\r\n                {\r\n                    if (linha.Contains(criterio))\r\n                        lbResultado.Items.Add(linha);\r\n                }\r\n\r\n\r\n\r\n                if (lbResultado.Items.Count == 1)\r\n                {\r\n                    button8.Enabled = false;\r\n                    button9.Enabled = true;\r\n\r\n                }\r\n                if (lbResultado.Items.Count == 0)\r\n                {\r\n                    button8.Enabled = true;\r\n                    button9.Enabled = false;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        private void timer1_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            BarcodeReader Reader = new BarcodeReader();\r\n            Result result = Reader.Decode((Bitmap)pictureBox1.Image);\r\n            if (result != null)\r\n            {\r\n\r\n                try\r\n                {\r\n\r\n\r\n                    // timer2.Enabled = false;\r\n\r\n\r\n\r\n\r\n\r\n                    txtResult.Text = result.ToString();\r\n\r\n                    if (txtResult.Text.Length \u003E 10)\r\n                    {\r\n\r\n\r\n                        string text1 = txtResult.Lines[0];\r\n                        string mystring = text1.Remove(0, 6);\r\n                        richTextBox1.Text = mystring;\r\n\r\n                        string text2 = txtResult.Lines[1];\r\n                        mystring = text2.Remove(0, 9);\r\n                        richTextBox2.Text = mystring;\r\n\r\n                        string text3 = txtResult.Lines[2];\r\n                        mystring = text3.Remove(0, 10);\r\n                        richTextBox3.Text = mystring;\r\n\r\n                        string text4 = txtResult.Lines[3];\r\n                        mystring = text4.Remove(0, 4);\r\n                        richTextBox4.Text = mystring;\r\n\r\n                        string text5 = txtResult.Lines[4];\r\n                        mystring = text5.Remove(0, 8);\r\n                        comboBox1.Text = mystring;\r\n\r\n                        string text8 = txtResult.Lines[5];\r\n                        mystring = text8.Remove(0, 1);\r\n                        richTextBox8.Text = mystring;\r\n\r\n                        string text6 = txtResult.Lines[6];\r\n                        mystring = text6.Remove(0, 9);\r\n                        richTextBox6.Text = mystring;\r\n\r\n                        string text7 = txtResult.Lines[7];\r\n                        mystring = text7.Remove(0, 7);\r\n                        richTextBox7.Text = mystring;\r\n\r\n                        videoCaptureDevice.Stop();\r\n                        //  pictureBox1.BackgroundImage= Image.\r\n                        pictureBox7.BackgroundImage = Properties.Resources.barcode1;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        compare_data();\r\n\r\n                        acha_palavra_txt();\r\n\r\n                        timer1.Stop();\r\n\r\n\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n        }\r\n        int input_ok = 0;\r\n        private void zera()\r\n        {\r\n            if (input_ok == 0)\r\n            {\r\n                videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                videoCaptureDevice.Start();\r\n                timer1.Start();\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                button8.Visible = false;\r\n                button9.Visible = false;\r\n                button10.Visible = false;\r\n            }\r\n        }\r\n        private void cancelar()\r\n        {\r\n            // panel11.Visible = false;\r\n            // panel4.Visible = true;\r\n\r\n            /// maskedTextBox1.Text = \u0022 \u0022;\r\n            /// maskedTextBox2.Text = \u0022 \u0022;\r\n            ///maskedTextBox3.Text = \u0022 \u0022;\r\n            ///maskedTextBox4.Text = \u0022 \u0022;\r\n            ///maskedTextBox5.Text = \u0022 \u0022;\r\n\r\n            panel11.Visible = true;\r\n            pictureBox7.Image = Properties.Resources.barcode1;\r\n            panel11.BackColor = Color.White;\r\n            label8.Visible = false;\r\n            //pictureBox1.Image = Properties.Resources.frame;\r\n            input_ok = 0;\r\n\r\n            //  pictureBox1.Image = null;\r\n            /// pictureBox1.Image = Modern_Qr_code.Properties.Resources.\r\n\r\n            // panel4.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(51)))), ((int)(((byte)(51)))), ((int)(((byte)(76)))));\r\n            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n            //videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n            //videoCaptureDevice.Start();\r\n            // timer1.Start();\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n            // richTextBox9.Text = \u0022\u0022;\r\n            richTextBox10.Text = \u0022\u0022;\r\n            richTextBox11.Text = \u0022\u0022;\r\n            richTextBox12.Text = \u0022\u0022;\r\n            richTextBox13.Text = \u0022\u0022;\r\n            richTextBox14.Text = \u0022\u0022;\r\n            richTextBox16.Text = \u0022\u0022;\r\n            button8.Visible = false;\r\n            button9.Visible = false;\r\n            button10.Visible = false;\r\n            pictureBox1.Image = criptoqrcode.Properties.Resources.barcode1;\r\n        }\r\n        private void timer2_Tick(object sender, EventArgs e)\r\n        {\r\n            cancelar();\r\n            ckecked_false();\r\n            timer2.Stop();\r\n        }\r\n        int lista_ = 0;\r\n        private void mostra_conteudo_txt()\r\n        {\r\n            listBox1.Items.Clear();\r\n            lista_ = 0;\r\n\r\n            if (checkBox1.Checked == true)\r\n            {\r\n                panel6.Size = new Size(1695, 996); //1695; 996\r\n                panel6.Visible = true;\r\n                string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox1.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                        //  label67.Text = label27.Text;\r\n\r\n\r\n                    }\r\n                }\r\n                //  ler_linha();\r\n            }\r\n            else\r\n            {\r\n\r\n                if (new FileInfo(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Length \u003E= 0)\r\n                {\r\n\r\n                    panel6.Size = new Size(1695, 996);\r\n                    panel6.Visible = true;\r\n                    string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                    foreach (string s in Regex.Split(text, \u0022\\n\u0022))\r\n                    {\r\n\r\n                        listBox1.Items.Add(s);\r\n\r\n\r\n\r\n                    }\r\n\r\n                    //  ler_linha();\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        private void beep()\r\n        {\r\n\r\n            int frequency = 800;\r\n\r\n            // Set the Duration\r\n            int duration = 250;\r\n\r\n            // Play beep sound once\r\n            Console.Beep(frequency, duration);\r\n        }\r\n        private void timer3_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            try\r\n            {\r\n                string caminhoArquivo = @\u0022C:\\compartilhamento\\data_txt\\data4.txt\u0022;\r\n                string primeiraLinha = File.ReadLines(caminhoArquivo).First().Trim();\r\n                if (primeiraLinha == \u00221\u0022)\r\n                {\r\n                    //  panel12.BackColor = Color.GreenYellow;\r\n\r\n\r\n                    //ler_linha();\r\n                    Console.WriteLine($\u0022A primeira linha do arquivo \u00E9: {primeiraLinha}\u0022);\r\n\r\n                    using (StreamWriter sw = new StreamWriter(caminhoArquivo))\r\n                    {\r\n                        sw.WriteLine(\u00220\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                    }\r\n                }\r\n            }\r\n\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n\r\n\r\n            if (online == true)\r\n            {\r\n                wifi_level();\r\n            }\r\n\r\n            string datetime = DateTime.Now.ToString();\r\n            label19.Text = DateTime.Now.ToString();\r\n            label62.Text = DateTime.Now.ToString();\r\n            DateTime now = DateTime.Now;\r\n            int h = now.Hour;\r\n            int m = now.Minute;\r\n            int s = now.Second;\r\n\r\n            label22.Text = h \u002B \u0022:\u0022 \u002B m \u002B \u0022:\u0022 \u002B s.ToString().Trim();\r\n            //label22.Text = \u002211:27:00\u0022;\r\n\r\n            if (label22.Text == z)\r\n            {\r\n                //\r\n                //\r\n                //\r\n                //\r\n                // ();\r\n                //listBox1.Text = varPalavra;\r\n                mostra_conteudo_txt();\r\n                beep();\r\n                beep();\r\n                beep();\r\n                beep();\r\n                beep();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        private void escrever_palavra()\r\n\r\n        {\r\n            string nomeArquivo = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n\r\n\r\n            // Name: Henrique Kaique Costa Compay: Local 9  E - Mail: cristiano.engenharia.ac @gmail.com ID: 111099444\r\n            string textoInserir = \u0022Number: \u0022 \u002B richTextBox16.Text \u002B \u0022:  Name: \u0022 \u002B richTextBox2.Text \u002B \u0022:  Vessel: \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022:  Compay: \u0022 \u002B richTextBox1.Text \u002B \u0022  Id: \u0022 \u002B richTextBox4.Text \u002B \u0022  :E-Mail: \u0022 \u002B richTextBox8.Text \u002B \u0022 :  \u0022 \u002B DateTime.Now;//\r\n            int numeroLinha = Convert.ToInt32(Linhas);\r\n            ArrayList linhas = new ArrayList();\r\n\r\n            if (File.Exists(nomeArquivo))\r\n            {\r\n                try\r\n                {\r\n                    rdr = new StreamReader(nomeArquivo);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022O arquivo : \u0022 \u002B nomeArquivo \u002B \u0022 n\u00E3o existe...\u0022);\r\n                return;\r\n            }\r\n\r\n            string linha;\r\n\r\n            while ((linha = rdr.ReadLine()) != null)\r\n            {\r\n                try\r\n                {\r\n                    linhas.Add(linha);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            rdr.Close();\r\n\r\n            if (linhas.Count \u003E numeroLinha)\r\n                linhas.Insert(numeroLinha, textoInserir);\r\n            else\r\n                linhas.Add(textoInserir);\r\n\r\n            StreamWriter wrtr = new StreamWriter(nomeArquivo);\r\n\r\n            foreach (string strNewLine in linhas)\r\n            {\r\n                wrtr.WriteLine(strNewLine);\r\n            }\r\n            wrtr.Close();\r\n            textoInserir = \u0022\u0022;\r\n            // txtArquivo.Text = AbreArquivoTexto(nomeArquivo);\r\n\r\n        }\r\n\r\n        string ll;\r\n        private void apaga_palavra_txt()\r\n        {\r\n            if (l == 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n                string tempFile = Path.GetTempFileName();\r\n\r\n                using (var sr = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022))\r\n                {\r\n                    using (var sw = new StreamWriter(tempFile))\r\n                    {\r\n                        string line;\r\n\r\n                        while ((line = sr.ReadLine()) != null)\r\n                        {\r\n\r\n                            //Name: Rodrigo  Compay: Googlemarine  Id: 111222333\r\n\r\n                            ll = RemoveEnd(line, 23);\r\n                            //  MessageBox.Show(ll);\r\n\r\n                            // Number: 10  Name: Cristiano de Araujo Calheiros  Compay: Googlemarine Id: 111098414  :E - Mail: cristiano.engenharia.ac @gmail.com\r\n                            if (ll != \u0022Number: \u0022 \u002B richTextBox16.Text \u002B \u0022:  Name: \u0022 \u002B richTextBox2.Text \u002B \u0022:  Vessel: \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022:  Compay: \u0022 \u002B richTextBox1.Text \u002B \u0022  Id: \u0022 \u002B richTextBox4.Text \u002B \u0022  :E-Mail: \u0022 \u002B richTextBox8.Text)\r\n                                sw.WriteLine(line);\r\n                        }\r\n                    }\r\n                }\r\n                File.Copy(tempFile, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n\r\n                // File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                // File.Move(tempFile, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n        }\r\n\r\n        private void in_out_alt()\r\n        {\r\n            checa_host_ = false;\r\n            timer9.Enabled = false;\r\n            lbResultado.Items.Clear();\r\n            Refresh();\r\n            string criterio = richTextBox4.Text;// id\r\n            string[] linhas = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n            foreach (string linha in linhas)\r\n            {\r\n                if (linha.Contains(criterio))\r\n                    lbResultado.Items.Add(linha);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            if (lbResultado.Items.Count == 1)\r\n            {\r\n\r\n                // MessageBox.Show(\u0022existe\u0022);\r\n                try\r\n                {\r\n\r\n                    comp = 0;\r\n                    //   ler_linha();\r\n                    // \r\n                    //timer8.Stop();\r\n                    pictureBox7.Image = Properties.Resources.barcode1;\r\n                    panel11.BackColor = Color.White;\r\n                    label8.Visible = false;\r\n\r\n\r\n\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                    listBox1.Items.Clear();\r\n                    input_ok = 0;\r\n                    output_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                    output_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n                    input_data = \u0022*\u0022;\r\n                    input_hora = \u0022*\u0022;\r\n                    apaga_palavra_txt();\r\n\r\n                    panel4.BackColor = Color.White;\r\n                    videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                    videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                    // videoCaptureDevice.Start();\r\n                    // timer1.Start();\r\n                    pictureBox7.Image = Properties.Resources.barcode1;\r\n                    //  CarregarPlanilha();\r\n                    //   carrega_planilha_txt();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = false;\r\n                    //  checa_host();\r\n                    // atualiza_compartilhamento();\r\n                    // ler_linha();\r\n                    // ckecked_false();\r\n                    carrega_planilha2_txt();\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(ex.Message);\r\n                }\r\n                comp = 1;\r\n            }\r\n            if (lbResultado.Items.Count == 0)\r\n            {\r\n                // MessageBox.Show(\u0022n\u00E3o existe\u0022);\r\n                try\r\n                {\r\n                    if (checado == 1)\r\n                    {\r\n                        comp = 0;\r\n                        // ler_linha();\r\n                        // ckecked_false();\r\n                        // timer8.Stop();\r\n\r\n                        pictureBox7.Image = Properties.Resources.barcode1;\r\n                        panel11.BackColor = Color.White;\r\n                        label8.Visible = false;\r\n\r\n\r\n\r\n\r\n                        if (textBox7.SelectionLength \u003E= 0)\r\n                        {\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022\u0022;\r\n                        }\r\n\r\n                        input_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                        pictureBox7.Image = Properties.Resources.barcode1;\r\n                        input_ok = 0;\r\n\r\n                        input_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n                        output_data = \u0022*\u0022;\r\n                        output_hora = \u0022*\u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                        videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n\r\n                        acha_palavra_txt();\r\n                        escrever_palavra();\r\n\r\n\r\n\r\n\r\n                        button8.Visible = false;\r\n                        button9.Visible = false;\r\n                        button10.Visible = false;\r\n\r\n                        ler_linha();\r\n                        //  ckecked_false();\r\n                        // CarregarPlanilha();\r\n                        carrega_planilha2_txt();\r\n                        // checa_host();\r\n                        //atualiza_compartilhamento();\r\n                        comp = 1;\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022PLease check local or level\u0022);\r\n                    }\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(ex.Message);\r\n                }\r\n\r\n                checa_host_ = true;\r\n            }\r\n\r\n            /////////////////////////////////////////// in/////////////////////////////////////////\r\n\r\n            ///////////////////////////////////////////////////////\r\n            ///\r\n            /// \r\n            /// \r\n            /////////////////////////////out///////////////////////\r\n\r\n            ////////////////////////////////////////////////////////////////\r\n            timer9.Enabled = true;\r\n        }\r\n        private void compare_data()\r\n        {\r\n\r\n            if (id_onboard2 == true)\r\n            {\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n                var parameterDate_ASo = DateTime.ParseExact(richTextBox10.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var parameterDate_initial = DateTime.ParseExact(richTextBox6.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var parameterDate_final = DateTime.ParseExact(richTextBox7.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var todaysDate = DateTime.Today;\r\n\r\n\r\n\r\n                if (rich5 != comboBox1.Text.Trim() || rich9 != richTextBox9.Text.Trim())\r\n                {\r\n                    //  richTextBox5.Text = text10[7].Remove(0, 8);\r\n                    //  richTextBox9.Text = text10[8].Remove(0, 0);\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    // label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Embarca\u00E7\u00E3o \u0022 \u002B rich5 \u002B \u0022 ou Projeto divergente\u0022;\r\n                    try\r\n                    {\r\n\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n\r\n\r\n\r\n\r\n                    timer2.Start();\r\n                    //  DateTime now = DateTime.Now;\r\n                    //  while (DateTime.Now.Subtract(now).Seconds \u003C 3)\r\n                    // {\r\n                    // wait for 60 seconds.\r\n                    //  }\r\n                    // cancelar_teste();\r\n                    //  Thread.Sleep(3000);\r\n                }\r\n\r\n\r\n\r\n                if (company_loc == true)\r\n                {\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022BLOQUEADO: CART\u00C3O INUTILIZADO !\u0022;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n\r\n\r\n                    timer2.Start();\r\n                }\r\n\r\n                if (bb == \u0022Bloqueado\u0022)\r\n                {\r\n                    // pictureBox7.Image \r\n                    //pictureBox7.Image \r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    //label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    button7.Visible = false;\r\n                    btloc.Visible = true;\r\n                    label8.Text = \u0022BLOQUEADO : \u0022 \u002B label37.Text;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n                    DateTime now = DateTime.Now;\r\n                    while (DateTime.Now.Subtract(now).Seconds \u003C 5)\r\n                    {\r\n                        // wait for 60 seconds.\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n                if (parameterDate_initial \u003E parameterDate_ASo)\r\n                {\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    //label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Aso vencido\u0022;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                if ((parameterDate_initial \u003C todaysDate) \u0026\u0026 (parameterDate_final \u003C todaysDate))\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n                if ((parameterDate_initial \u003E todaysDate) \u0026\u0026 (parameterDate_final \u003E todaysDate))\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n                if (parameterDate_initial \u003E parameterDate_final)\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n                if (parameterDate_final == todaysDate \u0026\u0026 parameterDate_initial \u003C parameterDate_ASo)\r\n                {\r\n\r\n\r\n\r\n\r\n\r\n                    if (rich5 == comboBox1.Text.Trim() \u0026\u0026 rich9 == richTextBox9.Text.Trim() \u0026\u0026 company_loc == false \u0026\u0026 bb != \u0022Bloqueado\u0022)\r\n                    {\r\n\r\n                        entrou = true;\r\n                        label8.Visible = true;\r\n                        label8.Text = \u0022Liberado\u0022;\r\n                        input_ok = 1;\r\n                        panel11.BackColor = Color.GreenYellow;\r\n                        beep();\r\n\r\n                        // bool lido = true;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n                        button7.Visible = true;\r\n                        btloc.Visible = false;\r\n                        try\r\n                        {\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                            button7.Visible = true;\r\n\r\n                        }\r\n                        catch\r\n                        {\r\n                            button7.Visible = true;\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                        }\r\n                        if (panel11.BackColor == Color.GreenYellow)\r\n                        {\r\n                            // MessageBox.Show(\u00221\u0022);\r\n                            in_out_alt();\r\n                            //panel11.BackColor =Color.White;\r\n                        }\r\n\r\n                        rich9 = \u0022\u0022;\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if ((parameterDate_final \u003E todaysDate) \u0026\u0026 (parameterDate_initial \u003C= todaysDate) \u0026\u0026 (parameterDate_initial \u003C parameterDate_ASo))\r\n                {\r\n\r\n                    if ((rich5 == comboBox1.Text.Trim()) \u0026\u0026 (rich9 == richTextBox9.Text.Trim()) \u0026\u0026 company_loc == false \u0026\u0026 bb != \u0022Bloqueado\u0022)\r\n                    {\r\n\r\n                        entrou = true;\r\n                        label8.Visible = true;\r\n                        label8.Text = \u0022Liberado\u0022;\r\n                        input_ok = 1;\r\n                        panel11.BackColor = Color.GreenYellow;\r\n                        beep();\r\n                        //  bool lido = true;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n                        button7.Visible = true;\r\n                        btloc.Visible = false;\r\n                        input_ok = 1;\r\n                        try\r\n                        {\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n                            button7.Visible = true;\r\n                        }\r\n                        catch\r\n                        {\r\n                            pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                            button7.Visible = true;\r\n                        }\r\n                        if (panel11.BackColor == Color.GreenYellow)\r\n                        {\r\n                            //  MessageBox.Show(\u00222\u0022);\r\n                            in_out_alt();\r\n                            // panel11.BackColor = Color.White;\r\n                        }\r\n\r\n                        rich9 = \u0022\u0022;\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        private void alterado()\r\n        {\r\n            //  richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n            // richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n            try\r\n            {\r\n                int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n                string sec = secondLine2.Split(\u0027:\u0027)[26].Trim();\r\n                string pass11 = secondLine2.Split(\u0027:\u0027)[5].Trim();\r\n                string pass12 = secondLine2.Split(\u0027:\u0027)[9].Trim();\r\n                string pass13 = secondLine2.Split(\u0027:\u0027)[3].Trim();\r\n                string pass14 = secondLine2.Split(\u0027:\u0027)[11].Trim();\r\n                string pass15 = secondLine2.Split(\u0027:\u0027)[17].Trim();\r\n                string pass16 = secondLine2.Split(\u0027:\u0027)[19].Trim(); // NR34\r\n                string pass17 = secondLine2.Split(\u0027:\u0027)[21].Trim(); // VA1\r\n                string pass18 = secondLine2.Split(\u0027:\u0027)[23].Trim(); // V2                                                                                                                                                                   //17\r\n                string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n                string pass20 = secondLine2.Split(\u0027:\u0027)[31].Trim();// V BOOSTER\r\n                string pass21 = secondLine2.Split(\u0027:\u0027)[32].Trim();// V BOOSTER\r\n                string pass22 = secondLine2.Split(\u0027:\u0027)[33].Trim();// V BOOSTER\r\n                                                                  //  0   1      2                       3        4              5         6              7  8           9         10                                  11      12             13        14      15    16           17     18           19          20            21          22           23               24            25 26     27   \r\n                                                                  //Number : 1 : Name : CRISTIANO CALHEIROS 3 : Compay : GOOGLEMARINE :Funcition:  ENGENHEIRO  :Id: 1110988400 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Googlemarine : Project : 2001 : ASO : 02/02/2024 : NR-34 : 02/02/2025 : Vaccine-1 : 02/02/2026 : Vaccine-2 : 02/02/2027 : Booster vaccine : 02/02/2028 :  : COMUM :\r\n                if (pass11.Trim() != richTextBox1.Text.Trim())  //COMPANY\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n\r\n\r\n                if (pass12.Trim() != richTextBox4.Text.Trim())  // IDENTIDADE\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass13.Trim() != richTextBox2.Text.Trim()) // NOME\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass14.Trim() != richTextBox8.Text.Trim()) // email\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass15.Trim() != maskedTextBox1.Text.Trim()) // aso\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass16.Trim() != maskedTextBox2.Text.Trim()) // nr34\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass17.Trim() != maskedTextBox3.Text.Trim()) // vacina 1\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass18.Trim() != maskedTextBox4.Text.Trim()) // vacina 2\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass19.Trim() != maskedTextBox5.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass20.Trim() != richTextBox6.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass21.Trim() != richTextBox7.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass22.Trim() != richTextBox15.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass11.Trim() == richTextBox1.Text.Trim() \u0026\u0026 pass12.Trim() == richTextBox4.Text.Trim() \u0026\u0026 pass13.Trim() == richTextBox2.Text.Trim())\r\n                {\r\n                    if (pass14.Trim() == richTextBox8.Text.Trim() \u0026\u0026 pass15.Trim() == maskedTextBox1.Text.Trim() \u0026\u0026 pass16.Trim() == maskedTextBox2.Text.Trim())\r\n                    {\r\n                        if (pass17.Trim() == maskedTextBox3.Text.Trim() \u0026\u0026 pass18.Trim() == maskedTextBox4.Text.Trim() \u0026\u0026 pass19.Trim() == maskedTextBox5.Text.Trim() \u0026\u0026 pass20.Trim() == richTextBox6.Text.Trim() \u0026\u0026 pass21.Trim() == richTextBox7.Text.Trim() \u0026\u0026 pass21.Trim() == richTextBox15.Text.Trim())\r\n                        {\r\n                            alter = false; // \r\n                            print_ = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        int test2 = 0;\r\n        private void timer4_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            if (vid == 1)\r\n            {\r\n\r\n\r\n\r\n\r\n                ckecked_false();\r\n                // string cripto = \u0022\u0022;\r\n                textBox7.Text.Replace(\u0027;\u0027, \u0027/\u0027);\r\n                string zzz = textBox7.Text.Replace(\u0027;\u0027, \u0027/\u0027);\r\n                textBox8.Text = zzz.Trim();\r\n\r\n                try\r\n                {\r\n                    Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n                    criptografia.Key = \u0022Etec2017\u0022;\r\n                    textBox8.Text = criptografia.Decrypt(zzz);\r\n                    textBox10.Text = textBox8.Text;\r\n                    test2 = 1;\r\n                    string textoqr = zzz;\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    textBox7.Text = \u0022 \u0022;\r\n                    textBox8.Text = \u0022 \u0022;\r\n                    timer4.Stop();\r\n                    MessageBox.Show(\u0022Invalid card\u0022, ex.Message.Substring(2, 0));\r\n                    test2 = 0;\r\n                    tempo = 0;\r\n                }\r\n\r\n                if (test2 == 1)\r\n                {\r\n                    int count = textBox8.Lines.Length;\r\n                    TextReader read = new System.IO.StringReader(textBox8.Text);\r\n                    int rows = 150;\r\n\r\n                    string[] text10 = new string[rows];\r\n                    for (int r = 1; r \u003C rows; r\u002B\u002B)\r\n                    {\r\n                        text10[r] = read.ReadLine();\r\n                    }\r\n\r\n\r\n\r\n                    if (count \u003E= 8)\r\n                    {\r\n\r\n                        try\r\n                        {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            richTextBox16.Text = text10[1].Remove(0, 6);\r\n                            richTextBox1.Text = text10[3].Remove(0, 9);\r\n                            richTextBox2.Text = text10[2].Remove(0, 6);\r\n                            richTextBox3.Text = text10[4].Remove(0, 10);\r\n                            richTextBox4.Text = text10[5].Remove(0, 4);\r\n                            richTextBox8.Text = text10[6].Remove(0, 1);\r\n                            //  richTextBox5.Text = text10[7].Remove(0, 8);\r\n                            //  richTextBox9.Text = text10[8].Remove(0, 0);\r\n\r\n\r\n                            rich5 = text10[7].Remove(0, 8).Trim();\r\n                            //    MessageBox.Show(rich5);\r\n                            rich9 = text10[8].Remove(0, 0).Trim();\r\n                            // label33.Text = rich5;\r\n                            //  label34.Text = rich9;\r\n                            richTextBox10.Text = text10[9].Remove(0, 0);\r\n                            richTextBox11.Text = text10[10].Remove(0, 0);\r\n                            richTextBox12.Text = text10[11].Remove(0, 0);\r\n                            richTextBox13.Text = text10[12].Remove(0, 0);\r\n                            richTextBox14.Text = text10[13].Remove(0, 0);\r\n                            richTextBox6.Text = text10[14].Remove(0, 6).Trim();\r\n                            richTextBox7.Text = text10[15].Remove(0, 4).Trim();\r\n                            richTextBox15.Text = \u0022https://drive.google.com/file/d/\u0022 \u002B text10[16] \u002B \u0022/view?usp=sharing\u0022;\r\n                            maskedTextBox1.Text = richTextBox10.Text;\r\n                            maskedTextBox2.Text = richTextBox11.Text;\r\n                            maskedTextBox3.Text = richTextBox12.Text;\r\n                            maskedTextBox4.Text = richTextBox13.Text;\r\n                            maskedTextBox5.Text = richTextBox14.Text;\r\n                            ///  MessageBox.Show(richTextBox16.Text);\r\n\r\n                            check_id_onboard2();\r\n\r\n\r\n\r\n                            if (id_onboard2 == true)\r\n                            {\r\n\r\n                                timer4.Stop();\r\n                                MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 EM OUTRA EMBARCA\u00C7\u00C3O! SER\u00C1 NECESS\u00C1RIO DAR A SA\u00CDDA PARA A LIBERA\u00C7\u00C3O DE ENTRADA A ESTA EMBARCA\u00C7\u00C3O\u0022);\r\n\r\n\r\n\r\n                            }\r\n\r\n\r\n                            if (id_onboard2 == false)\r\n                            {\r\n\r\n\r\n\r\n                                if (text10[17].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local1.Checked = true;\r\n\r\n                                }\r\n                                if (text10[18].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local2.Checked = true;\r\n                                }\r\n                                if (text10[19].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local3.Checked = true;\r\n                                }\r\n                                if (text10[20].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local4.Checked = true;\r\n                                }\r\n                                if (text10[21].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_yellow.Checked = true;\r\n                                }\r\n                                if (text10[22].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_green.Checked = true;\r\n                                }\r\n                                if (text10[23].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_red.Checked = true;\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                // path3 = \u0022https://drive.google.com/file/d/\u0022 \u002B subs2[5] \u002B \u0022/view?usp=sharing\u0022;\r\n                                // panel11.Visible = true;\r\n                                //  panel4.Visible = false;\r\n\r\n                                /////////////////////\r\n\r\n                                // string ve = textBox10.Lines[6];\r\n                                textBox15.Text = text10[7];\r\n\r\n                                if (text10[7] == \u0022VESSEL: \u0022 \u002B comboBox1.Text.Trim())\r\n                                {\r\n                                    try\r\n                                    {\r\n                                        path2 = richTextBox15.Text;\r\n                                        subs2 = path2.Split(\u0027/\u0027);\r\n                                        path3 = subs2[5];\r\n                                    }\r\n                                    catch\r\n                                    {\r\n\r\n                                    }\r\n                                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B richTextBox6.Text \u002B \u0022 :\u0022 \u002B richTextBox7.Text \u002B \u0022 :\u0022 \u002B path3;\r\n                                    string filePath = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n                                    string[] lines = File.ReadAllLines(filePath);\r\n\r\n                                    for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                                    {\r\n                                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                                        {\r\n                                            ver = 1;\r\n                                            lines[i] = teste2.Trim();\r\n                                            /// MessageBox.Show(\u0022Achei: \u0022 \u002B richTextBox4.Text.Trim());\r\n                                        }\r\n\r\n                                    }\r\n                                    //and save it:\r\n\r\n                                    File.WriteAllLines(filePath, lines);\r\n                                    ver = 0;\r\n\r\n                                }\r\n                                //////////////////\r\n\r\n\r\n                                //  pictureBox1.Visible = false;\r\n                                //  panel4.Visible = false;\r\n                                //  panel4.Size = new Size(360, 355);\r\n                                // panel4.Location = new System.Drawing.Point(95, 150);\r\n                                // pictureBox1.Size = new Size(330, 320);\r\n                                // pictureBox1.Location = new System.Drawing.Point(15, 18);\r\n\r\n                                // panel4.Visible = true;\r\n                                //  pictureBox1.Visible = true;\r\n                                // panel10.Visible = false;\r\n\r\n\r\n\r\n                                // button8.Visible = true;\r\n                                // button9.Visible = true;\r\n                                // button10.Visible = true;\r\n                                // pictureBox1.BackgroundImage = Properties.Resources.barcode1;\r\n                                int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                                string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n                                string sec = secondLine2.Split(\u0027:\u0027)[26].Trim();\r\n                                string pass11 = secondLine2.Split(\u0027:\u0027)[5].Trim();\r\n                                string pass12 = secondLine2.Split(\u0027:\u0027)[9].Trim();\r\n                                string pass13 = secondLine2.Split(\u0027:\u0027)[3].Trim();\r\n                                string pass14 = secondLine2.Split(\u0027:\u0027)[11].Trim();\r\n                                string pass15 = secondLine2.Split(\u0027:\u0027)[17].Trim();\r\n                                string pass16 = secondLine2.Split(\u0027:\u0027)[19].Trim(); // NR34\r\n                                string pass17 = secondLine2.Split(\u0027:\u0027)[21].Trim(); // VA1\r\n                                string pass18 = secondLine2.Split(\u0027:\u0027)[23].Trim(); // V2                                                                                                                                                                   //17\r\n                                string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n\r\n                                //   string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n\r\n\r\n\r\n\r\n\r\n                                //  0   1      2                       3        4              5         6              7  8           9         10                                  11      12             13        14      15    16           17     18           19          20            21          22           23               24            25 26     27   \r\n                                //Number : 1 : Name : CRISTIANO CALHEIROS 3 : Compay : GOOGLEMARINE :Funcition:  ENGENHEIRO  :Id: 1110988400 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Googlemarine : Project : 2001 : ASO : 02/02/2024 : NR-34 : 02/02/2025 : Vaccine-1 : 02/02/2026 : Vaccine-2 : 02/02/2027 : Booster vaccine : 02/02/2028 :  : COMUM :\r\n                                if (pass11.Trim() != richTextBox1.Text.Trim())  //COMPANY\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n\r\n\r\n                                if (pass12.Trim() != richTextBox4.Text.Trim())  // IDENTIDADE\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n                                if (pass13.Trim() != richTextBox2.Text.Trim()) // NOME\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n                                if (pass14.Trim() != richTextBox8.Text.Trim()) // email\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass15.Trim() != maskedTextBox1.Text.Trim()) // aso\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass16.Trim() != maskedTextBox2.Text.Trim()) // nr34\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass17.Trim() != maskedTextBox3.Text.Trim()) // vacina 1\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass18.Trim() != maskedTextBox4.Text.Trim()) // vacina 2\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass19.Trim() != maskedTextBox5.Text.Trim()) // vacina refor\u00E7o\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n\r\n                                if (pass11.Trim() == richTextBox1.Text.Trim() \u0026\u0026 pass12.Trim() == richTextBox4.Text.Trim() \u0026\u0026 pass13.Trim() == richTextBox2.Text.Trim())\r\n                                {\r\n                                    if (pass14.Trim() == richTextBox8.Text.Trim() \u0026\u0026 pass15.Trim() == maskedTextBox1.Text.Trim() \u0026\u0026 pass16.Trim() == maskedTextBox2.Text.Trim())\r\n                                    {\r\n                                        if (pass17.Trim() == maskedTextBox3.Text.Trim() \u0026\u0026 pass18.Trim() == maskedTextBox4.Text.Trim() \u0026\u0026 pass19.Trim() == maskedTextBox5.Text.Trim())\r\n                                        {\r\n                                            company_loc = false; // \r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n\r\n\r\n                                if (sec == \u0022Bloqueado\u0022)\r\n                                {\r\n                                    bb = \u0022Bloqueado\u0022;\r\n                                    label37.Text = secondLine2.Split(\u0027:\u0027)[28];\r\n                                    // company_loc = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    bb = \u0022\u0022;\r\n                                    label37.Text = \u0022\u0022;\r\n                                    // company_loc = false;\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                acha_palavra_txt();\r\n                                compare_data();\r\n\r\n                                //  timer2.Enabled = true;\r\n                                textBox7.Text = \u0022\u0022;\r\n                                textBox8.Text = \u0022 \u0022;\r\n                                label37.Text = \u0022\u0022;\r\n                                tempo = 0;\r\n                            }\r\n\r\n                            timer4.Stop();\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            //  MessageBox.Show(\u0022\u0022,ex.Message);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        public async Task TestaPing(string url)\r\n        {\r\n            try\r\n            {\r\n                Ping pinger = new Ping();\r\n                PingReply resposta = await pinger.SendPingAsync(url);\r\n                ExibeInfoRespostaPing(resposta);\r\n                pinger.PingCompleted \u002B= pinger_PingCompleted;\r\n\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private static void pinger_PingCompleted(object sender, PingCompletedEventArgs e)\r\n        {\r\n            try\r\n            {\r\n                PingReply resposta = e.Reply;\r\n                if (e.Cancelled)\r\n                {\r\n                    MessageBox.Show($\u0022Ping para {e.UserState.ToString()} foi cancelado\u0022);\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show($\u0022Excepition lan\u00E7ada durante o ping:{ex.Message}\u0022);\r\n            }\r\n        }\r\n\r\n        private void ExibeInfoRespostaPing(PingReply resposta)\r\n        {\r\n\r\n            st = resposta.Status.ToString().Trim();\r\n            /// MessageBox.Show(st);\r\n            if (st == \u0022Success\u0022)\r\n            {\r\n                // panel12.BackColor = Color.YellowGreen;\r\n                // label40.Visible = false;\r\n\r\n                if (timer9.Enabled == false)\r\n                {\r\n\r\n                    // timer9.Start();\r\n                }\r\n                p = 1;\r\n                ping_local = 1;\r\n            }\r\n            if (st == \u0022TimedOut\u0022)\r\n            {\r\n                // panel12.BackColor = Color.Red;\r\n                // label40.Visible = true;\r\n                zzz = 0;\r\n                p = 0;\r\n                ping_local = 0;\r\n                // MessageBox.Show(\u0022sem comunica\u00E7\u00E3o\u0022);\r\n            }\r\n        }\r\n\r\n        private void timer8_Tick(object sender, EventArgs e)\r\n        {\r\n            //TestaPing(ip1);\r\n            // TestaPing(ip2);\r\n            //  TestaPing(ip3);\r\n            // checa_host();\r\n            //  MessageBox.Show(comp.ToString());\r\n            label51.Text = count2.ToString();\r\n            //  label51.Text = hostName;\r\n            String block = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n            if (comp == 1)\r\n            {\r\n                //checa_host();\r\n                //  atualiza_compartilhamento();\r\n                /// ler_linha();\r\n            }\r\n\r\n            if (count \u003E= 1)\r\n            {\r\n                // label51.Text = count.ToString();\r\n                // online_ = true;\r\n            }\r\n\r\n            DateTime fproj2 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            if (fproj2 \u003E fproj)\r\n            {\r\n\r\n                System.Windows.Forms.Application.Restart();\r\n\r\n            }\r\n\r\n\r\n            DateTime flogo2 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\logo.png\u0022);\r\n            if (flogo2 \u003E flogo3)\r\n            {\r\n\r\n\r\n                System.Windows.Forms.Application.Restart();\r\n\r\n\r\n            }\r\n            //  MessageBox.Show(flogo3.ToString() \u002B \u0022    \u0022 \u002B flogo2.ToString());\r\n            //    DateTime flogo;\r\n            //   DateTime flogo1;\r\n        }\r\n        private void ler_linha3()\r\n        {\r\n            //   String locked = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n\r\n            //  timer8.Stop();\r\n            try\r\n            {\r\n                // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n                string FileToRead = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n                TextReader Leitor = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);//Inicializa o Leitor\r\n                int Linhas = 0;\r\n                //  MessageBox.Show(\u0022acesso ok\u0022);\r\n                while (Leitor.Peek() != -1)\r\n                {//Enquanto o arquivo n\u00E3o acabar, o Peek n\u00E3o retorna -1 sendo adequando para o loop while...\r\n                    Linhas\u002B\u002B;//Incrementa 1 na contagem\r\n                    Leitor.ReadLine();//Avan\u00E7a uma linha no arquivo\r\n                }\r\n\r\n\r\n\r\n                label27.Text = Linhas.ToString();\r\n                //   label67.Text = label27.Text;\r\n                if (rich5 == comboBox1.Text.Trim())\r\n                {\r\n\r\n                }\r\n                Leitor.Close();\r\n            }\r\n            catch\r\n            {\r\n                //  MessageBox.Show(\u0022n\u00E3o consegui acessar o caminho  \u0022 \u002B @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        //  int comp = 1;\r\n        private void timer9_Tick(object sender, EventArgs e)\r\n        {\r\n            //myThread.Start();\r\n            // myThread.Abort();\r\n            //    panel12.BackColor = Color.Black;\r\n\r\n            try\r\n            {\r\n                if (checa_host_ == true)\r\n                {\r\n\r\n                    checa_host();\r\n                    //  compr = 1;\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void userloc()\r\n        {\r\n            panel5.Visible = true;\r\n            button1.Enabled = true;\r\n            button28.Enabled = true;\r\n            // button2.Enabled = true;\r\n            //  button17.Enabled = true;\r\n            //  button29.Enabled = true;\r\n            button3.Enabled = true;\r\n            button4.Enabled = true;\r\n            button19.Enabled = true;\r\n        }\r\n        private void userlocon()\r\n        {\r\n            button1.Enabled = false;\r\n            button28.Enabled = false;\r\n            // button2.Enabled = false;\r\n            //  button17.Enabled = false;\r\n            //  button29.Enabled = false;\r\n            button3.Enabled = false;\r\n            button4.Enabled = false;\r\n            button19.Enabled = false;\r\n            panel5.Visible = false;\r\n        }\r\n        bool verz = false;\r\n\r\n        public void loc_crew()\r\n        {\r\n            button21.Visible = false;\r\n            button6.Visible = false;\r\n            button4.Visible = false;\r\n            button3.Visible = false;\r\n            // button29.Visible = false;\r\n            button28.Visible = false;\r\n            // button17.Visible = false;\r\n            //  button2.Visible = false;\r\n            button1.Visible = false;\r\n            button19.Visible = false;\r\n            monitor();\r\n        }\r\n\r\n        public void unloc_crew()\r\n        {\r\n            button21.Visible = true;\r\n            button6.Visible = true;\r\n            button4.Visible = true;\r\n            button3.Visible = true;\r\n            //button29.Visible = true;\r\n            button28.Visible = true;\r\n            //button17.Visible = true;\r\n            // button2.Visible = true;\r\n            button1.Visible = true;\r\n            button19.Visible = true;\r\n        }\r\n        private void button35_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            verz = true;\r\n            String pass0 = passall.Split(\u0027,\u0027)[0];\r\n            String pass1 = passall.Split(\u0027,\u0027)[1];\r\n            String pass2 = passall.Split(\u0027,\u0027)[2];\r\n            String pass3 = passall.Split(\u0027,\u0027)[3];\r\n            String pass4 = passall.Split(\u0027,\u0027)[4];\r\n            String pass5 = passall.Split(\u0027,\u0027)[5];\r\n            String pass6 = passall.Split(\u0027,\u0027)[6];\r\n            String pass7 = passall.Split(\u0027,\u0027)[7];\r\n            String pass8 = passall.Split(\u0027,\u0027)[8];\r\n            String pass9 = passall.Split(\u0027,\u0027)[9];\r\n            String pass10 = passall.Split(\u0027,\u0027)[10];\r\n            String pass11 = passall.Split(\u0027,\u0027)[11];\r\n            //   if (verz == true)\r\n            // {\r\n\r\n\r\n            //  }\r\n            try\r\n            {\r\n                if (comuser.SelectedItem.ToString() == pass0.Trim() \u0026\u0026 textpass.Text.Trim() == pass1.Trim())\r\n                {\r\n\r\n\r\n                    MessageBox.Show(\u0022Usu\u00E1rio Admin \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = false;\r\n                    // button27.Visible = true;\r\n                    regs.Visible = true;\r\n                    panel17.Visible = true;\r\n                    panel19.Visible = true;\r\n\r\n                    libera = true;\r\n                    userloc();\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass0.Trim() \u0026\u0026 textpass.Text.Trim() != pass1.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass2.Trim() \u0026\u0026 textpass.Text.Trim() == pass3.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio Admin nivel 2 \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = false;\r\n                    libera = true;\r\n                    userloc();\r\n                    verz = false;\r\n                    // button27.Visible = true;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n                    regs.Visible = true;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass2.Trim() \u0026\u0026 textpass.Text.Trim() != pass3.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass4.Trim() \u0026\u0026 textpass.Text.Trim() == pass5.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    textBox7.Focus();\r\n                    unloc_crew();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass4.Trim() \u0026\u0026 textpass.Text.Trim() != pass5.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass6.Trim() \u0026\u0026 textpass.Text.Trim() == pass7.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass6.Trim() \u0026\u0026 textpass.Text.Trim() != pass7.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass8.Trim() \u0026\u0026 textpass.Text.Trim() == pass9.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    verz = false;\r\n                    userloc();\r\n                    button27.Visible = false;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    regs.Visible = false;\r\n                    unloc_crew();\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass8.Trim() \u0026\u0026 textpass.Text.Trim() != pass9.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass10.Trim() \u0026\u0026 textpass.Text.Trim() == pass11.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n\r\n\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    regs.Visible = false;\r\n                    loc_crew();\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass10.Trim() \u0026\u0026 textpass.Text.Trim() != pass11.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n\r\n\r\n                }\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == \u0022\u0022 \u0026\u0026 textpass.Text.Trim() == \u0022\u0022)\r\n                {\r\n\r\n                    MessageBox.Show(\u0022ESCOLHA O USU\u00C1RIO E DIGITE A SENHA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n            // MessageBox.Show(libera.ToString());\r\n        }\r\n\r\n        private void button28_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            if (comboBox1.Text != \u0022\u0022)\r\n            {\r\n\r\n                label44.Visible = true;\r\n                label54.Visible = true;\r\n                label45.Visible = true;\r\n                label46.Visible = true;\r\n                label47.Visible = true;\r\n                //  label48.Visible = true;\r\n                label49.Visible = true;\r\n                label50.Visible = true;\r\n\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                local1.Enabled = true;\r\n                local2.Enabled = true;\r\n                local4.Enabled = true;\r\n                label37.Visible = false;\r\n\r\n                dataGridView1.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                //  button29.Enabled = true;\r\n                btloc.Visible = false;\r\n                button7.Visible = false;\r\n                // CHLocked.Visible = false;\r\n                richTextBox4.ReadOnly = false;\r\n                richTextBox16.ReadOnly = false;\r\n                plant = 0;\r\n\r\n                if (band == 0)\r\n                {\r\n                    button3.Text = Label_Show_data[0];\r\n                }\r\n                else\r\n                {\r\n                    button3.Text = Label_Show_data[1];\r\n                }\r\n\r\n                // button3.Text = \u0022Show DataBase\u0022;\r\n\r\n\r\n                button1.Enabled = true;\r\n\r\n                panel11.Visible = true;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                panel11.BackColor = Color.White;\r\n                label8.Visible = false;\r\n                //  button7.Visible = true;\r\n                maskedTextBox1.ReadOnly = false;\r\n                maskedTextBox2.ReadOnly = false;\r\n                maskedTextBox3.ReadOnly = false;\r\n                maskedTextBox4.ReadOnly = false;\r\n                maskedTextBox5.ReadOnly = false;\r\n                maskedTextBox1.Visible = true;\r\n                maskedTextBox2.Visible = true;\r\n                maskedTextBox3.Visible = true;\r\n                maskedTextBox4.Visible = true;\r\n                maskedTextBox5.Visible = true;\r\n                maskedTextBox1.Text = \u0022 \u0022;\r\n                //maskedTextBox2.Text = \u0022 \u0022;\r\n                //maskedTextBox3.Text = \u0022 \u0022;\r\n                // maskedTextBox4.Text = \u0022 \u0022;\r\n                //  maskedTextBox5.Text = \u0022 \u0022;\r\n                // MaskedTextBox m = new MaskedTextBox();\r\n                // m.Text = \u002200000000\u0022;\r\n                maskedTextBox2.Text = \u002200000000\u0022;\r\n                maskedTextBox3.Text = \u002200000000\u0022;\r\n                maskedTextBox4.Text = \u002200000000\u0022;\r\n                maskedTextBox5.Text = \u002200000000\u0022;\r\n\r\n\r\n\r\n\r\n                // panel4.Size = new Size(296, 215);\r\n                // panel4.Location = new System.Drawing.Point(80, 277);\r\n                //  pictureBox1.Location = new System.Drawing.Point(5, 25);\r\n                //  pictureBox1.Size = new Size(178, 176);\r\n                // panel10.Visible = true;\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                richTextBox1.ReadOnly = false;\r\n                richTextBox2.ReadOnly = false;\r\n                richTextBox3.ReadOnly = false;\r\n                richTextBox4.ReadOnly = false;\r\n                //richTextBox5.ReadOnly = false;\r\n                // richTextBox6.ReadOnly = false;\r\n                // richTextBox7.ReadOnly = false;\r\n                richTextBox8.ReadOnly = false;\r\n\r\n                richTextBox10.ReadOnly = true;\r\n                richTextBox11.ReadOnly = true;\r\n                richTextBox12.ReadOnly = true;\r\n                richTextBox13.ReadOnly = true;\r\n                richTextBox14.ReadOnly = true;\r\n\r\n                // if (timer4.Enabled)\r\n                /// {\r\n\r\n                cancelar();\r\n                //button2.Enabled = true;\r\n                if (band == 0)\r\n                {\r\n                    button28.Text = Label_Read_QRcode_Off[0];\r\n                    label7.Text = button28.Text;\r\n                }\r\n                else\r\n                {\r\n                    button28.Text = Label_Read_QRcode_Off[1];\r\n                    label7.Text = button28.Text;\r\n                }\r\n\r\n                //richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                //button1.Text = \u0022Read QRcode Off\u0022;\r\n                richTextBox1.Enabled = true;\r\n                richTextBox2.Enabled = true;\r\n                richTextBox3.Enabled = true;\r\n                richTextBox4.Enabled = true;\r\n                comboBox1.Enabled = true;\r\n                richTextBox6.Enabled = true;\r\n                richTextBox7.Enabled = true;\r\n                richTextBox8.Enabled = true;\r\n                richTextBox9.Enabled = true;\r\n                richTextBox10.Enabled = true;\r\n                richTextBox11.Enabled = true;\r\n                richTextBox12.Enabled = true;\r\n                richTextBox13.Enabled = true;\r\n                richTextBox14.Enabled = true;\r\n\r\n\r\n                button4.Enabled = true;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n\r\n                //richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                // richTextBox8.Text = \u0022cristiano.engenharia.ac@gmail.com\u0022;\r\n                dateTimePicker1.Visible = true;\r\n                dateTimePicker2.Visible = true;\r\n                richTextBox6.Visible = false;\r\n                richTextBox7.Visible = false;\r\n                //    timer4.Stop();\r\n                // videoCaptureDevice.Stop();\r\n                //  pictureBox1.Image = Properties.Resources.frame;\r\n                //button2.Enabled = true;\r\n                // }\r\n                vid = 0;\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(_cad);\r\n            }\r\n        }\r\n        private void compare_aso()\r\n        {\r\n            try\r\n            {\r\n\r\n                string texto = \u0022Aqui est\u00E1 um exemplo de texto com a palavra \u0027dado\u0027.\u0022;\r\n\r\n                string palavraProcurada = \u0022dado\u0022;\r\n\r\n                if (texto.Contains(palavraProcurada))\r\n                {\r\n                    Console.WriteLine($\u0022A palavra \u0027{palavraProcurada}\u0027 foi encontrada no texto.\u0022);\r\n                }\r\n                var parameterDate_ASo = DateTime.ParseExact(maskedTextBox1.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                //var parameterDate_initial = DateTime.ParseExact(richTextBox6.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                /// var parameterDate_final = DateTime.ParseExact(richTextBox7.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var todaysDate = DateTime.Today;\r\n\r\n                if (todaysDate \u003E parameterDate_ASo)\r\n                {\r\n\r\n\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    aso_1 = 1;\r\n                    MessageBox.Show(\u0022Aso vencido, Favor verificar\u0022);\r\n                }\r\n                else\r\n                {\r\n\r\n                    aso_1 = 0;\r\n\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                MessageBox.Show(e.Message);\r\n            }\r\n            // compare_id();\r\n        }\r\n        int ver = 0;\r\n        String local22 = \u0022\u0022;\r\n        private void read_write()\r\n        {\r\n            checa_host_ = false;\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                richTextBox6.Text = data_new;\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                richTextBox7.Text = data2_new;\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n            if (richTextBox16.Text.Trim() == \u0022\u0022)\r\n            {\r\n\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n\r\n                string number = count.ToString().Trim(); //   teste count System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                label3.Text = number;\r\n                number2 = count;//Int32.Parse(number);\r\n                lb4.Visible = true;\r\n                number2 = number2 \u002B 1;\r\n                // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022, number2.ToString());\r\n                if (zzz == 1)\r\n                {\r\n                    // string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n                    // \\\\DOF_ACCESS\\\\compartilhamento\\\\\r\n                    //  File.WriteAllText(text \u002B @\u0022data_txt\\count.txt\u0022, number2.ToString());\r\n                }\r\n\r\n                label3.Text = number2.ToString();\r\n                lb4.Text = label3.Text;\r\n                richTextBox16.Text = number2.ToString();\r\n\r\n                if (local1val == 1)\r\n                {\r\n                    local22 = place1[band];\r\n\r\n                }\r\n                if (local2val == 1)\r\n                {\r\n                    local22 = place2[band];\r\n\r\n                }\r\n                if (local4val == 1)\r\n                {\r\n                    local22 = place4[band];\r\n\r\n                }\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    try\r\n                    {\r\n                        path2 = richTextBox15.Text;\r\n                        subs2 = path2.Split(\u0027/\u0027);\r\n                        path3 = subs2[5];\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n\r\n                    //Number : 1 : Name : Gustavo de Vasconcelos Magalh\u00E3es : Compay : DOF :Funcition:  Gerente de Projeto  :Id: 120159298 : E-mail : N/A : Vessel : SKANDI AMAZONAS : Project : Estadia : ASO : 01/07/2024 : NR-34 : 01/06/2024 : NR-10 : 01/06/2024 : NR-33 : 01/06/2024 : NR-35 : 01/06/2024 :  : JO\u00C3O : : : :17/08/2023 :17/08/2023 :.\r\n                    //  richTextBox16.Text = label3.Text.Trim();\r\n                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B data_new \u002B \u0022 :\u0022 \u002B data2_new \u002B \u0022 :\u0022 \u002B path3;\r\n\r\n                    Cadastro cadastro = new Cadastro(\r\n                        number: richTextBox16.Text.Trim(),\r\n                        name: richTextBox2.Text,\r\n                        company: richTextBox1.Text,\r\n                        function: richTextBox3.Text,\r\n                        identidade: richTextBox4.Text,\r\n                        email: richTextBox8.Text,\r\n                        vessel: comboBox1.Text,\r\n                        project: richTextBox9.Text,\r\n                        aso: richTextBox10.Text,\r\n                        nr_34: richTextBox11.Text,\r\n                        nr_10: richTextBox12.Text,\r\n                        nr_33: richTextBox13.Text,\r\n                        nr_35: richTextBox14.Text,\r\n                        estado: bb,\r\n                        usuario: comuser.Text,\r\n                        motivo: richTextBox17.Text,\r\n                        local: local22,\r\n                        data: data_new,\r\n                        data2: data2_new,\r\n                        document: path3\r\n                        );\r\n\r\n                    //save cadstro at  using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n                    if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n                    {\r\n                        Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n                    }\r\n\r\n                    AddOrUpdateCadastroData(cadastro);\r\n\r\n                    writer.WriteLine(teste2);\r\n                    writer.Close();\r\n                }\r\n                // MessageBox.Show(\u0022N\u00E3o Achei \u0022);\r\n            }\r\n\r\n            else\r\n            {\r\n                //  richTextBox16.Text = number2.ToString();\r\n                if (local1val == 1)\r\n                {\r\n                    local22 = place1[band];\r\n\r\n                }\r\n                if (local2val == 1)\r\n                {\r\n                    local22 = place2[band];\r\n\r\n                }\r\n                if (local4val == 1)\r\n                {\r\n                    local22 = place4[band];\r\n\r\n                }\r\n                if (richTextBox16.Text.Trim() != \u0022\u0022)\r\n                {\r\n                    try\r\n                    {\r\n                        path2 = richTextBox15.Text;\r\n                        subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                        path3 = subs2[5];\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B data_new \u002B \u0022 :\u0022 \u002B data2_new \u002B \u0022 :\u0022 \u002B path3;\r\n                    string filePath = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n                    string[] lines = File.ReadAllLines(filePath);\r\n                    //create new Cadastro object and save it into a new SQLite table called Cadastro\r\n                    Cadastro cadastro = new Cadastro(\r\n                        number: richTextBox16.Text.Trim(),\r\n                        name: richTextBox2.Text,\r\n                        company: richTextBox1.Text,\r\n                        function: richTextBox3.Text,\r\n                        identidade: richTextBox4.Text,\r\n                        email: richTextBox8.Text,\r\n                        vessel: comboBox1.Text,\r\n                        project: richTextBox9.Text,\r\n                        aso: richTextBox10.Text,\r\n                        nr_34: richTextBox11.Text,\r\n                        nr_10: richTextBox12.Text,\r\n                        nr_33: richTextBox13.Text,\r\n                        nr_35: richTextBox14.Text,\r\n                        estado: bb,\r\n                        usuario: comuser.Text,\r\n                        motivo: richTextBox17.Text,\r\n                        local: local22,\r\n                        data: data_new,\r\n                        data2: data2_new,\r\n                        document: path3\r\n                        );\r\n\r\n                    //save cadstro at  using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n                    if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n                    {\r\n                        Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n                    }\r\n\r\n                    AddOrUpdateCadastroData(cadastro);\r\n\r\n\r\n\r\n                    for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                    {\r\n                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                        {\r\n                            ver = 1;\r\n                            lines[i] = teste2.Trim();\r\n                            /// MessageBox.Show(\u0022Achei: \u0022 \u002B richTextBox4.Text.Trim());\r\n                        }\r\n\r\n                    }\r\n                    //and save it:\r\n\r\n                    File.WriteAllLines(filePath, lines);\r\n                    ver = 0;\r\n\r\n                }\r\n            }\r\n\r\n\r\n            checa_host_ = true;\r\n\r\n        }\r\n        public Bitmap GerarQRCode(int width, int height, string text)\r\n        {\r\n            try\r\n            {\r\n                var bw = new ZXing.BarcodeWriter();\r\n                var encOptions = new ZXing.Common.EncodingOptions() { Width = width, Height = height, Margin = 0 };\r\n                bw.Options = encOptions;\r\n                bw.Format = ZXing.BarcodeFormat.QR_CODE;\r\n                var resultado = new Bitmap(bw.Write(text));\r\n                return resultado;\r\n\r\n            }\r\n            catch\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n\r\n        private void criar_excel()\r\n        {\r\n\r\n            string txtFilePath = @\u0022C:\\compartilhamento\\data_base\\novo.txt\u0022;\r\n            string excelFilePath = @\u0022C:\\compartilhamento\\data_base\\novo.xls\u0022;\r\n\r\n            IWorkbook workbook = new HSSFWorkbook();\r\n            ISheet sheet = workbook.CreateSheet(\u0022Planilha1\u0022);\r\n\r\n            using (StreamReader reader = new StreamReader(txtFilePath))\r\n            {\r\n                string headerLine = reader.ReadLine();\r\n                string[] headerParts = { \u0022NUMBER\u0022, \u0022NAME\u0022, \u0022COMPANY FUNCTION \u0022, \u0022FUNCTION\u0022, \u0022ID\u0022, \u0022EMAIL\u0022, \u0022VESSEL\u0022, \u0022CHECK-IN VALIDATION\u0022, \u0022CHECK-OUT VALIDATION\u0022, \u0022CHECK-IN  DATA\u0022, \u0022CHECK-IN  HORA\u0022, \u0022CHECK-OUT DATA\u0022, \u0022CHECK-OUT HORA\u0022, \u0022PROJECT\u0022, \u0022ASO\u0022, \u0022NR-34\u0022, \u0022NR-10\u0022, \u0022NR-33\u0022, \u0022NR-35\u0022, \u0022LOCAL\u0022, \u0022LEVEL\u0022, \u0022ESTADO\u0022, \u0022MOTIVO\u0022, \u0022USUARIO\u0022 };//headerLine.Split(\u0027:\u0027);\r\n\r\n                IRow headerRow = sheet.CreateRow(0);\r\n                for (int colIndex = 0; colIndex \u003C headerParts.Length; colIndex\u002B\u002B)\r\n                {\r\n                    ICell cell = headerRow.CreateCell(colIndex);\r\n                    cell.SetCellValue(headerParts[colIndex]);\r\n                }\r\n\r\n                int rowIndex = 1;\r\n\r\n                while (!reader.EndOfStream)\r\n                {\r\n                    string line = reader.ReadLine();\r\n                    string[] parts = line.Split(\u0027,\u0027);\r\n\r\n                    IRow row = sheet.CreateRow(rowIndex);\r\n\r\n                    for (int colIndex = 0; colIndex \u003C parts.Length; colIndex\u002B\u002B)\r\n                    {\r\n                        ICell cell = row.CreateCell(colIndex);\r\n                        cell.SetCellValue(parts[colIndex]);\r\n                    }\r\n\r\n                    rowIndex\u002B\u002B;\r\n                }\r\n            }\r\n\r\n            using (FileStream stream = new FileStream(excelFilePath, FileMode.Create, FileAccess.Write))\r\n            {\r\n                workbook.Write(stream);\r\n            }\r\n        }\r\n        private void cadastrar_invited()\r\n        {\r\n\r\n            rec = false;\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                check_id_onboard();\r\n\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    // alterado();\r\n                    System.Threading.Thread.Sleep(2000);\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n\r\n                        //  MessageBox.Show(\u0022id existe\u0022);\r\n                        richTextBox10.Text = \u0022VISITANTE\u0022;//maskedTextBox1.Text;\r\n                        richTextBox11.Text = \u0022N/A\u0022;\r\n                        richTextBox12.Text = \u0022N/A\u0022;\r\n                        richTextBox13.Text = \u0022N/A\u0022;\r\n                        richTextBox14.Text = \u0022N/A\u0022;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                // compare_aso();\r\n\r\n                                // if (aso_1 == 0)\r\n                                //  {\r\n                                //  richTextBox1.Text = richTextBox1.Text.Trim()\u002B\u0022 VISITANTE \u0022;\r\n\r\n                                if (richTextBox8.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox8.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox10.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox10.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox11.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox11.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox12.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox12.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox13.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox13.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox14.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox14.Text = \u0022N/A\u0022;\r\n                                }\r\n\r\n                                maskedTextBox1.Visible = false;\r\n                                maskedTextBox2.Visible = false;\r\n                                maskedTextBox3.Visible = false;\r\n                                maskedTextBox4.Visible = false;\r\n                                maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                read_write();\r\n                                confere = 1;\r\n                                lb4.Visible = true;\r\n                                label5.Visible = true;\r\n                                panel10.Visible = true;\r\n                                label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                //\r\n                                // CarregarPlanilha2();\r\n                                carrega_planilha2_txt();\r\n                                //  create_qrcode();\r\n                                // create_qrcode_new();\r\n                                create_qrcode_invited_new();\r\n                                print_qrcode();\r\n\r\n                                ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                startInfo2.RedirectStandardOutput = true;\r\n                                startInfo2.UseShellExecute = false;\r\n                                // Do not create the black window.\r\n                                startInfo2.CreateNoWindow = true;\r\n                                startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                Process.Start(startInfo2);\r\n\r\n                                /// }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void create_qrcode_invited_new()\r\n        {\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n\r\n            label5.Text = \u0022 \u0022;\r\n            label28.Text = \u0022 \u0022;\r\n            label30.Text = \u0022 \u0022;\r\n            label31.Text = \u0022 \u0022;\r\n            panel4.BackColor = Color.White;\r\n            panel11.Visible = false;\r\n            panel4.Visible = true;\r\n\r\n            label5.Text = richTextBox2.Text;\r\n            label28.Text = \u0022Vessel: \u0022 \u002B comboBox1.Text;\r\n            label30.Text = richTextBox9.Text;\r\n            lb4.Text = richTextBox16.Text; ;\r\n            label31.Text = \u0022De: \u0022 \u002B data_new;\r\n            label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n\r\n            if (richTextBox15.Text != \u0022\u0022)\r\n            {\r\n                try\r\n                {\r\n                    path2 = richTextBox15.Text;\r\n                    subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                    path3 = subs2[5];\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                path3 = \u0022.\u0022;\r\n            }\r\n\r\n\r\n\r\n            //   richTextBox1.Text = \u0022 VISITANTE  \u0022 \u002B richTextBox1.Text;\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B richTextBox1.Text \u002B \u0022 \\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n            this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n            initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n            final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n            // MessageBox.Show(data2);\r\n            Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n            criptografia.Key = \u0022Etec2017\u0022; // chave\r\n            data2 = criptografia.Encrypt(data2.ToString());\r\n            Bitmap bmp = new Bitmap(GerarQRCode(300, 300, data2));\r\n            pictureBox1.Image = bmp;\r\n        }\r\n        private void create_qrcode_new()\r\n        {\r\n\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n\r\n            label5.Text = \u0022 \u0022;\r\n            label28.Text = \u0022 \u0022;\r\n            label30.Text = \u0022 \u0022;\r\n            label31.Text = \u0022 \u0022;\r\n            panel4.BackColor = Color.White;\r\n            panel11.Visible = false;\r\n            panel4.Visible = true;\r\n\r\n            label5.Text = richTextBox2.Text;\r\n            label28.Text = \u0022Vessel: \u0022 \u002B comboBox1.Text;\r\n            label30.Text = richTextBox9.Text;\r\n            lb4.Text = richTextBox16.Text; ;\r\n            label31.Text = \u0022De: \u0022 \u002B data_new;\r\n            label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n\r\n            if (richTextBox15.Text != \u0022\u0022)\r\n            {\r\n                try\r\n                {\r\n                    path2 = richTextBox15.Text;\r\n                    subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                    path3 = subs2[5];\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                path3 = \u0022.\u0022;\r\n            }\r\n\r\n\r\n\r\n\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B richTextBox1.Text \u002B \u0022\\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n            this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n            initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n            final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n\r\n\r\n            QRCodeEncryptor = new QRCodeEncryptor();\r\n            string originalText = data2;\r\n\r\n            // Criptografa o texto\r\n            string encryptedText = QRCodeEncryptor.EncryptQRCode(originalText);\r\n            // Console.WriteLine(\u0022Texto criptografado: \u0022 \u002B encryptedText);\r\n\r\n            // Descriptografa o texto\r\n            string decryptedText = QRCodeEncryptor.DecryptQRCode(encryptedText);\r\n            // Console.WriteLine(\u0022Texto descriptografado: \u0022 \u002B decryptedText);\r\n\r\n\r\n            Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n            criptografia.Key = \u0022Etec2017\u0022; // chave\r\n            data2 = criptografia.Encrypt(data2.ToString());\r\n            Bitmap bmp = new Bitmap(GerarQRCode(300, 300, data2));\r\n            pictureBox1.Image = bmp;\r\n        }\r\n        //bool a = false;\r\n        bool id_existe = false;\r\n        private void button2_Click(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n\r\n\r\n            checa_host_ = false;\r\n\r\n                Boolean tempo = false;\r\n                if (dateTimePicker1.Visible == true)\r\n                {\r\n                    if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                    {\r\n                        tempo = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        tempo = false;\r\n                        MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                    }\r\n                }\r\n\r\n                if (dateTimePicker1.Visible == false)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                if (tempo == true)\r\n                {\r\n                    timer10.Enabled = false;\r\n                    timer12.Enabled = false;\r\n\r\n                /*\r\n                    ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                    startInfo.RedirectStandardOutput = true;\r\n                    startInfo.UseShellExecute = false;\r\n                    // Do not create the black window.\r\n                    startInfo.CreateNoWindow = true;\r\n                    startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                    Process.Start(startInfo);\r\n                */\r\n                    check_id_onboard();\r\n\r\n                    if (id_onboard == false)\r\n                    {\r\n                        if (dateTimePicker1.Visible == true)\r\n                        {\r\n                            richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                            richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        }\r\n\r\n\r\n                        alterado();\r\n                        System.Threading.Thread.Sleep(2000);\r\n                        compare_id();\r\n                        check_if_exist_id();\r\n\r\n                        if (id_exist == true)\r\n                        {\r\n\r\n                            //  MessageBox.Show(\u0022id existe\u0022);\r\n                            richTextBox10.Text = maskedTextBox1.Text;\r\n                            richTextBox11.Text = maskedTextBox2.Text;\r\n                            richTextBox12.Text = maskedTextBox3.Text;\r\n                            richTextBox13.Text = maskedTextBox4.Text;\r\n                            richTextBox14.Text = maskedTextBox5.Text;\r\n                            textBox13.Text = richTextBox1.Text;\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022\u0022;\r\n\r\n                            if (band == 0)\r\n                            {\r\n                                button2.Text = Label_Create_QRcode[0];\r\n                            }\r\n                            else\r\n                            {\r\n                                button2.Text = Label_Create_QRcode[1];\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                            // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                            // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                            if (resultado == 0)\r\n                            {\r\n                                if (textBox7.SelectionLength \u003E= 0)\r\n                                {\r\n                                    // textBox7.Focus();\r\n                                    // textBox7.Text = \u0022\u0022;\r\n                                }\r\n                                // dataGridView1.Visible = false;\r\n                                if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                    \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                                {\r\n\r\n\r\n\r\n                                    compare_aso();\r\n\r\n                                    if (aso_1 == 0)\r\n                                    {\r\n\r\n                                        if (richTextBox8.Text == \u0022\u0022)\r\n                                        {\r\n                                            richTextBox8.Text = \u0022N/A\u0022;\r\n                                        }\r\n\r\n                                        maskedTextBox1.Visible = false;\r\n                                        maskedTextBox2.Visible = false;\r\n                                        maskedTextBox3.Visible = false;\r\n                                        maskedTextBox4.Visible = false;\r\n                                        maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                        read_write();\r\n                                        confere = 1;\r\n                                        lb4.Visible = true;\r\n                                        label5.Visible = true;\r\n                                        panel10.Visible = true;\r\n                                        label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                        qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                        //\r\n                                        //  CarregarPlanilha2();\r\n                                        carrega_planilha2_txt();\r\n                                        //  create_qrcode();\r\n                                        create_qrcode_new();\r\n                                        print_qrcode();\r\n\r\n                                        ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                        startInfo2.RedirectStandardOutput = true;\r\n                                        startInfo2.UseShellExecute = false;\r\n                                        // Do not create the black window.\r\n                                        startInfo2.CreateNoWindow = true;\r\n                                        startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                        Process.Start(startInfo2);\r\n\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                    //\r\n                                    //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                    //  atualiza_compartilhamento();\r\n\r\n                                    // \r\n\r\n                                    // else\r\n                                    //  {\r\n                                    //  MessageBox.Show(id_check[band]);\r\n                                    //  }\r\n                                    checado = 0;\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    if (band == 0)\r\n                                    {\r\n                                        MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                    }\r\n\r\n                                    if (band == 1)\r\n                                    {\r\n                                        MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n\r\n                            if (resultado == 1)\r\n                            {\r\n                                MessageBox.Show(\u0022ID duplicated\u0022);\r\n                            }\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022 \u0022;\r\n                        }\r\n                        ok_but2 = false;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                        id_onboard = false;\r\n                    }\r\n                }\r\n                rec = true;\r\n                timer10.Enabled = true;\r\n                timer12.Enabled = true;\r\n            checa_host_ = true;\r\n\r\n        }\r\n        private void imprime_novo()\r\n        {\r\n\r\n\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                check_id_onboard();\r\n\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    alterado();\r\n                    System.Threading.Thread.Sleep(2000);\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n\r\n                        //  MessageBox.Show(\u0022id existe\u0022);\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n\r\n                                    if (richTextBox8.Text == \u0022\u0022)\r\n                                    {\r\n                                        richTextBox8.Text = \u0022N/A\u0022;\r\n                                    }\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                    read_write();\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                    qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                    //\r\n                                    //  CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    //  create_qrcode();\r\n                                    create_qrcode_new();\r\n                                    print_qrcode();\r\n\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n        private void compare_id()\r\n        {\r\n            try\r\n            {\r\n                String l = \u0022\u0022;\r\n                bool ESIM = false;\r\n                bool dois = false;\r\n                bool tres = false;\r\n                string nume = \u0022\u0022;\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                id_1 = 0;\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n\r\n                    if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                    {\r\n\r\n                        l = lines[i].Split(\u0027:\u0027)[9].Trim();\r\n                        if (lines[i].Split(\u0027:\u0027)[1].Trim() != richTextBox16.Text.Trim())\r\n                        {\r\n                            MessageBox.Show(\u0022O N\u00DAMERO DA IDENTIDADE  * \u0022 \u002B lines[i].Split(\u0027:\u0027)[9].Trim() \u002B \u0022 *  J\u00C1 EST\u00C1 CADASTRADO NO ACESSO DE N\u00DAMERO \u0022 \u002B lines[i].Split(\u0027:\u0027)[1].Trim());\r\n                        }\r\n                        ESIM = true;\r\n                        richTextBox4.Text = lines[int.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                        string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B local22.Trim();\r\n\r\n                        string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                        text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                        File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        //  MessageBox.Show(\u0022 CADASTRO REALIZADO COM SUCESSO, A IDENTIDADE N\u00C3O FOI ALTERADA POIS J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                        break;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        ESIM = false;\r\n\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n                if (ESIM == false)\r\n                {\r\n                    if (local1val == 1)\r\n                    {\r\n                        local22 = place1[band];\r\n\r\n                    }\r\n                    if (local2val == 1)\r\n                    {\r\n                        local22 = place2[band];\r\n\r\n                    }\r\n                    if (local4val == 1)\r\n                    {\r\n                        local22 = place4[band];\r\n\r\n                    }\r\n                    id_1 = 1;\r\n                    string[] lines2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    if (richTextBox4.Text.Trim() != l)\r\n                    {\r\n\r\n                        //   int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                        //   richTextBox16.Text = (Int32.Parse(label3.Text) \u002B 1).ToString();\r\n\r\n                        string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B richTextBox15.Text;\r\n\r\n                        string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                        // try\r\n                        // {\r\n                        text = text.Replace(lines2[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                        File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        //  }\r\n                        //   catch\r\n                        //{\r\n                        //     MessageBox.Show(\u0022UTILIZE A OP\u00C7\u00C3P CADASTRAR ANTES DE IMPRIMIR\u0022);\r\n                        //  }\r\n                        //  MessageBox.Show(\u0022CADASTRO REALIZADO COM SUCESSO\u0022);\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                    }\r\n                }\r\n\r\n                timer10.Enabled = true;\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void button29_Click(object sender, EventArgs e)\r\n        {\r\n            checa_host_ = false;\r\n            rec = false;\r\n            Boolean tempo2 = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo2 = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo2 = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo2 = true;\r\n            }\r\n            if (tempo2 == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                bool id_ok = false;\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n\r\n                    if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                    {\r\n                        id_ok = true;\r\n                        MessageBox.Show(\u0022J\u00C1 EXISTE UM CADASTRO COM ESTA IDENTIDADE\u0022);\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                if (id_ok == false)\r\n                {\r\n                    check_id_onboard();\r\n                    if (id_onboard == false)\r\n                    {\r\n\r\n\r\n\r\n\r\n\r\n                        tempo = 0;\r\n\r\n                        //timer4.Stop();\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        // \r\n                        //  if (textBox7.SelectionLength \u003E= 0)\r\n                        // {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n                        // acha_palavra_txt2();\r\n\r\n\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox2.Text != \u0022 \u0022 \u0026\u0026 richTextBox3.Text != \u0022 \u0022 \u0026\u0026 richTextBox4.Text != \u0022 \u0022 \u0026\u0026 comboBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox8.Text != \u0022 \u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022)  //  /  /\r\n                            {\r\n                                //compare_id();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n                                    if (richTextBox8.Text == \u0022\u0022)\r\n                                    {\r\n                                        richTextBox8.Text = \u0022N/A\u0022;\r\n                                    }\r\n\r\n                                    read_write();\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n                                    // f\r\n\r\n\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n                                    qr_generate = \u0022registered\u0022;\r\n                                    cad = true;\r\n                                  //  CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    create_qrcode_new();\r\n\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n\r\n\r\n                                    richTextBox1.Text = \u0022\u0022;\r\n                                    richTextBox2.Text = \u0022\u0022;\r\n                                    richTextBox3.Text = \u0022\u0022;\r\n                                    richTextBox4.Text = \u0022\u0022;\r\n                                    richTextBox6.Text = \u0022\u0022;\r\n                                    richTextBox7.Text = \u0022\u0022;\r\n                                    richTextBox8.Text = \u0022\u0022;\r\n                                    richTextBox10.Text = \u0022\u0022;\r\n                                    richTextBox11.Text = \u0022\u0022;\r\n                                    richTextBox12.Text = \u0022\u0022;\r\n                                    richTextBox13.Text = \u0022\u0022;\r\n                                    richTextBox14.Text = \u0022\u0022;\r\n                                    richTextBox15.Text = \u0022\u0022;\r\n                                    richTextBox16.Text = \u0022\u0022;\r\n                                    maskedTextBox1.Text = \u0022\u0022;\r\n                                    maskedTextBox2.Text = \u0022\u0022;\r\n                                    maskedTextBox3.Text = \u0022\u0022;\r\n                                    maskedTextBox4.Text = \u0022\u0022;\r\n                                    maskedTextBox5.Text = \u0022\u0022;\r\n                                    if (band == 0)\r\n                                    {\r\n                                        MessageBox.Show(Label_cadastro[0]);\r\n                                    }\r\n                                    if (band == 1)\r\n                                    {\r\n                                        MessageBox.Show(Label_cadastro[1]);\r\n                                    }\r\n\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                    checado = 0;\r\n                                }\r\n                                //  MessageBox.Show(id_check[band]);\r\n                            }\r\n\r\n\r\n                            // atualiza_compartilhamento();\r\n\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO!, S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    }\r\n                }\r\n            }\r\n            ///  timer4.Start();\r\n            rec = true;\r\n      \r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n            checa_host_ = true;\r\n        }\r\n\r\n        private void button4_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            panel15.Visible = true;\r\n\r\n\r\n\r\n        }\r\n\r\n        private void button6_Click_1(object sender, EventArgs e)\r\n        {\r\n            // panel8.Location= new Point(Location.X,Location.Y);//Point(521,155);\r\n            panel8.Size = new Size(490, 353); //new Size(1030, 600);\r\n            wi\u002B\u002B;\r\n            if (wi == 1)\r\n            {\r\n                //online = true;\r\n                lview_AP.Items.Clear();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n\r\n\r\n                panel8.Visible = true;\r\n            }\r\n            if (wi == 2)\r\n            {\r\n                // online = false;\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                panel8.Visible = false;\r\n\r\n                wi = 0;\r\n            }\r\n\r\n            // System.Windows.Forms.Application.Exit();\r\n            //   this.Close();\r\n        }\r\n        int inp = 0;\r\n        public void monitor()\r\n        {\r\n            // MessageBox.Show(valores.ToString());\r\n\r\n            pictureBox4.Visible = false;\r\n\r\n\r\n            if (new FileInfo(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Length \u003E= 0)\r\n            {\r\n                inp\u002B\u002B;\r\n                if (inp == 1)\r\n                {\r\n                    // panel6.Visible = true;\r\n                    mostra_conteudo_txt();\r\n                    comboBox2.SelectedIndex = 0;\r\n\r\n                    //  comboBox2.Text = \u0022ok\u0022;\r\n\r\n                    comboBox2.Visible = true;\r\n                    beep();\r\n                    beep();\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                if (inp == 2)\r\n                {\r\n\r\n                    //if (textBox7.SelectionLength \u003E= 0)\r\n                    // {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    // }\r\n                    panel6.Visible = false;\r\n                    comboBox2.Visible = false;\r\n                    inp = 0;\r\n                }\r\n            }\r\n            textBox7.Focus();\r\n            textBox7.Text = \u0022\u0022;\r\n\r\n            //this.Close();\r\n        }\r\n\r\n        private void button19_Click(object sender, EventArgs e)\r\n        {\r\n            monitor();\r\n\r\n        }\r\n\r\n        private void button21_Click(object sender, EventArgs e)\r\n        {\r\n            //panel16.Visible = true;\r\n            // ler_linha();\r\n            //CloseExcel();\r\n            ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo2.RedirectStandardOutput = true;\r\n            startInfo2.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo2.CreateNoWindow = true;\r\n            startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo2);\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button22_Click(object sender, EventArgs e)\r\n        {\r\n            CloseExcel();\r\n            this.Close();\r\n        }\r\n\r\n\r\n\r\n        private void check_if_exist_number2()\r\n        {\r\n\r\n            // richTextBox17.Text = \u0022\u0022;\r\n            //    label37.Text = \u0022Bloquear\u0022;\r\n            int rich1 = Int16.Parse(richTextBox18.Text.Trim()) - 1;\r\n            string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n            //  MessageBox.Show(secondLine);\r\n            //string checline = secondLine.Trim();\r\n            if (secondLine2 != null)\r\n            {\r\n\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich16 = Int16.Parse(richTextBox18.Text.Trim()) - 1;\r\n                int lab3 = Int16.Parse(label3.Text);\r\n                if (rich16 \u003C= lab3)\r\n                {\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich16);\r\n\r\n                    //  MessageBox.Show(secondLine);\r\n                    //string checline = secondLine.Trim();\r\n\r\n                    try\r\n                    {\r\n\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            button2.Enabled = true;\r\n                            // richTextBox15.Text = \u0022\u0022;\r\n                            /*\r\n                             richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                             richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                             richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                             richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                             richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            */\r\n\r\n\r\n                            //Number : 1 : Name : GUSTAVO MAGALHAES : Compay : DOF :Funcition:  GERENTE DE PROJETO  :Id: 8866640719 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 07/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : : :Conv\u00E9s :14/10/2022 :28/10/2022 :.\r\n\r\n                            richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                            richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                            richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                            richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n\r\n                          //  comboBox1.Items.Clear();\r\n                          //  comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                          //  comboBox1.SelectedIndex = 0;\r\n\r\n                            richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                            {\r\n                                richTextBox8.Text = \u0022N/A\u0022;\r\n                            }\r\n\r\n                            maskedTextBox1.Visible = true;\r\n                            maskedTextBox2.Visible = true;\r\n                            maskedTextBox3.Visible = true;\r\n                            maskedTextBox4.Visible = true;\r\n                            maskedTextBox5.Visible = true;\r\n                            // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            // maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            try\r\n                            {\r\n\r\n                                string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n\r\n                                maskedTextBox1.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                // MessageBox.Show(teste);\r\n                                maskedTextBox2.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n\r\n                            if (richTextBox3.Text != \u0022\u0022)\r\n                            {\r\n                                //  comboBox1.Items.Clear();\r\n                                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                                string x = sr.ReadToEnd();\r\n                                string[] y = x.Split(\u0027\\n\u0027);\r\n                                foreach (string s in y)\r\n                                {\r\n                                    comboBox1.Items.Add(s);\r\n                                }\r\n                                sr.Close();\r\n                            }\r\n\r\n\r\n\r\n\r\n                            maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                            maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                            maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                            maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                            maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                            {\r\n                                // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            try\r\n                            {\r\n                                richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33].Trim();\r\n                            }\r\n                            catch\r\n                            {\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n                            }\r\n                            richTextBox6.Visible = true;\r\n                            richTextBox7.Visible = true;\r\n                            dateTimePicker1.Visible = false;\r\n                            dateTimePicker2.Visible = false;\r\n\r\n                            try\r\n                            {\r\n\r\n                                richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n                                String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n\r\n                                label34.Text = local222;\r\n                                if (local222 == place1[band])\r\n                                {\r\n                                    local1.Checked = true;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place2[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = true;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place4[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = true;\r\n                                }\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                        }\r\n\r\n                        string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n                        if (sec == \u0022Bloqueado\u0022)\r\n                        {\r\n                            button2.Enabled = false;\r\n                            button17.Enabled = false;\r\n                            //  button5.Image = ((System.Drawing.Image)(resources.GetObject(\u0022_bButton.Image\u0022)));\r\n                            label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                            textbloc = richTextBox17.Text.Trim();\r\n                            textbloc2 = richTextBox17.Text.Trim();\r\n                            //label37.Text = sec;\r\n                            btloc.Visible = true;\r\n                            button7.Visible = false;\r\n                            label37.Visible = true;\r\n                            btloc.Image = Properties.Resources.lock0;\r\n                            ////  btloc.Text = \u0022Bloqueado\u0022;\r\n                            CHLocked.Text = \u0022Desbloquear\u0022;\r\n                            //  textbloc = \u0022\u0022;\r\n                            //  textbloc2 = \u0022\u0022;\r\n                        }\r\n                        else\r\n                        {\r\n                            richTextBox17.Text = \u0022\u0022;\r\n                            //  label37.Text = \u0022Desbloqueado\u0022;\r\n                            CHLocked.Text = \u0022Bloquear\u0022;\r\n                            btloc.Visible = false;\r\n                            button7.Visible = true;\r\n                            button2.Enabled = true;\r\n                            button17.Enabled = true;\r\n                            //  btloc.Text = \u0022 \u0022;\r\n                            // btloc.Image = Properties.Resources.lock2;\r\n                        }\r\n                        String pass11 = secondLine.Split(\u0027:\u0027)[11];\r\n                    }\r\n\r\n                    catch\r\n                    {\r\n                        // MessageBox.Show(\u0022N\u00E3o h\u00E1 cadastro com este N\u00FAmero\u0022);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //  button2.Enabled = true;\r\n                //   button17.Enabled = true;\r\n                //  button29.Enabled = false;\r\n                // richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                //panel11.Size = new Size(360, 355);\r\n                //panel11.Location = new System.Drawing.Point(95, 150);\r\n                //pictureBox7.Size = new Size(330, 320);\r\n                // pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n                try\r\n                {\r\n\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                id_exist = false;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                maskedTextBox1.Text = \u0022\u0022;\r\n                maskedTextBox2.Text = \u0022\u0022;\r\n                maskedTextBox3.Text = \u0022\u0022;\r\n                maskedTextBox4.Text = \u0022\u0022;\r\n                maskedTextBox5.Text = \u0022\u0022;\r\n                maskedTextBox1.Visible = false;\r\n                maskedTextBox2.Visible = false;\r\n                maskedTextBox3.Visible = false;\r\n                maskedTextBox4.Visible = false;\r\n                maskedTextBox5.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n\r\n\r\n                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n            }\r\n        }\r\n\r\n        private void check_if_exist_number()\r\n        {\r\n\r\n            // richTextBox17.Text = \u0022\u0022;\r\n            //    label37.Text = \u0022Bloquear\u0022;\r\n            int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n            string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n            //  MessageBox.Show(secondLine);\r\n            //string checline = secondLine.Trim();\r\n            if (secondLine2 != null)\r\n            {\r\n\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich16 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                int lab3 = Int16.Parse(label3.Text);\r\n                if (rich16 \u003C= lab3)\r\n                {\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich16);\r\n\r\n                    //  MessageBox.Show(secondLine);\r\n                    //string checline = secondLine.Trim();\r\n\r\n                    try\r\n                    {\r\n\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            button2.Enabled = true;\r\n                            // richTextBox15.Text = \u0022\u0022;\r\n                            /*\r\n                             richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                             richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                             richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                             richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                             richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            */\r\n\r\n\r\n                            //Number : 1 : Name : GUSTAVO MAGALHAES : Compay : DOF :Funcition:  GERENTE DE PROJETO  :Id: 8866640719 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 07/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : : :Conv\u00E9s :14/10/2022 :28/10/2022 :.\r\n\r\n                            richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                            richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                            richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                            richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n                            richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                            {\r\n                                richTextBox8.Text = \u0022N/A\u0022;\r\n                            }\r\n\r\n                            maskedTextBox1.Visible = true;\r\n                            maskedTextBox2.Visible = true;\r\n                            maskedTextBox3.Visible = true;\r\n                            maskedTextBox4.Visible = true;\r\n                            maskedTextBox5.Visible = true;\r\n                            // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            // maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            try\r\n                            {\r\n\r\n                                string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n\r\n                                maskedTextBox1.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                // MessageBox.Show(teste);\r\n                                maskedTextBox2.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n\r\n                            if (richTextBox3.Text != \u0022\u0022)\r\n                            {\r\n                                //  comboBox1.Items.Clear();\r\n                                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                                string x = sr.ReadToEnd();\r\n                                string[] y = x.Split(\u0027\\n\u0027);\r\n                                foreach (string s in y)\r\n                                {\r\n                                    comboBox1.Items.Add(s);\r\n                                }\r\n                                sr.Close();\r\n                            }\r\n\r\n\r\n\r\n\r\n                            maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                            maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                            maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                            maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                            maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                            {\r\n                                // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            try\r\n                            {\r\n                                richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33].Trim();\r\n                            }\r\n                            catch\r\n                            {\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n                            }\r\n                            richTextBox6.Visible = true;\r\n                            richTextBox7.Visible = true;\r\n                            dateTimePicker1.Visible = false;\r\n                            dateTimePicker2.Visible = false;\r\n\r\n                            try\r\n                            {\r\n\r\n                                richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n                                String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n\r\n                                label34.Text = local222;\r\n                                if (local222 == place1[band])\r\n                                {\r\n                                    local1.Checked = true;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place2[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = true;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place4[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = true;\r\n                                }\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                        }\r\n\r\n                        string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n                        if (sec == \u0022Bloqueado\u0022)\r\n                        {\r\n                            button2.Enabled = false;\r\n                            button17.Enabled = false;\r\n                            //  button5.Image = ((System.Drawing.Image)(resources.GetObject(\u0022_bButton.Image\u0022)));\r\n                            label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                            textbloc = richTextBox17.Text.Trim();\r\n                            textbloc2 = richTextBox17.Text.Trim();\r\n                            //label37.Text = sec;\r\n                            btloc.Visible = true;\r\n                            button7.Visible = false;\r\n                            label37.Visible = true;\r\n                            btloc.Image = Properties.Resources.lock0;\r\n                            ////  btloc.Text = \u0022Bloqueado\u0022;\r\n                            CHLocked.Text = \u0022Desbloquear\u0022;\r\n                            //  textbloc = \u0022\u0022;\r\n                            //  textbloc2 = \u0022\u0022;\r\n                        }\r\n                        else\r\n                        {\r\n                            richTextBox17.Text = \u0022\u0022;\r\n                            //  label37.Text = \u0022Desbloqueado\u0022;\r\n                            CHLocked.Text = \u0022Bloquear\u0022;\r\n                            btloc.Visible = false;\r\n                            button7.Visible = true;\r\n                            button2.Enabled = true;\r\n                            button17.Enabled = true;\r\n                            //  btloc.Text = \u0022 \u0022;\r\n                            // btloc.Image = Properties.Resources.lock2;\r\n                        }\r\n                        String pass11 = secondLine.Split(\u0027:\u0027)[11];\r\n                    }\r\n\r\n                    catch\r\n                    {\r\n                        // MessageBox.Show(\u0022N\u00E3o h\u00E1 cadastro com este N\u00FAmero\u0022);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //  button2.Enabled = true;\r\n                //   button17.Enabled = true;\r\n              //  button29.Enabled = false;\r\n                // richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                //panel11.Size = new Size(360, 355);\r\n                //panel11.Location = new System.Drawing.Point(95, 150);\r\n                //pictureBox7.Size = new Size(330, 320);\r\n                // pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n                try\r\n                {\r\n\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                id_exist = false;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                maskedTextBox1.Text = \u0022\u0022;\r\n                maskedTextBox2.Text = \u0022\u0022;\r\n                maskedTextBox3.Text = \u0022\u0022;\r\n                maskedTextBox4.Text = \u0022\u0022;\r\n                maskedTextBox5.Text = \u0022\u0022;\r\n                maskedTextBox1.Visible = false;\r\n                maskedTextBox2.Visible = false;\r\n                maskedTextBox3.Visible = false;\r\n                maskedTextBox4.Visible = false;\r\n                maskedTextBox5.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n\r\n\r\n                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox16_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                label37.Text = \u0022\u0022;\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                check_if_exist_number();\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void button7_Click(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE BLOQUEAR O ACESSO?\u0022, \u0022BLOQUEIO DE ACESSO\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    bb = \u0022Bloqueado\u0022;\r\n                    bloqueio();\r\n                    //  richTextBox17.Text = \u0022\u0022;\r\n                    btloc.Image = Properties.Resources.lock0;\r\n                    btloc.Visible = true;\r\n                    button7.Visible = false;\r\n                    richTextBox17.Text = \u0022\u0022;\r\n                    button2.Enabled = false;\r\n                    button17.Enabled = false;\r\n                   \r\n                    //myThread.Abort();\r\n                 //   checa_host();\r\n                    // MessageBox.Show(\u0022button7_Click\u0022);\r\n                    // atualiza_compartilhamento();\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022FAVOR JUSTIFICAR O MOTIVO DO BLOQUEIO\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void btloc_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n\r\n                if (r7 == true)\r\n                {\r\n                    DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE DESBLOQUEAR O ACESSO ? \u0022, \u0022DESBLOQUEIO DE ACESSO\u0022, MessageBoxButtons.YesNo);\r\n                    if (dialogResult == DialogResult.Yes)\r\n                    {\r\n                        bb = \u0022Desbloqueado\u0022;\r\n                        bloqueio();\r\n                        //  richTextBox17.Text = \u0022\u0022;\r\n                        btloc.Visible = false;\r\n                        button7.Visible = true;\r\n                        button2.Enabled = true;\r\n                        button17.Enabled = true;\r\n                        richTextBox17.Text = \u0022\u0022;\r\n                        //myThread.Abort();\r\n                     //   checa_host();\r\n                   //    MessageBox.Show(\u0022btloc_Click\u0022);\r\n                        // atualiza_compartilhamento();\r\n                    }\r\n                    else if (dialogResult == DialogResult.No)\r\n                    {\r\n                        //   btloc.Image = Properties.Resources.lock0;\r\n                        //  btloc.Image = Properties.Resources.lock2;\r\n\r\n                    }\r\n                    r7 = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022FAVOR JUSTIFICAR O MOTIVO DO DESBLOQUEIO\u0022);\r\n            }\r\n\r\n            /*\r\n\r\n            textbloc = richTextBox17.Text.Trim();\r\n            bt1\u002B\u002B;\r\n            if(bt1== 1)\r\n            {\r\n\r\n\r\n              //  btloc.Image = Properties.Resources.lock0;\r\n              //  btloc.Text = \u0022Bloqueado\u0022;\r\n            }\r\n            if (bt1 \u003E= 2)\r\n            {\r\n                if (textbloc!= textbloc2 \u0026\u0026 richTextBox17.Text != \u0022\u0022)\r\n                {\r\n\r\n                    btloc.Image = Properties.Resources.lock2;\r\n\r\n                    \r\n                    DialogResult dialogResult = MessageBox.Show(\u0022Sure\u0022, \u0022Some Title\u0022, MessageBoxButtons.YesNo);\r\n                    if (dialogResult == DialogResult.Yes)\r\n                    {\r\n                        bloqueio();\r\n                        richTextBox17.Text = \u0022\u0022;\r\n                    }\r\n                    else if (dialogResult == DialogResult.No)\r\n                    {\r\n                        btloc.Image = Properties.Resources.lock0;\r\n\r\n                        textbloc = textbloc2;\r\n                        richTextBox17.Text = textbloc2;\r\n                    }\r\n\r\n                    //  r7 = false;\r\n                    bt1 = 0;\r\n                }\r\n             \r\n            }\r\n            */\r\n        }\r\n        int get_pic = 0;\r\n        private void button15_Click(object sender, EventArgs e)\r\n        {\r\n            try\r\n            {\r\n\r\n                get_pic\u002B\u002B;\r\n                if (get_pic == 1)\r\n                {\r\n                    if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022)\r\n                    {\r\n                        try\r\n                        {\r\n\r\n                            button15.Text = \u0022Press again to take a picture\u0022;\r\n                            // if(cboCamera.)\r\n                            //  if(cboCamera.Items(1)==\u0022teste\u0022)\r\n\r\n                            int iten = cboCamera.Items.Count;\r\n                            if (iten \u003E= 4)\r\n                            {\r\n                                iten = 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                iten = 0;\r\n\r\n                            }\r\n                            //  MessageBox.Show(iten.ToString());\r\n                            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[0].MonikerString);\r\n                            videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                            videoCaptureDevice.Start();\r\n                            pictureBox7.Image = Properties.Resources.barcode1;\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            MessageBox.Show(\u0022Erro \u0022 \u002B ex.Message);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (get_pic == 2)\r\n                {\r\n\r\n                    if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022)\r\n                    {\r\n                        try\r\n                        {\r\n                            if (videoCaptureDevice.IsRunning)\r\n                            {\r\n\r\n                                caminhoImagemSalva2 = @\u0022c:\\compartilhamento\\data_new_picture\\\u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022.jpg\u0022;\r\n                                //caminhoImagemSalva2.\r\n                                pictureBox7.Image.Save(caminhoImagemSalva2, ImageFormat.Jpeg);\r\n\r\n                                copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                //  clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                                button15.Text = \u0022Face picture Include\u0022;\r\n                                button15.Visible = false;\r\n\r\n\r\n\r\n                            }\r\n\r\n                            if (videoCaptureDevice.IsRunning)\r\n                            {\r\n                                videoCaptureDevice.Stop();\r\n                                pictureBox7.Image = Properties.Resources.barcode1;\r\n\r\n                            }\r\n                        }\r\n                        catch\r\n                        {\r\n\r\n                        }\r\n                        //myThread.Abort();\r\n                       // checa_host();\r\n                        //  MessageBox.Show(\u0022button15_Click\u0022);\r\n                        // atualiza_compartilhamento();\r\n                    }\r\n\r\n                    get_pic = 0;\r\n                }\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n\r\n        }\r\n        private void check_locked()\r\n        {\r\n            string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n            // Start at line number 2 because there is a header\r\n            for (int i = 1; i \u003C lines.Length; i\u002B\u002B)\r\n            {\r\n                // 2 ways to do this:\r\n                if (lines[i].Contains(richTextBox4.Text))\r\n                {\r\n\r\n                    String pass0 = lines[1].Split(\u0027:\u0027)[26];\r\n\r\n                    label37.Text = pass0;\r\n\r\n                    if (label37.Text.Trim() == \u0022Bloqueado\u0022)\r\n                    {\r\n                        String pass1 = lines[1].Split(\u0027:\u0027)[28];\r\n                        richTextBox17.Text = pass1;\r\n                    }\r\n                    //   MessageBox.Show(pass0);\r\n                    // string text3 = lines[i];\r\n                    // string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B label37.Text \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    // string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    // text = text.Replace(text3, text4);\r\n                    // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n\r\n                }\r\n\r\n\r\n                // or a more structured way:\r\n                //  if (lines[i].Split(\u0027|\u0027)[2].Contains(\u0022ABC\u0022))\r\n                // {\r\n                // Copy it where you want\r\n                // }\r\n            }\r\n        }\r\n        private void ler_linha2()\r\n        {\r\n            criterio = \u0022 \u0022;\r\n            lbResultado.Items.Clear();\r\n            criterio = richTextBox4.Text;\r\n            string[] linhas = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n\r\n\r\n\r\n            if (richTextBox4.Text.Length \u003E= 7)\r\n            {\r\n                foreach (string linha in linhas)\r\n                {\r\n                    // cri\u002B\u002B;\r\n                    if (linha.Contains(criterio) \u0026\u0026 criterio != \u0022 \u0022)\r\n                    {\r\n                        cri = 1;\r\n                        lbResultado.Items.Add(linha);\r\n                        //  Number: 0 : Name: 2 : Compay: 2 :Funcition: 2  :Id: 22222222222 : E - mail : 2 : Vessel: 2 : Project: 2 : ASO: 2 : NR - 34 : 2 : Vaccine - 1 : 2 : Vaccine - 2 : 2 : Booster vaccine : 2\r\n                        //     Number:  : Name: Cristiano de Araujo Calheiros : Compay: Googlemarine: Funcition: \r\n                        //Engenheiro: Id: 111098414 : E - mail : cristiano.engengaria.ac @gmail.com: Vessel:\r\n                        //Skandi Salvador : Project: Docagem: ASO: 11 / 12 / 23 : NR - 34 : 11 / 12 / 23 :\r\n                        //Vaccine - 1 : 11 / 12 / 23 : Vaccine - 2 : 11 / 12 / 23 : Booster vaccine : 11 / 12 / 23           // Number: 14 : Name: 1 : Compay: 4 :Funcition: 2  :Id: 366666666 : E - mail : 7 : Vessel: 5 : Project: 6 : ASO: 8 : NR - 34 : 9 : Vaccine - 1 : 10 : Vaccine - 2 : 11 : Booster vaccine : 12\r\n                        string[] parts = linha.Split(\u0027:\u0027);\r\n                        string whatIWant0 = parts[1].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant1 = parts[1].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant2 = parts[3].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant3 = parts[5].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant4 = parts[7].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant5 = parts[9].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant6 = parts[11].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant7 = parts[13].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant8 = parts[15].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant9 = parts[17].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant10 = parts[19].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant11 = parts[21].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant12 = parts[23].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant13 = parts[25].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                                                              // string whatIWant14 = parts[23].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n\r\n                        // Name: Googlemarine: Compay: Cristiano calheiros  :Funcition: Engenheiro: Id: 111098888 : E - mail : cristiano.engenharia.ac @gmail.com: Vessel: Skandi Salvador : Project: reparo: ASO: 11 / 02 / 2023 : NR - 34 : 11 / 02 / 2023 : Vaccine - 1 : 11 / 02 / 2023 : Vaccine - 2 : 11 / 02 / 2023 : Booster vaccine : 11 / 02 / 2023\r\n                        richTextBox16.Text = whatIWant0;//.Remove(0, 8);   // number\r\n                        richTextBox2.Text = whatIWant2;//.Remove(0, 6);    //name\r\n                        richTextBox1.Text = whatIWant3; //.Remove(0, 9);   // company\r\n                        richTextBox3.Text = whatIWant4;//.Remove(0, 10);   // function\r\n                        richTextBox4.Text = whatIWant5;//.Remove(0, 4);    //  id\r\n                        richTextBox8.Text = whatIWant6;//.Remove(0, 4);   // e-mail\r\n                                                       //  richTextBox5.Text = whatIWant7;//.Remove(0, 8);    // vessel\r\n                                                       //  richTextBox9.Text = whatIWant8;//.Remove(0, 8);    // projeto\r\n                        richTextBox10.Text = whatIWant9;//.Remove(0, 8);   // aso\r\n                        richTextBox11.Text = whatIWant10;//.Remove(0, 8);   // nr34\r\n                        richTextBox12.Text = whatIWant11;//.Remove(0, 8);  // vaccine 1\r\n                        richTextBox13.Text = whatIWant12;//.Remove(0, 8);  // vaccine 2\r\n                        richTextBox14.Text = whatIWant13;//.Remove(0, 8);  // refo\u00E7o\r\n\r\n\r\n                        maskedTextBox1.Text = richTextBox10.Text;\r\n                        maskedTextBox2.Text = richTextBox11.Text;\r\n                        maskedTextBox3.Text = richTextBox12.Text;\r\n                        maskedTextBox4.Text = richTextBox13.Text;\r\n                        maskedTextBox5.Text = richTextBox14.Text;\r\n                        // richTextBox15.Text = whatIWant13;//.Remove(0, 8);  // refo\u00E7o\r\n\r\n                        check_locked();\r\n                    }\r\n                    else\r\n                    {\r\n                        cri = 0;\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n            if (lbResultado.Items.Count == 0)\r\n            {\r\n                if (confere == 1)\r\n                {\r\n                    escrever_palavra2();\r\n                }\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                // richTextBox4.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n\r\n\r\n\r\n            }\r\n\r\n            confere = 0;\r\n\r\n        }\r\n        private void escrever_palavra2()\r\n        {\r\n\r\n\r\n            string nomeArquivo = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n            string textoInserir = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022  :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text;\r\n            int numeroLinha = Convert.ToInt32(Linhas);\r\n\r\n            ArrayList linhas = new ArrayList();\r\n\r\n            if (File.Exists(nomeArquivo))\r\n            {\r\n                try\r\n                {\r\n                    rdr = new StreamReader(nomeArquivo);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022O arquivo : \u0022 \u002B nomeArquivo \u002B \u0022 n\u00E3o existe...\u0022);\r\n                return;\r\n            }\r\n            string linha;\r\n\r\n            while ((linha = rdr.ReadLine()) != null)\r\n            {\r\n                try\r\n                {\r\n                    linhas.Add(linha);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            rdr.Close();\r\n\r\n            if (linhas.Count \u003E numeroLinha)\r\n                linhas.Insert(numeroLinha, textoInserir);\r\n            else\r\n                linhas.Add(textoInserir);\r\n\r\n            StreamWriter wrtr = new StreamWriter(nomeArquivo);\r\n\r\n            foreach (string strNewLine in linhas)\r\n            {\r\n                wrtr.WriteLine(strNewLine);\r\n            }\r\n            wrtr.Close();\r\n            textoInserir = \u0022\u0022;\r\n            // txtArquivo.Text = AbreArquivoTexto(nomeArquivo);\r\n\r\n        }\r\n        private void check_id_onboard()\r\n        {\r\n            try\r\n            {\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                // int rich2 = Int32.Parse(label3.Text);\r\n                // int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n                for (int i = 0; i \u003C Int32.Parse(label27.Text); i\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).ElementAtOrDefault(i);\r\n                    \r\n                    //  MessageBox.Show(secondLine.Split(\u0027:\u0027)[5].Trim() \u002B \u0022//\u0022 \u002B comboBox1.SelectedItem);\r\n                //    string selected = this.comboBox1.SelectedItem.ToString();\r\n                //    label63.Text = selected;\r\n                 //   MessageBox.Show(selected);\r\n\r\n\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[1].Trim() == richTextBox16.Text.Trim())\r\n                        {\r\n                            id_onboard = true;\r\n                            richTextBox16.Text = \u0022\u0022;\r\n                            richTextBox2.Text = \u0022\u0022;\r\n                            richTextBox3.Text = \u0022\u0022;\r\n                            richTextBox4.Text = \u0022\u0022;\r\n                            richTextBox1.Text = \u0022\u0022;\r\n                            richTextBox8.Text = \u0022\u0022;\r\n                            richTextBox10.Text = \u0022\u0022;\r\n                            richTextBox11.Text = \u0022\u0022;\r\n                            richTextBox12.Text = \u0022\u0022;\r\n                            richTextBox13.Text = \u0022\u0022;\r\n                            richTextBox14.Text = \u0022\u0022;\r\n                            richTextBox15.Text = \u0022\u0022;\r\n                            maskedTextBox1.Text = \u0022\u0022;\r\n                            maskedTextBox2.Text = \u0022\u0022;\r\n                            maskedTextBox3.Text = \u0022\u0022;\r\n                            maskedTextBox4.Text = \u0022\u0022;\r\n                            maskedTextBox5.Text = \u0022\u0022;\r\n                            button2.Enabled = false;\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }\r\n                if (label27.Text == \u00220\u0022)\r\n                {\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                //  id_onboard = false;\r\n            }\r\n        }\r\n\r\n        private void check_id_onboard2()\r\n        {\r\n            try\r\n            {\r\n                id_onboard2 = false;\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                // int rich2 = Int32.Parse(label3.Text);\r\n                // int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n\r\n                int qtdLinhas = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Count();\r\n                    for (int i = 0; i \u003C qtdLinhas; i\u002B\u002B)\r\n                    {\r\n\r\n                        string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).ElementAtOrDefault(i);\r\n                        //  MessageBox.Show(secondLine.Split(\u0027:\u0027)[5].Trim());\r\n                        if (secondLine != null)\r\n                        {\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[1].Trim() == richTextBox16.Text.Trim() \u0026\u0026 secondLine.Split(\u0027:\u0027)[5].Trim() != label63.Text.Trim())\r\n                            {\r\n                                \r\n                                //  MessageBox.Show(\u0022diferente\u0022);\r\n                         \r\n                                id_onboard2 = true;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n               \r\n\r\n            }\r\n            catch\r\n            {\r\n                //  id_onboard = false;\r\n            }\r\n        }\r\n\r\n\r\n        private void check_if_exist_id()\r\n        {\r\n            try\r\n            {\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich2 = Int32.Parse(label3.Text);\r\n                int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n                for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(i);\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text)\r\n                        {\r\n\r\n                            try\r\n                            {\r\n\r\n                                pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n                                pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                            }\r\n\r\n                            if (ok_but2 == false)\r\n                            {\r\n\r\n                                try\r\n                                {\r\n                                    String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n                                    label34.Text = local222;\r\n                                    if (local222 == place1[band])\r\n                                    {\r\n                                        local1.Checked = true;\r\n                                        local2.Checked = false;\r\n                                        local4.Checked = false;\r\n                                    }\r\n                                    if (local222 == place2[band])\r\n                                    {\r\n                                        local1.Checked = false;\r\n                                        local2.Checked = true;\r\n                                        local4.Checked = false;\r\n                                    }\r\n                                    if (local222 == place4[band])\r\n                                    {\r\n                                        local1.Checked = false;\r\n                                        local2.Checked = false;\r\n                                        local4.Checked = true;\r\n                                    }\r\n                                    richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                    richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n\r\n                                }\r\n                                catch\r\n                                {\r\n\r\n                                }\r\n\r\n                                /*\r\n                                richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                                */\r\n\r\n\r\n                                richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n\r\n                                comboBox1.Items.Clear();\r\n\r\n\r\n\r\n                                comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                                comboBox1.SelectedIndex = 0;\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                                {\r\n                                    richTextBox8.Text = \u0022N/A\u0022;\r\n                                }\r\n\r\n                                maskedTextBox1.Visible = true;\r\n                                maskedTextBox2.Visible = true;\r\n                                maskedTextBox3.Visible = true;\r\n                                maskedTextBox4.Visible = true;\r\n                                maskedTextBox5.Visible = true;\r\n                                /*\r\n                                try\r\n                                {\r\n                                    string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                    //  MessageBox.Show(ok);\r\n                                    string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                    // MessageBox.Show(teste);\r\n                                    maskedTextBox1.Text = teste;\r\n\r\n\r\n                                    ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                    MessageBox.Show(ok);\r\n                                    //  MessageBox.Show(ok);\r\n                                    teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                    // MessageBox.Show(teste);\r\n                                    maskedTextBox2.Text = teste;\r\n                                }\r\n                                catch\r\n                                {\r\n\r\n                                }\r\n                                */\r\n                                // MessageBox.Show(secondLine);\r\n                                // MessageBox.Show(secondLine.Split(\u0027:\u0027)[9].Trim());\r\n                                maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                                maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                                maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                                maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                                maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                                }\r\n                                if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                                }\r\n                                if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n\r\n                                try\r\n                                {\r\n                                    richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33];\r\n                                }\r\n                                catch\r\n                                {\r\n                                    // richTextBox15.Text = \u0022\u0022;\r\n                                }\r\n                                // richTextBox6.Visible = true;\r\n                                // richTextBox7.Visible = true;\r\n                                // dateTimePicker1.Visible = false;\r\n                                // dateTimePicker2.Visible = false;\r\n                                //dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString();\r\n                                // dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString();\r\n\r\n\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[26].Trim() == \u0022Bloqueado\u0022)\r\n                            {\r\n                                button2.Enabled = false;\r\n                                button17.Enabled = false;\r\n                                button7.Visible = false;\r\n                                btloc.Visible = true;\r\n                                label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                                label37.Visible = true;\r\n                            }\r\n                            else\r\n                            {\r\n                                button2.Enabled = true;\r\n                                button17.Enabled = true;\r\n                                button7.Visible = true;\r\n                                btloc.Visible = false;\r\n                                label37.Visible = false;\r\n                            }\r\n                            id_exist = true;\r\n\r\n                            break;\r\n\r\n                        }\r\n\r\n                        label39.Text = i.ToString();\r\n                        //  MessageBox.Show((i).ToString());\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            if (i == rich2 - 1 \u0026\u0026 secondLine.Split(\u0027:\u0027)[9].Trim() != richTextBox4.Text)\r\n                            {\r\n                                richTextBox16.Text = \u0022\u0022;\r\n                                richTextBox2.Text = \u0022\u0022;\r\n                                richTextBox3.Text = \u0022\u0022;\r\n                                richTextBox4.Text = \u0022\u0022;\r\n                                richTextBox1.Text = \u0022\u0022;\r\n                                richTextBox8.Text = \u0022\u0022;\r\n                                richTextBox10.Text = \u0022\u0022;\r\n                                richTextBox11.Text = \u0022\u0022;\r\n                                richTextBox12.Text = \u0022\u0022;\r\n                                richTextBox13.Text = \u0022\u0022;\r\n                                richTextBox14.Text = \u0022\u0022;\r\n                                richTextBox15.Text = \u0022\u0022;\r\n                                maskedTextBox1.Text = \u0022\u0022;\r\n                                maskedTextBox2.Text = \u0022\u0022;\r\n                                maskedTextBox3.Text = \u0022\u0022;\r\n                                maskedTextBox4.Text = \u0022\u0022;\r\n                                maskedTextBox5.Text = \u0022\u0022;\r\n                                maskedTextBox1.Visible = false;\r\n                                maskedTextBox2.Visible = false;\r\n                                maskedTextBox3.Visible = false;\r\n                                maskedTextBox4.Visible = false;\r\n                                maskedTextBox5.Visible = false;\r\n                                button2.Enabled = false;\r\n                                button17.Enabled = false;\r\n                                id_exist = false;\r\n                                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                /// MessageBox.Show(\u0022N\u00C3O A DADOS CADASTRADOS!\u0022);\r\n            }\r\n\r\n            //  try\r\n            // {\r\n\r\n            //  string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n\r\n            // }\r\n            //  }\r\n\r\n\r\n\r\n\r\n            /*\r\n\r\n\r\n            if (richTextBox4.Text.Length \u003E= 5)\r\n            {\r\n                button2.Enabled = true;\r\n                button17.Enabled = true;\r\n                button29.Enabled = false;\r\n                richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                panel11.Size = new Size(360, 355);\r\n                panel11.Location = new System.Drawing.Point(95, 150);\r\n                pictureBox7.Size = new Size(330, 320);\r\n                pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n\r\n                richTextBox17.Text = \u0022\u0022;\r\n                //label37.Text = \u0022Bloquear\u0022;\r\n\r\n\r\n\r\n\r\n\r\n                try\r\n                {\r\n                    string path2 = richTextBox4.Text.ToString();\r\n                    Stream stream = File.Open(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text \u002B \u0022.jpg\u0022, FileMode.Open,\r\n                    FileAccess.Read, FileShare.Delete);\r\n                    pictureBox7.Image = Image.FromStream(stream);\r\n                    Bitmap bmp = new Bitmap(pictureBox7.Image);\r\n                    bmp.RotateFlip(RotateFlipType.Rotate180FlipY);\r\n                    pictureBox7.Image = bmp;\r\n                    stream.Close();\r\n\r\n                    //pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B path \u002B \u0022.jpg\u0022;\r\n                    //  pictureBox7.Image = new Bitmap(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B path \u002B \u0022.jpg\u0022);\r\n\r\n                    // pictureBox7.Dispose();\r\n\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    MessageBox.Show(\u0022N\u00E3o h\u00E1 foto cadastrada\u0022);\r\n                    string path = richTextBox4.Text.ToString();\r\n                    Stream stream = File.Open(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022, FileMode.Open,\r\n                    FileAccess.Read, FileShare.Delete);\r\n                    pictureBox7.Image = Image.FromStream(stream);\r\n\r\n                    Bitmap bmp = new Bitmap(pictureBox7.Image);\r\n                    bmp.RotateFlip(RotateFlipType.Rotate180FlipY);\r\n                    pictureBox7.Image = bmp;\r\n                    stream.Close();\r\n                    richTextBox4.Text = \u0022\u0022;\r\n                    richTextBox4.ReadOnly = false;\r\n                }\r\n                catch\r\n                {\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n                ler_linha2();\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            */\r\n        }\r\n        private void richTextBox4_TextChanged(object sender, EventArgs e)\r\n        {\r\n           \r\n\r\n\r\n                    if (richTextBox4.Text.Length \u003E= 5)\r\n            {\r\n                button15.Visible = true;\r\n\r\n                if (label7.Text == button28.Text)\r\n                {\r\n                    button2.Enabled = true;\r\n                    button17.Enabled = true;\r\n                    button29.Enabled = true;\r\n                }\r\n                else\r\n                {\r\n                    button2.Enabled = false;\r\n                    button17.Enabled = false;\r\n                    button29.Enabled = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                button15.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                button29.Enabled = false;\r\n            }\r\n\r\n            if (richTextBox4.Text == \u0022\u0022)\r\n            {\r\n                label46.Visible = true;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                button29.Enabled = false;\r\n            }\r\n            else\r\n            {\r\n                label46.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void pictureBox5_Click(object sender, EventArgs e)\r\n        {\r\n            band = 0;\r\n\r\n            lname.Text = label_nome[0];\r\n            lcompany.Text = label_emp[0];\r\n            lfunc.Text = label_Function[0];\r\n            lid.Text = label_Id[0];\r\n            lvessel.Text = label_vessel[0];\r\n            lproject.Text = label_porj[0];\r\n            lv1.Text = label_vaccine1[0];\r\n            lv2.Text = label_vaccine2[0];\r\n            lbustter.Text = label_reforco[0];\r\n            local1.Text = place1[0];\r\n            local2.Text = place2[0];\r\n            local3.Text = place3[0];\r\n            local4.Text = place4[0];\r\n            laccess.Text = label_acc[0];\r\n            level_yellow.Text = label_yellow[0];\r\n            level_green.Text = label_green[0];\r\n            level_red.Text = label_red[0];\r\n            lcheckin.Text = Label_initial[0];\r\n            lcheckout.Text = Label_final[0];\r\n            button1.Text = Label_Read_QRcode_On[0];\r\n            button28.Text = Label_Read_QRcode_Off[0];\r\n            button2.Text = Label_Create_QRcode[0];\r\n            button3.Text = Label_Show_data[0];\r\n            button4.Text = Label_Save_data[0];\r\n            //button5.Text = Label_Config[0];\r\n            button6.Text = Label_wifi[0];\r\n            button17.Text = Label_email[0];\r\n            button19.Text = Label_Mostrar_checkin[0];\r\n            button21.Text = Label_reset[0];\r\n            button22.Text = Label_fechar[0];\r\n            button8.Text = Label_entrada[0];\r\n            button9.Text = Label_saida[0];\r\n            button10.Text = Label_cancel[0];\r\n            label23.Text = label_onboard[0];\r\n            button27.Text = Label_reset_project[0];\r\n            button29.Text = label_reg[0];\r\n            label7.Text = Label_Read_QRcode_On[0];\r\n            label6.Text = onboard[0];\r\n            label_cad.Text = label_cad1[0];\r\n            label53.Text = Label_53[0];\r\n            button41.Text = bt_41[0];\r\n            button42.Text = bt_42[0];\r\n            button43.Text = bt_43[0];\r\n            button44.Text = bt_44[0];\r\n            button45.Text = bt_45[0];\r\n            regs.Text = bt_regis[0];\r\n            _cad = cad_mode[0];\r\n            _read = read_mode[0];\r\n        }\r\n\r\n        private void pictureBox6_Click(object sender, EventArgs e)\r\n        {\r\n            band = 1;\r\n            lname.Text = label_nome[1];\r\n            lcompany.Text = label_emp[1];\r\n            lfunc.Text = label_Function[1];\r\n            lid.Text = label_Id[1];\r\n            lvessel.Text = label_vessel[1];\r\n            lproject.Text = label_porj[1];\r\n            lv1.Text = label_vaccine1[1];\r\n            lv2.Text = label_vaccine2[1];\r\n            lbustter.Text = label_reforco[1];\r\n            local1.Text = place1[1];\r\n            local2.Text = place2[1];\r\n            local3.Text = place3[1];\r\n            local4.Text = place4[1];\r\n            laccess.Text = label_acc[1];\r\n            level_yellow.Text = label_yellow[1];\r\n            level_green.Text = label_green[1];\r\n            level_red.Text = label_red[1];\r\n            lcheckin.Text = Label_initial[1];\r\n            lcheckout.Text = Label_final[1];\r\n            button1.Text = Label_Read_QRcode_On[1];\r\n            button28.Text = Label_Read_QRcode_Off[1];\r\n            button2.Text = Label_Create_QRcode[1];\r\n            button3.Text = Label_Show_data[1];\r\n            button4.Text = Label_Save_data[1];\r\n            // button5.Text = Label_Config[1];\r\n            button6.Text = Label_wifi[1];\r\n            button17.Text = Label_email[1];\r\n            button19.Text = Label_Mostrar_checkin[1];\r\n            button21.Text = Label_reset[1];\r\n            button22.Text = Label_fechar[1];\r\n            button8.Text = Label_entrada[1];\r\n            button9.Text = Label_saida[1];\r\n            button10.Text = Label_cancel[1];\r\n            label23.Text = label_onboard[1];\r\n            button27.Text = Label_reset_project[1];\r\n            button29.Text = label_reg[1];\r\n            label7.Text = Label_Read_QRcode_On[1];\r\n            label6.Text = onboard[1];\r\n            label_cad.Text = label_cad1[1];\r\n            label53.Text = Label_53[1];\r\n            button41.Text = bt_41[1];\r\n            button42.Text = bt_42[1];\r\n            button43.Text = bt_43[1];\r\n            button44.Text = bt_44[1];\r\n            button45.Text = bt_45[1];\r\n            regs.Text = bt_regis[1];\r\n            _cad = cad_mode[1];\r\n            _read = read_mode[1];\r\n\r\n\r\n        }\r\n\r\n        private void richTextBox4_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter)\r\n            {\r\n                richTextBox1.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox4_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n\r\n            local1.Checked = false;\r\n            local2.Checked = false;\r\n            local3.Checked = false;\r\n            richTextBox6.Text = \u0022 \u0022;\r\n            richTextBox7.Text = \u0022 \u0022;\r\n            richTextBox15.Text = \u0022\u0022;\r\n            check_if_exist_id();\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                richTextBox6.Visible = true;\r\n                richTextBox7.Visible = true;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n\r\n               // button29.Enabled = false;\r\n            }\r\n            int lista_2 = 0;\r\n            for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n            {\r\n\r\n\r\n\r\n\r\n\r\n                //\r\n                lista_2\u002B\u002B;\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        private void button11_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button6_Click_2(object sender, EventArgs e)\r\n        {\r\n            // panel8.Location= new Point(Location.X,Location.Y);//Point(521,155);\r\n            panel8.Size = new Size(490, 353); //new Size(1030, 600);\r\n            wi\u002B\u002B;\r\n            if (wi == 1)\r\n            {\r\n                //online = true;\r\n                lview_AP.Items.Clear();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n\r\n\r\n                panel8.Visible = true;\r\n            }\r\n            if (wi == 2)\r\n            {\r\n                // online = false;\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                panel8.Visible = false;\r\n\r\n                wi = 0;\r\n            }\r\n\r\n            // System.Windows.Forms.Application.Exit();\r\n            //   this.Close();\r\n        }\r\n        private void testa_local()\r\n        {\r\n\r\n            if (local1.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local1val = 0;\r\n            }\r\n\r\n            if (local2.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local2val = 0;\r\n            }\r\n\r\n            if (local3.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local3val = 0;\r\n            }\r\n\r\n            if (local4.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local4val = 0;\r\n            }\r\n            if (level_yellow.Checked == false)\r\n            {\r\n                levelyellow = 0;\r\n            }\r\n            if (level_green.Checked == false)\r\n            {\r\n                levelgreen = 0;\r\n            }\r\n            if (level_red.Checked == false)\r\n            {\r\n                levelred = 0;\r\n            }\r\n        }\r\n        private void local1_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n\r\n\r\n\r\n                if (local1.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local1val = 1;\r\n                    local2.Checked = false;\r\n                    local4.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local1val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void local2_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n                if (local2.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local2val = 1;\r\n                    local1.Checked = false;\r\n                    local4.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local2val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void local4_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n                if (local4.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local4val = 1;\r\n                    local1.Checked = false;\r\n                    local2.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local4val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void button27_Click(object sender, EventArgs e)\r\n        {\r\n            password frm = new password();\r\n            frm.Show();\r\n        }\r\n\r\n        private void richTextBox17_Click(object sender, EventArgs e)\r\n        {\r\n            label37.Visible = false;\r\n        }\r\n\r\n        private void label37_Click(object sender, EventArgs e)\r\n        {\r\n            label37.Visible = false;\r\n        }\r\n\r\n        private void richTextBox17_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n                r7 = true;\r\n            }\r\n        }\r\n\r\n        private void richTextBox2_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox3_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox4_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox1_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox8_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            // e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox15_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox2_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox3.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox3_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox4.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox1_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox8.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox8_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox1.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox1_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox2.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox2_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox3.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox3_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox4.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox4_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox5.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox5_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox15.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox15_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox2.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n\r\n        public void sendGmail()\r\n        {\r\n            text1 = richTextBox2.Text;\r\n            text2 = richTextBox1.Text;\r\n            text5 = comboBox1.Text;\r\n            text6 = dateTimePicker1.Value.ToString(\u0022ddd, dd MMM yyyy\u0022);\r\n            text7 = dateTimePicker2.Value.ToString(\u0022ddd, dd MMM yyyy\u0022);\r\n            text8 = richTextBox8.Text;\r\n\r\n            // foi = true;\r\n            // panel1.BackColor = Color.Yellow;\r\n            // panel14.BackColor = Color.Yellow;\r\n            //  timer1.Stop();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            int width = panel4.Size.Width;\r\n            int height = panel4.Size.Height;\r\n            Bitmap bm = new Bitmap(width, height);\r\n            panel4.DrawToBitmap(bm, new System.Drawing.Rectangle(0, 0, width, height));\r\n            bm.Save(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n            //label4.Visible = false;\r\n\r\n\r\n            //pictureBox1.Image.Save(@\u0022C:\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n            System.Net.Mail.MailMessage mail = new System.Net.Mail.MailMessage();\r\n            mail.From = new System.Net.Mail.MailAddress(\u0022dof.qrcode@gmail.com\u0022);\r\n            try\r\n            {\r\n                mail.To.Add(text8); // para\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(\u0022erro send email\u0022, ex.Message);\r\n            }\r\n            mail.Subject = \u0022Libera\u00E7\u00E3o \u0022 \u002B text5 \u002B \u0022 - \u0022 \u002B text6 \u002B \u0022 at\u00E9 \u0022 \u002B text7 \u002B \u0022 -\u0022 \u002B text2;//id.Trim(); // assunto\r\n            mail.Body = \u0022\u003Cbr\u003E\u0022 \u002B text1 \u002B \u0022,\u003Cbr\u003E \u0022 \u002B \u0022\u003Cbr\u003ESeja bem vindo a DOF\u003Cbr\u003E \u003Cbr\u003ESegue o QR Code:\u003Cbr\u003EApresente este voucher de libera\u00E7\u00E3o, para acessar a embarca\u00E7\u00E3o \u003Cb\u003E\u0022 \u002B text5 \u002B \u0022\u003C/b\u003E \u003Cfont color=#FF0000\u003E, juntamente com documento de identifica\u00E7\u00E3o.\u0022;//id.Trim(); // mensagem\r\n            mail.IsBodyHtml = true;\r\n            System.Net.Mail.Attachment attachment;\r\n            mail.Attachments.Add(new System.Net.Mail.Attachment(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022));\r\n\r\n\r\n\r\n\r\n            try\r\n            {\r\n                using (var smtp = new SmtpClient(\u0022smtp.gmail.com\u0022))\r\n                {\r\n                    smtp.EnableSsl = true; // GMail requer SSL\r\n                    smtp.Port = 587;       // porta para SSL\r\n                    smtp.DeliveryMethod = SmtpDeliveryMethod.Network; // modo de envio\r\n                    smtp.UseDefaultCredentials = false; // vamos utilizar credencias especificas\r\n\r\n                    // seu usu\u00E1rio e senha para autentica\u00E7\u00E3o\r\n                    smtp.Credentials = new NetworkCredential(\u0022dof.qrcode@gmail.com\u0022, \u0022wammvtijopzdghps\u0022);\r\n                    //    smtp.Credentials = new NetworkCredential(\u0022alarm.boat@gmail.com\u0022, \u0022damhkxldmyegacvi\u0022);\r\n                    //  MessageBox.Show(\u0022acesso liberado\u0022);\r\n                    smtp.Send(mail);\r\n                    MessageBox.Show(\u0022E-mail sent with success\u0022);\r\n                    //  soma2 = 0;\r\n                    //   soma = 0;\r\n\r\n\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(\u0022erro send email\u0022, ex.Message);\r\n            }\r\n\r\n            mail.Attachments.Dispose();\r\n\r\n\r\n            // timer1.Start();\r\n\r\n        }\r\n        private void button17_Click(object sender, EventArgs e)\r\n        {\r\n            \r\n            rec = false;\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n               // ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n               // Process.Start(startInfo);\r\n                */\r\n                check_id_onboard();\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    alterado();\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n\r\n\r\n\r\n\r\n\r\n                        // \r\n                        //  if (textBox7.SelectionLength \u003E= 0)\r\n                        // {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                        // }\r\n                        /*\r\n                        String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                        String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                        String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                        String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                        String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                        String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n            */\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox2.Text != \u0022 \u0022 \u0026\u0026 richTextBox3.Text != \u0022 \u0022 \u0026\u0026 richTextBox4.Text != \u0022 \u0022 \u0026\u0026 comboBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n\r\n\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                    read_write();\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                    qr_generate = \u0022Qrcode Sent by E-mail\u0022;\r\n\r\n                                    //\r\n                                    // CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    //  create_qrcode();\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n                                    create_qrcode_new();\r\n                                    sendGmail();\r\n                                    \r\n                                    //  print_qrcode();\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO ENVIAR EMAIL SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void timer6_Tick(object sender, EventArgs e)\r\n        {\r\n            //  label52.Text = count2.ToString();\r\n\r\n\r\n\r\n\r\n            if (online_ == true)\r\n            {\r\n                //  panel12.BackColor = Color.GreenYellow;\r\n\r\n                // label40.Visible = false;\r\n\r\n            }\r\n\r\n            if (online_ == false)\r\n            {\r\n                //  panel12.BackColor = Color.Red;\r\n                // label40.Visible = false;\r\n            }\r\n\r\n            online_ = false;\r\n        }\r\n\r\n        private void textBox7_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox7_TextChanged_1(object sender, EventArgs e)\r\n        {\r\n            if (tempo == 0)\r\n            {\r\n                tempo = 1;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                timer4.Start();\r\n\r\n            }\r\n        }\r\n        int fil = 0;\r\n        private void button34_Click(object sender, EventArgs e)\r\n        {\r\n            //  MessageBox.Show(libera.ToString());\r\n            // if (libera == true)\r\n            // {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n                object misValue = System.Reflection.Missing.Value;\r\n                String line;\r\n\r\n                //   foreach (DataGridViewRow item in this.dataGridView1.SelectedRows)\r\n                //    {\r\n                //dataGridView1.Rows.RemoveAt(item.Index);\r\n                //   }\r\n\r\n                Microsoft.Office.Interop.Excel._Application app = new Microsoft.Office.Interop.Excel.Application();\r\n\r\n                Microsoft.Office.Interop.Excel._Workbook workbook = app.Workbooks.Add(Type.Missing);\r\n\r\n                Microsoft.Office.Interop.Excel._Worksheet worksheet = null;\r\n\r\n                // app.Visible = false;\r\n\r\n                worksheet = workbook.Sheets[\u0022Planilha1\u0022];\r\n                //  worksheet = workbook.ActiveSheet;\r\n\r\n                for (int i = 1; i \u003C dataGridView1.Columns.Count \u002B 1; i\u002B\u002B)\r\n                {\r\n                    worksheet.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;\r\n                }\r\n                // storing Each row and column value to excel sheet  \r\n                for (int i = 0; i \u003C dataGridView1.Rows.Count; i\u002B\u002B)\r\n                {\r\n                    for (int j = 0; j \u003C dataGridView1.Columns.Count; j\u002B\u002B)\r\n                    {\r\n                        if (dataGridView1.Rows[i].Cells[j].Value != null)\r\n                        {\r\n                            worksheet.Cells[i \u002B 2, j \u002B 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                string folder = @\u0022D:\\CRIPTOQRCODE_backup\\\u0022; //nome do diretorio a ser criado\r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n                if (!Directory.Exists(folder))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(folder);\r\n\r\n                }\r\n\r\n                if (Directory.Exists(folder))\r\n                {\r\n                    fil\u002B\u002B;\r\n\r\n                    worksheet.SaveAs(@\u0022D:\\CRIPTOQRCODE_backup\\\u0022 \u002B fil.ToString() \u002B \u0022FILTRO.xlsx\u0022, Type.Missing);\r\n                    //  app.\r\n\r\n                    app.Quit();\r\n\r\n                    System.Diagnostics.Process[] process = System.Diagnostics.Process.GetProcessesByName(\u0022Excel\u0022);\r\n                    foreach (System.Diagnostics.Process p in process)\r\n                    {\r\n                        if (!string.IsNullOrEmpty(p.ProcessName))\r\n                        {\r\n                            try\r\n                            {\r\n                                p.Kill();\r\n                            }\r\n                            catch { }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                MessageBox.Show(\u0022Backup concluido com sucesso!\u0022);\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    // textBox7.Focus();\r\n                    //textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n            ///  }\r\n        }\r\n\r\n        private void richTextBox3_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox3.Text == \u0022\u0022)\r\n            {\r\n                label45.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label45.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void richTextBox1_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox1.Text == \u0022\u0022)\r\n            {\r\n                label47.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label47.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void richTextBox8_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox8.Text == \u0022\u0022)\r\n            {\r\n                // label48.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                //  label48.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void listBox1_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            timer10.Enabled = false;\r\n            timer12.Enabled = false;\r\n            //Criar um MessageBox com os bot\u00F5es Sim e N\u00E3o e deixar o bot\u00E3o 2(N\u00E3o) selecionado por padr\u00E3o e comparar o bot\u00E3o apertado\r\n            if (DialogResult.Yes == MessageBox.Show(\u0022TEM CERTEZA QUE DESEJA DAR SAIDA MANUAL A ESTA PESSOA?\u0022, \u0022Confirma\u00E7\u00E3o\u0022, MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2))\r\n            {\r\n               \r\n                string bio = listBox1.SelectedItem.ToString().Trim();\r\n                // MessageBox.Show(bio);\r\n                string teste = \u0022\u0022;//\u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                int ver = 0;\r\n                string filePath = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n               \r\n\r\n                string tempFile = Path.GetTempFileName();\r\n\r\n                using (var sr = new StreamReader(filePath))\r\n                {\r\n                    using (var sw = new StreamWriter(tempFile))\r\n                    {\r\n                        string line;\r\n\r\n                        while ((line = sr.ReadLine()) != null)\r\n                        {\r\n                            if (line != listBox1.SelectedItem.ToString().Trim())\r\n                                sw.WriteLine(line);\r\n                        }\r\n                        sr.Close();\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                string line_to_delete = bio;\r\n                var oldLines = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                var newLines = oldLines.Where(line =\u003E !line.Contains(line_to_delete));\r\n                System.IO.File.WriteAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, newLines);\r\n\r\n                out_by_user();\r\n\r\n\r\n\r\n\r\n                // File.Delete(filePath);\r\n                // File.Move(tempFile, filePath);\r\n                // File.\r\n               // ler_linha();\r\n\r\n\r\n\r\n                while (listBox1.SelectedItems.Count \u003E 0)\r\n                {\r\n\r\n\r\n\r\n                    listBox1.Items.Remove(listBox1.SelectedItems[0]);\r\n                }\r\n\r\n                label67.Text = listBox1.SelectedItems.Count.ToString();\r\n\r\n                // Get first 12 characters substring from a string    \r\n                //   string authorName = bio.Substring(0,5);\r\n                //Sua rotina de exclus\u00E3o\r\n                //Confirmando exclus\u00E3o para o usu\u00E1rio\r\n                //   MessageBox.Show(\u0022Registro apagado com sucesso\u0022, \u0022Sucesso\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                //  MessageBox.Show(authorName, \u0022Sucesso\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                // myThread.Abort();\r\n               // checa_host();\r\n                //   MessageBox.Show(\u0022listBox1_MouseDoubleClick\u0022);\r\n                //atualiza_compartilhamento();\r\n\r\n                if (label27.Text == \u00220\u0022)\r\n                {\r\n                    panel6.Visible = false;\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // MessageBox.Show(\u0022Registro cancelado\u0022);\r\n            }\r\n\r\n            // ler_linha();\r\n\r\n            //  }\r\n\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void listBox1_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            pictureBox4.Visible = true;\r\n\r\n            try\r\n            {\r\n\r\n\r\n                if (listBox1.SelectedItem != null) {\r\n\r\n                    string path = listBox1.SelectedItem.ToString();\r\n\r\n                    string s = path;\r\n                    string id = s.Split(\u0022:\u0022.ToCharArray())[8];\r\n                    // MessageBox.Show(id);\r\n                    pictureBox4.Visible=true; \r\n                    pictureBox4.Load(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B id.Trim() \u002B \u0022.jpg\u0022);\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                pictureBox4.Visible = true;\r\n                pictureBox4.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n            }\r\n        }\r\n        int click_ = 0;\r\n        private void pictureBox4_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            click_\u002B\u002B;\r\n            if (click_ == 1)\r\n            {\r\n                pictureBox4.Size = new Size(500, 500);\r\n                pictureBox4.Location = new System.Drawing.Point(600, 300);\r\n            }\r\n            if (click_ == 2)\r\n            {\r\n                pictureBox4.Size = new Size(170, 140);\r\n                pictureBox4.Location = new System.Drawing.Point(1544, 6);\r\n                click_ = 0;//847; 56\r\n            }\r\n        }\r\n\r\n        private void pictureBox4_MouseDoubleClick_1(object sender, MouseEventArgs e)\r\n        {\r\n            click_\u002B\u002B;\r\n            if (click_ == 1)\r\n            {\r\n                pictureBox4.Size = new Size(500, 500);\r\n                pictureBox4.Location = new System.Drawing.Point(600, 300);\r\n            }\r\n            if (click_ == 2)\r\n            {\r\n                pictureBox4.Size = new Size(170, 140);\r\n                pictureBox4.Location = new System.Drawing.Point(1544, 6);\r\n                click_ = 0;//847; 56\r\n            }\r\n        }\r\n\r\n        private void button18_Click(object sender, EventArgs e)\r\n        {\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n            panel6.Visible = false;\r\n        }\r\n\r\n        private void richTextBox16_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                button7.Visible = false;\r\n                btloc.Visible = false;\r\n                button15.Visible = false;\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void richTextBox4_Click(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text == \u0022\u0022)\r\n            {\r\n                button15.Visible = false;\r\n            }\r\n        }\r\n        private void GetBiosInformation()\r\n        {\r\n            string relDt = \u0022\u0022;\r\n            try\r\n            {\r\n                string login = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\login.txt\u0022);\r\n                ManagementObjectSearcher mSearcher = new ManagementObjectSearcher(\u0022SELECT SerialNumber, SMBIOSBIOSVersion, ReleaseDate FROM Win32_BIOS\u0022);\r\n                ManagementObjectCollection collection = mSearcher.Get();\r\n                foreach (ManagementObject obj in collection)\r\n                {\r\n\r\n                    // MessageBox.Show((string)obj[\u0022SerialNumber\u0022]);\r\n                    // textBox13.Text = (string)obj[\u0022SerialNumber\u0022];\r\n                    // lblBiosSerial.Text = (string)obj[\u0022SerialNumber\u0022];\r\n                    // lblBiosVersion.Text = (string)obj[\u0022SMBIOSBIOSVersion\u0022];\r\n                    relDt = (string)obj[\u0022ReleaseDate\u0022];\r\n                    DateTime dt = ManagementDateTimeConverter.ToDateTime(relDt);\r\n                    //  lblBiosDate.Text = dt.ToString(\u0022dd-MMM-yyyy\u0022);//date format\r\n                    if (login.Trim() != (string)obj[\u0022SerialNumber\u0022])\r\n                    {\r\n                        panel9.Visible = true;\r\n                        panel9.Size = new Size(1693, 997);\r\n                        //36; 632\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                        panel9.Visible = false;\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Console.WriteLine(ex.ToString());\r\n            }\r\n\r\n\r\n        }\r\n        private void button5_Click(object sender, EventArgs e)\r\n        {\r\n            check_id_onboard2();\r\n          //  check_id_onboard();\r\n            //File.WriteAllText(@\u0022C:\\teste\\PROJETO.txt\u0022, \u0022teste1\u0022 \u002B \u0022\\r\\n\u0022 \u002B \u0022teste1\u0022);\r\n\r\n\r\n            /*\r\n            String l = \u0022\u0022;\r\n            bool ESIM = false;\r\n            bool dois = false;\r\n            bool tres = false;\r\n            string nume = \u0022\u0022;\r\n            string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\\r\n            \r\n           \u0022);\r\n            id_1 = 0;\r\n            for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n            {\r\n\r\n                if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                {\r\n\r\n\r\n\r\n\r\n                    l = lines[i].Split(\u0027:\u0027)[9].Trim();\r\n                    if (lines[i].Split(\u0027:\u0027)[1].Trim() != richTextBox16.Text.Trim()) {\r\n                        MessageBox.Show(\u0022O N\u00DAMERO DA IDENTIDADE\u0022 \u002B lines[i].Split(\u0027:\u0027)[9].Trim() \u002B \u0022 J\u00C1 EST\u00C1 CADASTRADO NO ACESSO DE N\u00DAMERO \u0022 \u002B lines[i].Split(\u0027:\u0027)[1].Trim());\r\n                    }\r\n                    ESIM = true;\r\n                    richTextBox4.Text = lines[int.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                    string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                    //  MessageBox.Show(\u0022 CADASTRO REALIZADO COM SUCESSO, A IDENTIDADE N\u00C3O FOI ALTERADA POIS J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                    break;\r\n\r\n                }\r\n                else\r\n                {\r\n                    ESIM = false;\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            if (ESIM == false)\r\n            {\r\n\r\n                id_1 = 1;\r\n                string[] lines2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                if (richTextBox4.Text.Trim() != l) {\r\n                    string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    text = text.Replace(lines2[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                    //  MessageBox.Show(\u0022CADASTRO REALIZADO COM SUCESSO\u0022);\r\n                }\r\n                else\r\n                {\r\n\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            /*\r\n                    \r\n\r\n                        if (id_1 == 0)\r\n                        {\r\n                            string id_3;\r\n                            int exs = 0;\r\n                                   string[] lines3 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                   string id_11 = lines[Int16.Parse(richTextBox16.Text)-1].Split(\u0027:\u0027)[1].Trim();\r\n\r\n                            for (int i = 0; i \u003C lines3.Length; i\u002B\u002B)\r\n                            {\r\n\r\n                                if (richTextBox4.Text.Trim() == lines[i].Split(\u0027:\u0027)[9].Trim())\r\n                                {\r\n                                    MessageBox.Show(\u0022J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                                    exs = 1;\r\n                                }\r\n\r\n                                else\r\n                                {\r\n                                    exs = 1; \r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            if (exs == 1)\r\n                            {\r\n                                id_3 = richTextBox4.Text.Trim();//lines[Int16.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                            }\r\n                            string text4 = \u0022Number : \u0022 \u002B id_11 \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B id_3 \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                            string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                            text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                            MessageBox.Show(\u0022NOVO CADASTRO REALIZADO COM SUCESSO!\u0022);\r\n\r\n                        }\r\n\r\n                        //  GetBiosInformation();\r\n                        /*\r\n                        if (dataGridView1.Rows.Count \u003E 0)\r\n                        {\r\n                            try\r\n                            {\r\n                                XcelApp.Application.Workbooks.Add(Type.Missing);\r\n                                for (int i = 1; i \u003C dataGridView1.Columns.Count \u002B 1; i\u002B\u002B)\r\n                                {\r\n                                    XcelApp.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;\r\n                                }\r\n                                //\r\n                                for (int i = 0; i \u003C dataGridView1.Rows.Count - 1; i\u002B\u002B)\r\n                                {\r\n                                    for (int j = 0; j \u003C dataGridView1.Columns.Count; j\u002B\u002B)\r\n                                    {\r\n                                        XcelApp.Cells[i \u002B 2, j \u002B 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();\r\n                                    }\r\n                                }\r\n                                //\r\n                                XcelApp.Columns.AutoFit();\r\n                                //\r\n                                XcelApp.Visible = true;\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                MessageBox.Show(\u0022Erro : \u0022 \u002B ex.Message);\r\n                                XcelApp.Quit();\r\n                            }\r\n                        }\r\n                        */\r\n            //out_by_user();\r\n            //string line2 = null;\r\n            // string line_to_delete = \u0022the line i want to delete\u0022;\r\n\r\n\r\n            // var oldLines = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            // var newLines = oldLines.Where(line =\u003E !line.Contains(line_to_delete));\r\n            // System.IO.File.WriteAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, newLines);\r\n\r\n        }\r\n\r\n        private void button9_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button36_Click(object sender, EventArgs e)\r\n        {\r\n            String ma = \u0022teste\u0022;\r\n            string str2 = string.Empty;\r\n            int val2 = 0;\r\n            //  label5.Text = ma.ToString();\r\n            for (int i = 0; i \u003C ma.Length; i\u002B\u002B)\r\n            {\r\n                if (Char.IsDigit(ma[i]))\r\n                    str2 \u002B= ma[i];\r\n            }\r\n            //label5.Text = str2;\r\n\r\n            while (str2.Length \u003E 5)\r\n            {\r\n                str2 = str2.Substring(0, str2.Length - 1);\r\n            }\r\n\r\n            if (str2.Length \u003E 0)\r\n            {\r\n                val2 = int.Parse(str2);\r\n            }\r\n\r\n\r\n            double str3 = ((Math.Sqrt(val2)) * val2) / 2;\r\n            String str5 = str3.ToString();\r\n            str5.Substring(0, 5);\r\n            StreamReader srb = new StreamReader(\u0022code.txt\u0022); //C:\\Users\\win 10\\Documents   Users\\\\win 10\\\\Documents\\\\local.txt\r\n            string xb = srb.ReadToEnd().Trim();\r\n            srb.Close();\r\n            id = val2.ToString();\r\n            label2.Text = \u0022ID: \u0022 \u002B val2.ToString();\r\n            // label9.Text = \u0022ID: \u0022 \u002B val.ToString();\r\n            if (xb != str5.Substring(0, 5).Trim())\r\n            {\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            using (StreamWriter writer = new StreamWriter(\u0022code.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n            {\r\n                // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                writer.WriteLine(textBox11.Text);\r\n                writer.Close();\r\n            }\r\n            //Task.Delay(1000).Wait();\r\n            System.Windows.Forms.Application.Restart();\r\n\r\n\r\n            int val = 0;\r\n            val = int.Parse(textBox11.Text);\r\n            double str33 = ((Math.Sqrt(val)) * val) / 2;\r\n            textBox12.Text = str3.ToString();\r\n        }\r\n\r\n        private void richTextBox6_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE ALTERAR A DATA?\u0022, \u0022ALTERA\u00C7\u00C3O DE DATA\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    dateTimePicker1.Visible = true;\r\n                    dateTimePicker2.Visible = true;\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n                    dateTimePicker1.Visible = false;\r\n                    dateTimePicker2.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox2_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox7_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE ALTERAR A DATA?\u0022, \u0022ALTERA\u00C7\u00C3O DE DATA\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    dateTimePicker1.Visible = true;\r\n                    dateTimePicker2.Visible = true;\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n                    dateTimePicker1.Visible = false;\r\n                    dateTimePicker2.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        private void button8_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button10_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button30_Click(object sender, EventArgs e)\r\n        {\r\n            label34.Text = DateTime.Now.ToString(\u0022dd/MM/yyyy\u0022).Trim();\r\n        }\r\n\r\n        private void button33_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void panel3_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox15_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        private void get_link_txt()\r\n        {\r\n            try\r\n            {\r\n                if (richTextBox15.Text != \u0022\u0022)\r\n                {\r\n                    // https://drive.google.com/file/d/12wpEOD6oDNL4eWgJXRFEzkPlmJ5fwdsT/view?usp=sharing\r\n\r\n                    // string path = richTextBox15.Text;\r\n                    //  String path2;\r\n                    //  string[] subs = path.Split(\u0027/\u0027);\r\n                    panel9.Size = new Size(1050, 43);\r\n                    path2 = \u0022https://drive.google.com/file/d/\u0022 \u002B richTextBox15.Text.Trim() \u002B \u0022/view?usp=sharing\u0022;\r\n                    // path2 = \u0022https://drive.google.com/file/d/12wpEOD6oDNL4eWgJXRFEzkPlmJ5fwdsT/view?usp=sharing\u0022;\r\n                    panel9.Visible = true;\r\n                    panel14.Visible = true;\r\n                    panel14.Size = new Size(1145, 44);\r\n\r\n                    webBrowser1.Visible = true;\r\n                    // webBrowser1.DocumentText = \u0022\u003Chtml\u003E\u003C head \u003E\u003C title \u003E HTML Backgorund Color\u003C/ title \u003E\u003C/ head \u003E\u003C body style = \u0027background-color:grey;\u0027 \u003E\u003C h1 \u003E Products \u003C/ h1 \u003E\u003C/ body \u003E\u003C/ html \u003E\u0022;\r\n                    webBrowser1.Size = new Size(1145, 680);\r\n\r\n\r\n                    this.webBrowser1.Navigate(path2);\r\n                }\r\n                // MessageBox.Show(subs[5]);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void richTextBox15_DoubleClick(object sender, EventArgs e)\r\n        {\r\n            get_link_txt();\r\n        }\r\n\r\n        private void button37_Click(object sender, EventArgs e)\r\n        {\r\n            panel9.Visible = false;\r\n            panel14.Visible = false;\r\n            webBrowser1.Visible = false;\r\n        }\r\n\r\n        private void lcompany_Click(object sender, EventArgs e)\r\n        {\r\n            richTextBox1.Text = comboBox1.Text \u002B \u0022 CREW\u0022;\r\n        }\r\n\r\n        int ip_find = 0;\r\n        int count2 = 0;\r\n        int soma = 0;\r\n        public void scan2(string start, string end)\r\n        {\r\n            comp = 0;\r\n            //   timer9.Enabled = false;\r\n            if (soma == 0)\r\n            {\r\n           \r\n                try\r\n                {\r\n\r\n                    //Split IP string into a 4 part array\r\n                    string[] startIPString = start.Split(\u0027.\u0027);\r\n                    int[] startIP = Array.ConvertAll\u003Cstring, int\u003E(startIPString, int.Parse); //Change string array to int array\r\n\r\n\r\n                    string[] endIPString = end.Split(\u0027.\u0027);\r\n                    int[] endIP = Array.ConvertAll\u003Cstring, int\u003E(endIPString, int.Parse);\r\n                    //Count the number of successful pings\r\n                    // count2 = 0;\r\n                    Ping myPing;\r\n                    PingReply reply;\r\n                    IPAddress addr;\r\n                    IPHostEntry host;\r\n                  //  \r\n\r\n                    //Progress bar\r\n\r\n                    //   listVAddr.Items.Clear();\r\n\r\n                    //Loops through the IP range, maxing out at 255\r\n                    for (int i = startIP[2]; i \u003C= endIP[2]; i\u002B\u002B)\r\n                    { //3rd octet loop\r\n                        for (int y = startIP[3]; y \u003C= 100; y\u002B\u002B)\r\n                        { //4th octet loop\r\n                            string ipAddress = startIP[0] \u002B \u0022.\u0022 \u002B startIP[1] \u002B \u0022.\u0022 \u002B i \u002B \u0022.\u0022 \u002B y; //Convert IP array back into a string\r\n                            string endIPAddress = endIP[0] \u002B \u0022.\u0022 \u002B endIP[1] \u002B \u0022.\u0022 \u002B endIP[2] \u002B \u0022.\u0022 \u002B (endIP[3] \u002B 1); // \u002B1 is so that the scanning stops at the correct range\r\n\r\n                            //If current IP matches final IP in range, break\r\n                            if (ipAddress == endIPAddress)\r\n                            {\r\n                                break;\r\n                            }\r\n\r\n                            myPing = new Ping();\r\n                            try\r\n                            {\r\n                                reply = myPing.Send(ipAddress, 10); //Ping IP address with 500ms timeout\r\n                                myping2 = reply.RoundtripTime.ToString();\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                break;\r\n                            }\r\n\r\n\r\n\r\n                            //Log pinged IP address in listview\r\n                            //Grabs DNS information to obtain system info\r\n                            if (reply != null \u0026\u0026 reply.Status == IPStatus.Success)\r\n                            {\r\n\r\n\r\n                                try\r\n                                {\r\n\r\n                                    addr = IPAddress.Parse(ipAddress);\r\n                                    host = Dns.GetHostEntry(addr);\r\n                                    // addr.Address.Trim();\r\n\r\n                                    //  listVAddr.Items.Add(new ListViewItem(new String[] { host.HostName, \u0022Up\u0022 })); //Log successful pings\r\n                                    host.HostName.Trim();\r\n\r\n                                    String input = host.HostName.Trim();//host.HostName.Substring(0, host.HostName.LastIndexOf(\u0022.\u0022));\r\n                                                                        // label21.Text = input;\r\n                                                                        //  MessageBox.Show(input.ToString());\r\n                                                                        //input = \u0022\u0022;\r\n                                                                        //  MessageBox.Show(ipAddress);\r\n                                    if (host.HostName.Trim() != hostName.Trim() \u0026\u0026 hostName != \u0022\u0022)\r\n                                    {\r\n                                        //  \r\n                                        //  ip_find\u002B\u002B;\r\n                                        //  count2=2;\r\n\r\n                                        count2\u002B\u002B;\r\n\r\n                                    }\r\n                                    if (host.HostName.Trim() == hostName)\r\n                                    {\r\n\r\n                                        // count2=1;\r\n\r\n                                        //  ip_find--;\r\n                                        //  MessageBox.Show(\u0022ok\u0022 \u002B host.HostName.Trim());\r\n                                        // online_ = false;\r\n                                    }\r\n\r\n\r\n                                    //  if (host.HostName!= \u0022LAPTOP-DRSLFUQS.local\u0022)\r\n                                    /// {\r\n\r\n                                    //  MessageBox.Show(input.Trim());\r\n                                    // MessageBox.Show(\u0022teste ip \u0022 \u002B input \u002B \u0022  \u0022 \u002B count);\r\n                                    // \r\n                                    //  \\\\CRIPTOQRCODE2\\\\compartilhamento\\\\\r\n                                   // rede1 = \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022;\r\n                                    // MessageBox.Show(rede1);\r\n                                    // host.HostName = \u0022\u0022;\r\n\r\n                                    online_ = true;\r\n                                    p = 1;\r\n                                    int at = 0;\r\n                                    //timer7.Stop();\r\n                                    //escrever_lock();\r\n                                    string hostName2 = System.Net.Dns.GetHostName();\r\n                                    string str = input.Substring(0, 6).Trim();\r\n                                    //  MessageBox.Show(input);\r\n\r\n                                    if (input != \u0022 \u0022 \u0026\u0026 input != hostName2\u002B\u0022.lan\u0022 \u0026\u0026 input != hostName2)\r\n                                    {\r\n\r\n                                        if (str == \u0022QRCODE\u0022)\r\n                                        {\r\n                                            ip_find\u002B\u002B;\r\n                                            \r\n                                            rede1 = \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022;\r\n                                            rede10= input.Trim();\r\n                                            //  panel12.BackColor = Color.Black;\r\n                                            //      MessageBox.Show(input);\r\n                                            try\r\n                                            {\r\n                                                atualiza_compartilhamento();\r\n                                            }\r\n                                            catch\r\n                                            {\r\n\r\n                                            }\r\n\r\n                                            // timer11.Start();\r\n                                            str = \u0022\u0022;\r\n\r\n\r\n                                        }\r\n                                        else\r\n                                        {\r\n\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                    {\r\n\r\n                                    }\r\n\r\n\r\n                                    //System.Threading.Thread.Sleep(1000);\r\n                                    // atualiza_compartilhamento();\r\n                                   // input = \u0022\u0022;\r\n\r\n                                    //  }\r\n\r\n                                    //  MessageBox.Show(count.ToString());\r\n\r\n                                    //  \r\n                                    //    MessageBox.Show(host.HostName.Trim());\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                                catch\r\n                                {\r\n\r\n                                    // listVAddr.Items.Add(new ListViewItem(new String[] { ipAddress, \u0022Could not retrieve\u0022, \u0022Up\u0022 })); //Logs pings that are successful, but are most likely not windows machines\r\n\r\n\r\n                                    //  online_ = false;\r\n                                    //  count2--;\r\n\r\n\r\n\r\n\r\n                                }\r\n                                // MessageBox.Show(\u0022teste ip \u0022 \u002B count);\r\n\r\n                                // count2 = 0;\r\n\r\n\r\n\r\n                            }\r\n                            else\r\n                            {\r\n\r\n\r\n\r\n                            }\r\n\r\n                            //  count2--;\r\n\r\n\r\n\r\n\r\n                            if (count2 == 0)\r\n                            {\r\n                                //  online_ = false;\r\n                                // count2 = 0;\r\n                            }\r\n                            if (count2 == 2)\r\n                            {\r\n\r\n                                // online_ = true;\r\n                            }\r\n\r\n\r\n\r\n                            if (count2 == 0)\r\n                            {\r\n                                // MessageBox.Show(\u0022sem rede\u0022);\r\n                            }\r\n                        }\r\n\r\n                        startIP[3] = 1; //If 4th octet reaches 255, reset back to 1\r\n\r\n\r\n                    }\r\n\r\n                  //  panel12.BackColor = Color.Black;\r\n                    //   MessageBox.Show(\u0022Scanning done!\\nFound \u0022 \u002B ip_find \u002B \u0022 hosts.\u0022, \u0022Done\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                    compr = 0;\r\n                 //   label62.Text = ip_find.ToString();\r\n                  //  ip_find = 0;\r\n\r\n\r\n                    //comp = 1;\r\n\r\n                    ///System.Threading.Thread.Sleep(2000);\r\n                    //  MessageBox.Show(\u0022ok\u0022);\r\n                    //  timer7.Start();\r\n\r\n                    //Re-enable buttons\r\n\r\n                    //    MessageBox.Show(\u0022Scanning done!\\nFound \u0022 \u002B ip_find \u002B \u0022 hosts.\u0022, \u0022Done\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                    //Catch exception that throws when stopping thread, caused by ping waiting to be acknowledged\r\n                   // ip_find = 0;\r\n\r\n                }\r\n                catch (ThreadAbortException tex)\r\n                {\r\n                    Console.WriteLine(tex.StackTrace);\r\n                    // txtIP.Enabled = true;\r\n                    // txtIP2.Enabled = true;\r\n\r\n                }\r\n\r\n\r\n                //Catch invalid IP types\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(ex.StackTrace);\r\n\r\n                    //txtIP.Enabled = true;\r\n                    // txtIP2.Enabled = true;\r\n\r\n                }\r\n\r\n\r\n                if (count \u003E= 2)\r\n                {\r\n                    // online_ = true;\r\n                    // if (online_ == true)\r\n                    //  {\r\n                    // label40.Visible = false;\r\n                    // panel12.BackColor = Color.GreenYellow;\r\n\r\n\r\n                    //  }\r\n                    //  if (online_ == false)\r\n                    //  {\r\n                    //  panel12.BackColor = Color.Red;\r\n                    //  label40.Visible = true;\r\n\r\n                    // }\r\n                    // online_ = false;\r\n                    //MessageBox.Show(count.ToString());\r\n                }\r\n            }\r\n           /// ip_find = 0;\r\n            //  timer9.Enabled = true;\r\n        }\r\n\r\n        private void timer7_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n            // String block = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n            if (comp == 1)\r\n            {\r\n                // ler_linha();\r\n                //   checa_host();\r\n                // atualiza_compartilhamento();\r\n\r\n                //    MessageBox.Show(comp.ToString());\r\n            }\r\n        }\r\n\r\n        private void label42_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        int ok = 1;\r\n        private void cria_CarregarPlanilha()\r\n        {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            try\r\n            {\r\n                File.Delete(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            try\r\n            {\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                // MessageBox.Show(count.ToString());\r\n\r\n                var pasta = app.Workbooks.Open(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n\r\n                var plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                // plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n                plan.Columns.AutoFit();\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n                plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n                plan.Cells[1, 1] = \u0022NUMBER\u0022;\r\n                plan.Cells[1, 2] = \u0022NAME\u0022;\r\n                plan.Cells[1, 3] = \u0022COMPANY\u0022;\r\n                plan.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n                plan.Cells[1, 5] = \u0022ID\u0022;\r\n                plan.Cells[1, 6] = \u0022EMAIL\u0022;\r\n                plan.Cells[1, 7] = \u0022VESSEL\u0022;\r\n                plan.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n                plan.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n\r\n                for (int a = 0; a \u003C count; a\u002B\u002B)\r\n                {\r\n                    ok\u002B\u002B;\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(a);\r\n                    //  ss\u002B\u002B;\r\n                    //  String local = secondLine.Split(\u0027:\u0027)[0].Trim();\r\n\r\n                    //   txtCodigoFunci.Text = lastRow.ToString();\r\n                    lastRow\u002B\u002B;\r\n                    plan.Cells[ok, 1] = secondLine.Split(\u0027:\u0027)[0].Trim();\r\n                    // plan.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.Red);\r\n                    plan.Cells[ok, 2] = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                    plan.Cells[ok, 3] = secondLine.Split(\u0027:\u0027)[2].Trim();\r\n                    plan.Cells[ok, 4] = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                    plan.Cells[ok, 5] = secondLine.Split(\u0027:\u0027)[4].Trim();\r\n                    plan.Cells[ok, 6] = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                    plan.Cells[ok, 7] = secondLine.Split(\u0027:\u0027)[6].Trim();\r\n                    plan.Cells[ok, 8] = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                    plan.Cells[ok, 9] = secondLine.Split(\u0027:\u0027)[8].Trim();\r\n                    // plan.Cells[lastRow, 10] = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                    // plan.Cells[lastRow, 11] = secondLine.Split(\u0027:\u0027)[10].Trim();\r\n                    // MessageBox.Show(\u0022ok\u0022);\r\n                }\r\n                //  plan.quit();\r\n\r\n                pasta.SaveAs(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, false, false, Excel.XlSaveAsAccessMode.xlNoChange,\r\n                Type.Missing, Type.Missing, Type.Missing, Type.Missing);\r\n                // pasta.Save();\r\n                pasta.Close();\r\n                // plan.Close();\r\n                MessageBox.Show(\u0022Backup concluido com sucesso!\u0022);\r\n\r\n                //  atualiza_compartilhamento();\r\n\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message);\r\n            }\r\n            //CarregarPlanilha();\r\n\r\n        }\r\n        void PausaComThreadSleep()\r\n        {\r\n            Thread.Sleep(5000);\r\n        }\r\n        async Task PausaComTaskDelay()\r\n        {\r\n            await Task.Delay(5000);\r\n        }\r\n        string secondLine2;\r\n        string secondLine5;\r\n        private void update()\r\n        {\r\n\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n\r\n                File.Delete(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                int ss = 7;\r\n\r\n                try\r\n                {\r\n                    var wbook = new XLWorkbook(drives.FirstOrDefault().Name.ToString() \u002B \u0022//Controle de Acesso.xlsx\u0022);\r\n                    var ws1 = wbook.Worksheet(1);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tFun\u00E7\u00E3o\tE-mail\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n\r\n                    //Number : 4 : Name : ARTHUR LOPES : Compay : ALTN :Funcition:  COORDENADOR DE LOGISTICA  :Id: 6376702601 : E-mail : altn.comercial@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 31/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : :Conv\u00E9s\r\n                    //  int count = File.ReadAllLines(@\u0022D:/Controle de Acesso.xlsx\u0022).Length;\r\n\r\n                    var columnCount = ws1.LastRowUsed().RowNumber();\r\n                    //  MessageBox.Show(columnCount.ToString());\r\n                    for (int i = 0; i \u003C (columnCount) - 7; i\u002B\u002B)\r\n                    {\r\n                        ss\u002B\u002B;\r\n                        String muda = ss.ToString();\r\n                        var data1 = ws1.Cell(\u0022B\u0022 \u002B muda).GetValue\u003Cstring\u003E();// numero\r\n                        var data2 = ws1.Cell(\u0022D\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                        var data3 = ws1.Cell(\u0022C\u0022 \u002B muda).GetValue\u003Cstring\u003E();//  empresa \r\n                        var data4 = ws1.Cell(\u0022G\u0022 \u002B muda).GetValue\u003Cstring\u003E();// CPF\r\n                        var data5 = ws1.Cell(\u0022H\u0022 \u002B muda).GetValue\u003Cstring\u003E();// fun\u00E7\u00E3o\r\n                        var data6 = ws1.Cell(\u0022I\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // E-mail\r\n                        var data7 = ws1.Cell(\u0022J\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // ASO\r\n                        var data8 = ws1.Cell(\u0022K\u0022 \u002B muda).GetValue\u003Cstring\u003E(); //  dose 1\r\n                        var data9 = ws1.Cell(\u0022L\u0022 \u002B muda).GetValue\u003Cstring\u003E(); //  dose 2\r\n                        var data10 = ws1.Cell(\u0022M\u0022 \u002B muda).GetValue\u003Cstring\u003E();//  data refor\u00E7o1\r\n                        var data11 = ws1.Cell(\u0022N\u0022 \u002B muda).GetValue\u003Cstring\u003E();// data1 refor\u00E7o 2\r\n                                                                             // var data12 = ws1.Cell(\u0022K\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // NR34\r\n                                                                             //   var data13 = ws1.Cell(\u0022E\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                        var data14 = ws1.Cell(\u0022F\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                                                                              //   lineChanger(\u0022Number:\u0022 \u002B data1 \u002B \u0022:Name:\u0022 \u002B data2 \u002B \u0022:Company:\u0022 \u002B data3 \u002B \u0022:Function:\u0022 \u002B data4, \u0022D:\\\\data2.txt\u0022,ss);\r\n\r\n\r\n                        using (StreamWriter writer = new StreamWriter(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                        {\r\n                            string teste2 = \u0022Number: \u0022 \u002B data1 \u002B \u0022 : Name :\u0022 \u002B data2 \u002B \u0022 : Company : \u0022 \u002B data3 \u002B \u0022 : Function : \u0022 \u002B data5\u002B \u0022: Id : \u0022 \u002B data14 \u002B \u0022: E-mail : \u0022 \u002B data6 \u002B \u0022: Vessel : \u0022 \u002B comboBox1.Text \u002B \u0022: Project : \u0022 \u002B richTextBox9.Text\u002B \u0022: ASO : \u0022 \u002B data7 \u002B \u0022: NR34 : \u0022 \u002B data8 \u002B \u0022: NR-10 : \u0022 \u002B data9 \u002B \u0022: NR-33 : \u0022 \u002B data10 \u002B \u0022: NR-35 :\u0022 \u002B data11;\r\n                            writer.WriteLine(teste2);\r\n                            writer.Close();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    try\r\n                    {\r\n                        System.IO.File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2_backup.txt\u0022, true);\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    string text = File.ReadAllText(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022);\r\n                    text = text.Replace(\u002200:00:00\u0022, \u0022\u0022);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n\r\n\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n                label43.Text = \u0022UPDATE CONDLUIDO COM SUCESSO!\u0022;\r\n            }\r\n            else\r\n            {\r\n                label43.Text = \u0022\u0022;\r\n                MessageBox.Show(\u0022PENDRIVE OU ARQUIVO N\u00C3O ENCONTRADO\u0022);\r\n            }\r\n            //  MessageBox.Show(\u0022PENDRIVE N\u00C3O ENCONTRADA\u0022);\r\n\r\n\r\n        }\r\n        private void button39_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n            ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo.RedirectStandardOutput = true;\r\n            startInfo.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo);\r\n            */\r\n            //https://zetcode.com/csharp/excel/ dicas excel\r\n            label43.Text = \u0022AGUARDE, FAZENDO UPDATE DA PLANILHA!\u0022;\r\n            update();\r\n\r\n          \r\n\r\n            //  PausaComThreadSleep();\r\n\r\n            //  panel15.Visible = true;\r\n            /// label43.Text = \u0022UPDATE CONDLUIDO COM SUCESSO!\u0022;\r\n        }\r\n        public bool RemoveFirstLinesFromFile(string filePath, int skip)\r\n        {\r\n            if (!File.Exists(filePath))\r\n                return false;\r\n            try\r\n            {\r\n                var filePathOld = Path.Combine(filePath, \u0022.old\u0022);\r\n                File.Move(filePath, filePathOld);\r\n                File.WriteAllLines(filePath, File.ReadAllLines(filePathOld).Skip(skip));\r\n                return true;\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        private void button38_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n            ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo.RedirectStandardOutput = true;\r\n            startInfo.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo);\r\n           */\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n                label43.Text = \u0022BACKUP CRIADO COM SUCESSO!\u0022;\r\n\r\n                lblname.Text = drives.FirstOrDefault().Name.ToString();\r\n                string fileName = \u0022novo.xlsx\u0022;\r\n                string sourcePath = @\u0022C:\\compartilhamento\\data_base\u0022;\r\n                string targetPath = drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022;\r\n\r\n                var dbExporter = new DatabaseExporter();\r\n                dbExporter.ExportDataToExcel(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022, targetPath \u002B \u0022backup.xlsx\u0022);\r\n\r\n                string destFile = System.IO.Path.Combine(targetPath, fileName) ;\r\n                System.IO.Directory.CreateDirectory(targetPath);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n              /*  if (!Directory.Exists(targetPath))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(targetPath);\r\n\r\n                }\r\n              \r\n\r\n\r\n                if (System.IO.Directory.Exists(sourcePath))\r\n                {\r\n                    string[] files = System.IO.Directory.GetFiles(sourcePath);\r\n\r\n                    foreach (string s in files)\r\n                    {\r\n\r\n                        fileName = System.IO.Path.GetFileName(s);\r\n                        destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                        System.IO.File.Copy(s, destFile, true);\r\n                    }\r\n\r\n                    // cria_CarregarPlanilha();\r\n                   ;\r\n\r\n\r\n                    try\r\n                    {\r\n                        File.Delete(@\u0022D:\\Result.txt\u0022);\r\n                        File.Delete(@\u0022D:\\teste.txt\u0022);\r\n                        File.Delete(@\u0022D:\\teste3.txt\u0022);\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    string tempo = DateTime.Now.ToString(\u0022dd_MM_yyyy_hh_mm_ss\u0022);\r\n                    /// MessageBox.Show(\u0022Backup creaded with success\u0022);\r\n                    File.Copy(lblname.Text \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\novo.xlsx\u0022, lblname.Text \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022 \u002B tempo \u002B \u0022.xlsx\u0022);\r\n                    label43.Text = \u0022BACKUP CRIADO COM SUCESSO!\u0022;\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n\r\n\r\n                else\r\n                {\r\n                    Console.WriteLine(\u0022Source path does not exist!\u0022);\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }*/\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        private string ReplaceFirst(string thise, string oldValue, string newValue)\r\n        {\r\n            int startindex = thise.IndexOf(oldValue);\r\n\r\n            if (startindex == -1)\r\n            {\r\n                return thise;\r\n            }\r\n\r\n            return thise.Remove(startindex, oldValue.Length).Insert(startindex, newValue);\r\n        }\r\n\r\n        private void back_up()\r\n        {\r\n            try\r\n            {\r\n                int ss = 7;\r\n                /// ler excel\r\n                /*\r\n                using ClosedXML.Excel;\r\n\r\n                using var wbook = new XLWorkbook(\u0022simple.xlsx\u0022);\r\n\r\n                var ws1 = wbook.Worksheet(1);\r\n                var data = ws1.Cell(\u0022A1\u0022).GetValue\u003Cstring\u003E();\r\n                */\r\n                //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tEmail\tFun\u00E7\u00E3o\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n                // Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();\r\n                // if (xlApp == null)\r\n\r\n                /// {\r\n                //  MessageBox.Show(\u0022Excel is not properly installed!!\u0022);\r\n                // return;\r\n                //   }\r\n\r\n\r\n\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                var wb = new XLWorkbook();\r\n\r\n                //  wb.Application.OnKey(\u0022^v\u0022, \u0022\u0022);\r\n\r\n\r\n                var ws = wb.Worksheets.Add(\u0022Planilha1\u0022);\r\n                ws.Range(\u0022B7\u0022, \u0022V7\u0022).Style.Fill.BackgroundColor = XLColor.FromArgb(91, 155, 213); //Color.FromArgb(91, 155, 213);\r\n                ws.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center);\r\n                ws.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center);\r\n                ws.Column(7).Width = 35;\r\n                ws.Row(7).Height = 50;\r\n                ws.Cell(\u0022B7\u0022).Value = \u0022ID Capacete  Identifica\u00E7\u00E3o\u0022;//1\r\n                ws.Cell(\u0022C7\u0022).Value = \u0022Empresa\u0022;//5\r\n                ws.Cell(\u0022D7\u0022).Value = \u0022Nome Completo\u0022;//3\r\n                ws.Cell(\u0022F7\u0022).Value = \u0022Identidade\u0022;\r\n                ws.Cell(\u0022G7\u0022).Value = \u0022CPF\u0022;//34\r\n                ws.Cell(\u0022I7\u0022).Value = \u0022Email\u0022;//11\r\n                ws.Cell(\u0022H7\u0022).Value = \u0022Fun\u00E7\u00E3o\u0022;//7\r\n                ws.Cell(\u0022J7\u0022).Value = \u0022Data  ASO\u0022;//13\r\n                ws.Cell(\u0022V7\u0022).Value = \u0022Data  NR34\u0022;//15\r\n                ws.Cell(\u0022K7\u0022).Value = \u0022Data dose 1\u0022;//17\r\n                ws.Cell(\u0022L7\u0022).Value = \u0022Data dose 2\u0022;//19\r\n                ws.Cell(\u0022M7\u0022).Value = \u0022Data Refor\u00E7o 1\u0022;//21\r\n                ws.Cell(\u0022N7\u0022).Value = \u0022Data Refor\u00E7o 2\u0022;//23\r\n\r\n\r\n                /// ClosedXML.Excel.CutCopyMode = XlCutCopyMode.xlCopy;\r\n                // Microsoft.Office.Interop.Excel.Worksheet wks = (Microsoft.Office.Interop.Excel.Worksheet)ws.Worksheets(1);\r\n                // wks.Application.CutCopyMode = (Microsoft.Office.Interop.Excel.XlCutCopyMode)0;\r\n                // wb.Worksheets.Application.CutCopyMode = 0;\r\n                //XlCutCopyMode.xlCopy = false;\r\n                ///  Application.CutCopyMode = (Microsoft.Office.Interop.Excel.XlCutCopyMode)0;\r\n                //ws.CutCopyMode = false;\r\n                for (int a = 0; a \u003C count; a\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(a);\r\n\r\n                    ss\u002B\u002B;\r\n\r\n                    ws.Cell(\u0022B\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                    ws.Cell(\u0022C\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                    ws.Cell(\u0022D\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                    ws.Cell(\u0022F\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                    ws.Cell(\u0022I\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                    ws.Cell(\u0022H\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                    ws.Cell(\u0022G\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[15].Trim();\r\n                    ws.Cell(\u0022J\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                    ws.Cell(\u0022K\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                    ws.Cell(\u0022L\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[21].Trim();\r\n                    ws.Cell(\u0022M\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[23].Trim();\r\n                    ws.Cell(\u0022N\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[25].Trim();\r\n                    ws.Cell(\u0022V\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                }\r\n                ws.Columns().AdjustToContents();\r\n\r\n                try\r\n                {\r\n                    var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n                    wb.SaveAs(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    // \r\n                }\r\n            }catch\r\n            {\r\n\r\n                MessageBox.Show(\u0022PENDRIVE N\u00C3O ENCONTRADA\u0022);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        private void button40_Click(object sender, EventArgs e)\r\n        {\r\n       \r\n            panel15.Visible = false;\r\n            System.Windows.Forms.Application.Restart();\r\n\r\n        }\r\n\r\n        private void panel15_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox7_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n    \r\n        private void timer10_Tick(object sender, EventArgs e)\r\n        {\r\n            /// DirectoryCanListFiles(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n            /// \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022\r\n            // MessageBox.Show(MyhostName); \r\n            //   MessageBox.Show(rede1);\r\n\r\n            string nome3;\r\n            Boolean rec2 = false;\r\n            // string myIP = Dns.GetHostByName(\u0022QRCODE-50\u0022).AddressList[1].ToString();\r\n            //label64.Text = myIP;\r\n          //  textBox22.Text = \u0022 \u0022;\r\n            nome3 = \u0022\u0022;\r\n\r\n            try\r\n            {\r\n\r\n                if (rede1 != null) {\r\n\r\n\r\n\r\n                    if (rede1 != \u0022\\\\\\\\\u0022 \u002B MyhostName.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022)\r\n                    {\r\n\r\n                        // MessageBox.Show(rede1);\r\n                        nome3 = rede1;\r\n                        if (rede1 != \u0022\u0022)\r\n                        {\r\n                            string nome = rede1.Split(\u0027\\\\\u0027)[2].Trim();\r\n                            string nome2 = nome.Remove(nome.Length - 6);\r\n                          //  textBox22.Text = nome \u002B \u0022 Online\u0022;\r\n                            //myString.Remove(myString.Length-3)\r\n                            //  panel12.BackColor = Color.YellowGreen;\r\n\r\n\r\n                            // \r\n\r\n                            if (rec == true)\r\n                            {\r\n                                DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                DateTime fdata1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n                                if (fdata1 == fdata0)\r\n                                {\r\n                                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                    label3.Text = count.ToString().Trim();\r\n                                    \r\n                                    //   saida_manual();\r\n                                    rec = false;\r\n\r\n                                }\r\n                              //  if (fdata1 != fdata0)\r\n                                //{\r\n                                 //   saida_manual();\r\n\r\n                               // }\r\n                            }\r\n                            //  }\r\n                            else\r\n                            {\r\n\r\n                            }\r\n                        }\r\n                      //  rede1 = \u0022\u0022;\r\n\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        //  MessageBox.Show(\u0022nulo\u0022);\r\n                    }\r\n                }\r\n                if (entrou == true)\r\n                {\r\n                   \r\n                }\r\n                \r\n            }\r\n            catch\r\n            {\r\n               // textBox22.Text = \u0022\u0022;\r\n            }\r\n            // rede1 = \u0022\u0022;\r\n\r\n\r\n\r\n        }\r\n        \r\n\r\n        \r\n        private void textBox14_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox14_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            listBox1.Items.Clear();\r\n            foreach (string s in Regex.Split(text, textBox14.Text))\r\n            {\r\n\r\n                listBox1.Items.Add(s);\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        private void richTextBox2_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox2.Text == \u0022\u0022) {\r\n                label44.Visible = true;\r\n                label50.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label44.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox1_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (maskedTextBox1.Text == \u0022  /  /\u0022)\r\n            {\r\n                label49.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label49.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void txtResult_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox10_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void label53_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            Font myfont = new Font(\u0022Arial\u0022, 14);\r\n            Brush mybrush = new System.Drawing.SolidBrush(System.Drawing.Color.Black);\r\n            e.Graphics.TranslateTransform(90, 90);\r\n            e.Graphics.RotateTransform(90);\r\n            e.Graphics.DrawString(\u0022teste12345678\u0022, myfont, mybrush, 0, 0);\r\n        }\r\n\r\n        private void button41_Click(object sender, EventArgs e)\r\n        {\r\n            label34.Text = comboBox1.Text;\r\n        }\r\n\r\n        private void comboBox1_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n            label63.Text = comboBox1.Text;\r\n            if (comboBox1.Text.Trim() == \u0022\u0022)\r\n            {\r\n                label54.Visible = true;\r\n         \r\n                // label50.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label54.Visible = false;\r\n           \r\n\r\n            }\r\n\r\n\r\n\r\n            listBox1.Items.Clear();\r\n            textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (comboBox1.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                comboname = comboBox1.Text.Trim();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox1.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                       // label67.Text = label27.Text;\r\n\r\n          \r\n                    }\r\n                }\r\n                if (lista_ == 0)\r\n                {\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    //  if (linha22.Contains(\u0022\\n\u0022))\r\n                    // {\r\n                    listBox1.Items.Add(linha22);\r\n                    lista_\u002B\u002B;\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n\r\n\r\n                    // }\r\n                }\r\n                if (lista_ == 0)\r\n                {\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n                }\r\n            }\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                // button1.PerformClick();\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        Boolean existe = false;\r\n        private void button42_Click(object sender, EventArgs e)\r\n        {\r\n            existe = false;\r\n            try\r\n            {\r\n\r\n                string result = string.Empty;\r\n                var lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                foreach (var line in lines)\r\n                {\r\n                    if (line.Contains(textBox17.Text))\r\n                    {\r\n                        //var text = line.Replace(\u0022Customer ID :\u0022, \u0022\u0022);\r\n                        //result = text.Trim();\r\n                        existe = true;\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (existe == true)\r\n                {\r\n                    MessageBox.Show(\u0022 Nome ja existente\u0022);\r\n\r\n                }\r\n\r\n                else\r\n                {\r\n\r\n\r\n                    comboBox1.Items.Clear();\r\n                    using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\vessels.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                    {\r\n                        // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                        writer.WriteLine(textBox17.Text);\r\n                        writer.Close();\r\n                    }\r\n\r\n                    MessageBox.Show(\u0022nome cadastrado com sucesso!\u0022);\r\n                    StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                    string x = sr.ReadToEnd();\r\n                    string[] y = x.Split(\u0027\\n\u0027);\r\n                    foreach (string s in y)\r\n                    {\r\n                        comboBox1.Items.Add(s);\r\n                    }\r\n                    sr.Close();\r\n\r\n\r\n                    //  comboBox1.Items.Add(textBox17.Text.Trim());\r\n\r\n\r\n\r\n\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.ToString());\r\n            }\r\n\r\n            //  ListBox1.Items.Add(TextBox1.Text)\r\n            //  Else\r\n            //     MessageBox.Show(\u0022Item ja existente\u0022, Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Information)\r\n            //  End If\r\n        }\r\n\r\n        private void button41_Click_1(object sender, EventArgs e)\r\n        {\r\n            //panel16.Visible = false;\r\n            pcad.Visible = false;\r\n        }\r\n\r\n        private void checkBox1_CheckStateChanged(object sender, EventArgs e)\r\n        {\r\n            //if(checkBox1.CheckState == )\r\n        }\r\n\r\n        private void textBox16_TextChanged(object sender, EventArgs e)\r\n        {\r\n            // button1.PerformClick();\r\n            listBox1.Items.Clear();\r\n\r\n            // lista2_ = 0;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n            foreach (string linha22 in linhas22)\r\n            {\r\n                if (linha22.Contains(textBox16.Text.Trim()))\r\n                {\r\n                    //   listBox1.Items.Add(linha22);\r\n                    //lista2_\u002B\u002B;\r\n                    //label27.Text = lista_.ToString();\r\n                }\r\n            }\r\n\r\n            if (comboBox2.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                listBox1.Items.Clear();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(textBox16.Text.Trim()) \u0026\u0026 linha22.Contains(comboBox2.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n\r\n                        //  lista_\u002B\u002B;\r\n                        //  label27.Text = lista_.ToString();\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                listBox1.Items.Clear();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(textBox16.Text.Trim()))\r\n                        // {\r\n                        listBox1.Items.Add(linha22);\r\n\r\n                    // lista_\u002B\u002B;\r\n                    // label27.Text = lista_.ToString();\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        private void comboBox2_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n            listBox1.Items.Clear();\r\n            pictureBox4.Visible = false;\r\n            textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (comboBox2.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                lista_ = 0;\r\n               // label67.Text = lista_.ToString();\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox2.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                       /// label67.Text = lista_.ToString();\r\n\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                lista_ = 0;\r\n               // label67.Text = lista_.ToString();\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    //  if (linha22.Contains(\u0022\\n\u0022))\r\n                    // {\r\n                    listBox1.Items.Add(linha22);\r\n                    lista_\u002B\u002B;\r\n                    label27.Text = lista_.ToString();\r\n                  //  label67.Text = lista_.ToString();\r\n\r\n\r\n                    // }\r\n                }\r\n\r\n                if (lista_ == 0)\r\n                {\r\n                    // label27.Text = lista_.ToString();\r\n                }\r\n\r\n            }\r\n            button1.PerformClick();\r\n            if (richTextBox16.Text == \u0022 \u0022)\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void comboBox1_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox3.Text != \u0022\u0022)\r\n            {\r\n                comboBox1.Items.Clear();\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                string[] y = x.Split(\u0027\\n\u0027);\r\n                foreach (string s in y)\r\n                {\r\n                    comboBox1.Items.Add(s);\r\n                }\r\n                sr.Close();\r\n            }\r\n        }\r\n\r\n        private void textBox19_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void regs_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (pcad.Visible == false)\r\n            {\r\n                pcad.Visible = true;\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                sr.Close();\r\n\r\n                IP_START.Text = x.Split(\u0027,\u0027)[0].Trim();\r\n                IP_STOP.Text = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            }\r\n            else\r\n            {\r\n                pcad.Visible = false;\r\n            }\r\n        }\r\n        static string ReplaceLastLetter(string text, string newLetter)\r\n        {\r\n            string substring = text.Substring(0, text.Length - 1); // ABC -\u003E AB\r\n            return substring \u002B newLetter; // ABD\r\n        }\r\n        private void button43_Click(object sender, EventArgs e)\r\n        {\r\n            // string text = \u0022Guatavo,1234567890,\u0022;\r\n            // string newLetter = \u0022,Rosana,123456,\u0022;\r\n\r\n\r\n            //  string replaced = ReplaceLastLetter(text, newLetter);\r\n            //  MessageBox.Show(replaced);\r\n\r\n\r\n\r\n            if (comboBox3.Text != \u0022\u0022 \u0026\u0026 textBox19.Text != \u0022\u0022 \u0026\u0026 textBox21.Text != \u0022\u0022 \u0026\u0026 textBox20.Text != \u0022\u0022)\r\n            {\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                sr.Close();\r\n\r\n                string replaced = x.Replace(comboBox3.Text, textBox21.Text).Replace(textBox19.Text, textBox20.Text);\r\n\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                    writer.Write(replaced);\r\n                    writer.Close();\r\n                }\r\n                MessageBox.Show(\u0022CONCLUIDO COM SUCESSO!\u0022);\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022INFORME OS DADOS PARA CADASTRO OU ALTERA\u00C7\u00C3O\u0022);\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button44_Click(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n            int numVirgulas = x.Split(\u0027,\u0027).Length;\r\n\r\n            if (numVirgulas \u003E= 16)\r\n            {\r\n                MessageBox.Show(\u0022O N\u00DAMRO DE USU\u00C1RIOS J\u00C1 EST\u00C1 PREEENCHIDO!\u0022);\r\n\r\n            }\r\n            else\r\n            {\r\n                string text = x;\r\n                string newLetter = \u0022,\u0022 \u002B comboBox3.Text \u002B \u0022,\u0022 \u002B textBox19.Text \u002B \u0022,\u0022;\r\n                string replaced = ReplaceLastLetter(text, newLetter);\r\n\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                    writer.Write(replaced);\r\n                    writer.Close();\r\n                }\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n\r\n        private void button45_Click(object sender, EventArgs e)\r\n        {\r\n            pcad.Visible = false;\r\n           // System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button46_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)\r\n        {\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[1];\r\n            String pass1 = x.Split(\u0027,\u0027)[3];\r\n            String pass2 = x.Split(\u0027,\u0027)[5];\r\n            String pass3 = x.Split(\u0027,\u0027)[7];\r\n            String pass4 = x.Split(\u0027,\u0027)[9];\r\n            String pass5 = x.Split(\u0027,\u0027)[11];\r\n\r\n            if (comboBox3.SelectedIndex == 0)\r\n            {\r\n                textBox19.Text = pass0;\r\n            }\r\n            if (comboBox3.SelectedIndex == 1)\r\n            {\r\n                textBox19.Text = pass1;\r\n            }\r\n            if (comboBox3.SelectedIndex == 2)\r\n            {\r\n                textBox19.Text = pass2;\r\n            }\r\n            if (comboBox3.SelectedIndex == 3)\r\n            {\r\n                textBox19.Text = pass3;\r\n            }\r\n            if (comboBox3.SelectedIndex == 4)\r\n            {\r\n                textBox19.Text = pass4;\r\n            }\r\n            if (comboBox3.SelectedIndex == 5)\r\n            {\r\n                textBox19.Text = pass5;\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void comboBox3_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void comboBox3_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[0];\r\n            String pass1 = x.Split(\u0027,\u0027)[2];\r\n            String pass2 = x.Split(\u0027,\u0027)[4];\r\n            String pass3 = x.Split(\u0027,\u0027)[6];\r\n            String pass4 = x.Split(\u0027,\u0027)[8];\r\n            String pass5 = x.Split(\u0027,\u0027)[10];\r\n\r\n            comboBox3.Items.Clear();\r\n            comboBox3.Items.Insert(0, pass0);\r\n            comboBox3.Items.Insert(1, pass1);\r\n            comboBox3.Items.Insert(2, pass2);\r\n            comboBox3.Items.Insert(3, pass3);\r\n            comboBox3.Items.Insert(4, pass4);\r\n            comboBox3.Items.Insert(5, pass5);\r\n\r\n\r\n        }\r\n\r\n        private void comuser_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[0];\r\n            String pass1 = x.Split(\u0027,\u0027)[2];\r\n            String pass2 = x.Split(\u0027,\u0027)[4];\r\n            String pass3 = x.Split(\u0027,\u0027)[6];\r\n            String pass4 = x.Split(\u0027,\u0027)[8];\r\n            String pass5 = x.Split(\u0027,\u0027)[10];\r\n\r\n            comuser.Items.Clear();\r\n            comuser.Items.Insert(0, pass0);\r\n            comuser.Items.Insert(1, pass1);\r\n            comuser.Items.Insert(2, pass2);\r\n            comuser.Items.Insert(3, pass3);\r\n            comuser.Items.Insert(4, pass4);\r\n            comuser.Items.Insert(5, pass5);\r\n        }\r\n\r\n        private void pictureBox3_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button46_Click_1(object sender, EventArgs e)\r\n        {\r\n            using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n            {\r\n                // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                writer.Write(IP_START.Text \u002B \u0022,\u0022 \u002B IP_STOP.Text);\r\n                writer.Close();\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void regs_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        public static bool HasWriteAccessToFolder(string folderPath)\r\n        {\r\n            try\r\n            {\r\n                // Attempt to get a list of security permissions from the folder. \r\n                // This will raise an exception if the path is read only or do not have access to view the permissions. \r\n                System.Security.AccessControl.DirectorySecurity ds = Directory.GetAccessControl(folderPath);\r\n                MessageBox.Show(\u0022sim\u0022);\r\n                return true;\r\n            }\r\n            catch (UnauthorizedAccessException)\r\n            {\r\n                MessageBox.Show(\u0022n\u00E3o\u0022);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public static String RemoveEnd(String str, int len)\r\n        {\r\n            if (str.Length \u003C len)\r\n            {\r\n                return string.Empty;\r\n            }\r\n\r\n            return str.Remove(str.Length - len);\r\n        }\r\n\r\n\r\n        private void button47_Click(object sender, EventArgs e)\r\n\r\n\r\n        {\r\n            apaga_palavra_txt();\r\n\r\n        }\r\n\r\n        private void button50_Click(object sender, EventArgs e)\r\n        {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n                lblname.Text = drives.FirstOrDefault().Name.ToString();\r\n                string fileName = \u00222022_02_22.xls\u0022;\r\n                string sourcePath = @\u0022C:\\compartilhamento\\data_base\u0022;\r\n                string targetPath = drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022;\r\n\r\n                string destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                System.IO.Directory.CreateDirectory(targetPath);\r\n\r\n                // string folder = @\u0022D:\\CRIPTOQRCODE_AllBackup\\\u0022; //nome do diretorio a ser criado\r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n                if (!Directory.Exists(targetPath))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(targetPath);\r\n\r\n                }\r\n\r\n\r\n\r\n                if (System.IO.Directory.Exists(sourcePath))\r\n                {\r\n                    string[] files = System.IO.Directory.GetFiles(sourcePath);\r\n\r\n                    foreach (string s in files)\r\n                    {\r\n\r\n                        fileName = System.IO.Path.GetFileName(s);\r\n                        destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                        System.IO.File.Copy(s, destFile, true);\r\n                    }\r\n\r\n                    cria_CarregarPlanilha();\r\n                    MessageBox.Show(\u0022Backup creaded with success\u0022);\r\n\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n\r\n\r\n                else\r\n                {\r\n                    Console.WriteLine(\u0022Source path does not exist!\u0022);\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        private void button49_Click(object sender, EventArgs e)\r\n        {\r\n            //https://zetcode.com/csharp/excel/ dicas excel\r\n            SautinSoft.UseOffice u = new SautinSoft.UseOffice();\r\n\r\n            string inpFile = Path.GetFullPath(@\u0022D:\\Controle de Acesso.xlsx\u0022);\r\n            string outFile = Path.GetFullPath(@\u0022D:\\Result.txt\u0022);\r\n            int ret = u.InitExcel();\r\n            if (ret == 1)\r\n            {\r\n                Console.WriteLine(\u0022Error! Can\u0027t load MS Excel library in memory\u0022);\r\n                return;\r\n            }\r\n\r\n            ret = u.ConvertFile(inpFile, outFile, SautinSoft.UseOffice.eDirection.XLS_to_TEXT);\r\n\r\n            u.CloseExcel();\r\n\r\n            string text = File.ReadAllText(@\u0022D:\\Result.txt\u0022);\r\n            text = text.Replace(\u0022\t\u0022, \u0022:\u0022);\r\n            text = text.Replace(\u0022.\u0022, \u0022\u0022);\r\n            text = text.Replace(\u0022-\u0022, \u0022\u0022);\r\n            //var lines2 = File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            //File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines2.Skip(1).ToArray());\r\n\r\n            File.WriteAllText(@\u0022D:\\teste.txt\u0022, text);\r\n\r\n            string text2 = File.ReadAllText(@\u0022D:\\teste.txt\u0022);\r\n            text2 = text2.Replace(\u0022::\u0022, \u0022:\u0022);\r\n            text2 = text2.Replace(\u0022::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022:::::::::::::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022:::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022::::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022::\u0022, \u0022:\u0022);\r\n            text2 = text2.Replace(\u0022-\u0022, \u0022\u0022);\r\n            text2 = text2.ToUpper(new CultureInfo(\u0022en-US\u0022, false));\r\n            File.WriteAllText(@\u0022D:\\teste3.txt\u0022, text2);\r\n            //var lines = File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            //File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1).ToArray());\r\n\r\n\r\n            var lines = System.IO.File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            System.IO.File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1));\r\n            lines = System.IO.File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            System.IO.File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1));\r\n            //  RemoveFirstLinesFromFile(@\u0022D:\\teste3.txt\u0022,1);\r\n            String palavra = File.ReadAllText(@\u0022D:\\teste3.txt\u0022);\r\n            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, palavra);\r\n            MessageBox.Show(\u0022Update concluido com sucesso!\u0022);\r\n        }\r\n\r\n        private void button48_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n           using ClosedXML.Excel;\r\n\r\n           using var wbook = new XLWorkbook(\u0022simple.xlsx\u0022);\r\n\r\n           var ws1 = wbook.Worksheet(1);\r\n           var data = ws1.Cell(\u0022A1\u0022).GetValue\u003Cstring\u003E();\r\n           */\r\n            //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tEmail\tFun\u00E7\u00E3o\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n            Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();\r\n            if (xlApp == null)\r\n\r\n            {\r\n                MessageBox.Show(\u0022Excel is not properly installed!!\u0022);\r\n                return;\r\n            }\r\n\r\n            Excel.Workbook xlWorkBook;\r\n            Excel.Worksheet xlWorkSheet;\r\n\r\n\r\n            object misValue = System.Reflection.Missing.Value;\r\n\r\n            xlWorkBook = xlApp.Workbooks.Add(misValue);\r\n\r\n            xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);\r\n            var plan = xlWorkBook.Worksheets[\u0022Planilha1\u0022];\r\n            plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n            plan.Cells.Style.VerticalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n            //ws.Ranges(\u0022C5, F5:G8\u0022).Style.Fill.BackgroundColor = XLColor.Gray;\r\n            // xlWorkSheet.Rows.AutoFit();\r\n            xlWorkSheet.Cells[1, 1] = \u0022ID Capacete  Identifica\u00E7\u00E3o\u0022;\r\n            xlWorkSheet.Cells[1, 1].EntireColumn.ColumnWidth = 35;\r\n            xlWorkSheet.Cells[1, 1].RowHeight = 50;\r\n            xlWorkSheet.Range[\u0022B1:M1\u0022].Interior.Color = Color.FromArgb(91, 155, 213);// System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightBlue);\r\n                                                                                     // xlWorkSheet.Range[\u0022A1:M1\u0022].Rows;\r\n            xlWorkSheet.Cells[1, 2] = \u0022Empresa\u0022;\r\n            xlWorkSheet.Cells[1, 3] = \u0022Nome Completo\u0022;\r\n            xlWorkSheet.Cells[1, 4] = \u0022Identidade\u0022;\r\n            xlWorkSheet.Cells[1, 5] = \u0022CPF\u0022;\r\n            xlWorkSheet.Cells[1, 6] = \u0022Email\u0022;\r\n            xlWorkSheet.Cells[1, 7] = \u0022Fun\u00E7\u00E3o\u0022;\r\n            xlWorkSheet.Cells[1, 8] = \u0022Data  ASO\u0022;\r\n            xlWorkSheet.Cells[1, 9] = \u0022Data  NR34\u0022;\r\n            xlWorkSheet.Cells[1, 10] = \u0022Data dose 1\u0022;\r\n            xlWorkSheet.Cells[1, 11] = \u0022Data dose 2\u0022;\r\n            xlWorkSheet.Cells[1, 12] = \u0022Data Refor\u00E7o 1\u0022;\r\n            xlWorkSheet.Cells[1, 13] = \u0022Data Refor\u00E7o 2\u0022;\r\n            Excel.Range _range;\r\n\r\n            _range = xlWorkSheet.get_Range(\u0022B1\u0022, \u0022M2000\u0022);\r\n\r\n            //Get the borders collection.\r\n\r\n            Excel.Borders borders = _range.Borders;\r\n\r\n            //Set the hair lines style.\r\n\r\n            borders.LineStyle = Excel.XlLineStyle.xlContinuous;\r\n\r\n            borders.Weight = 2d;\r\n\r\n            xlWorkSheet.Columns.AutoFit();\r\n\r\n            xlWorkBook.SaveAs(\u0022d:\\\\Controle de Acesso_backup.xls\u0022, Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);\r\n            xlWorkBook.Close(true, misValue, misValue);\r\n            xlApp.Quit();\r\n            Marshal.ReleaseComObject(xlWorkSheet);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlApp);\r\n            MessageBox.Show(\u0022Excel file created , you can find the file d:\\\\Controle de Acesso_backup.xls\u0022);\r\n\r\n            //panel15.Visible = false;\r\n        }\r\n\r\n        private void panel11_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer5_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void pictureBox4_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer11_Tick(object sender, EventArgs e)\r\n        {\r\n           \r\n           // timer11.Stop();\r\n        }\r\n\r\n        private void timer11_Tick_1(object sender, EventArgs e)\r\n        {\r\n            \r\n        }\r\n\r\n        private void timer12_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer11_Tick_2(object sender, EventArgs e)\r\n        {\r\n            Ping pingClass = new Ping();\r\n            PingReply pingReply = pingClass.Send(textBox18.Text.Trim());\r\n            label65.Text = (pingReply.RoundtripTime.ToString())\u002B \u0022 ms\u0022;\r\n            //\u002B \u0022ms\u0022);\r\n           // label64.Text = (pingReply.Status.ToString());\r\n        }\r\n\r\n        private void label61_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button24_Click(object sender, EventArgs e)\r\n        {\r\n            if (textBox18.Text != \u0022\u0022) {\r\n                if (timer11.Enabled == false)\r\n                {\r\n                    button24.Text = \u0022PING ON\u0022;\r\n                    timer11.Enabled = true;\r\n                }\r\n                else\r\n                {\r\n                    button24.Text = \u0022PING OFF\u0022;\r\n                    timer11.Enabled = false;\r\n                    label65.Text = \u0022\u0022;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void label65_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer12_Tick_1(object sender, EventArgs e)\r\n        {\r\n            DateTime fdataa = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (pega == false)\r\n            {\r\n                DateTime fdatab = fdataa;\r\n                pega = true;\r\n            }\r\n\r\n\r\n\r\n            if (fdatab != fdataa)\r\n            {\r\n                ler_linha();\r\n                pega = false;\r\n            }\r\n        }\r\n\r\n        private void button48_Click_1(object sender, EventArgs e)\r\n        {\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n            richTextBox1.Text = \u0022 VISITANTE  \u0022\u002BrichTextBox1.Text ;\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B \u0022VISITANTE \u0022 \u002B richTextBox1.Text \u002B \u0022 \\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n         this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n         initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n         final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n            MessageBox.Show(data2);\r\n        }\r\n\r\n        private void bindingSource1_CurrentChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void bindingSource2_CurrentChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button49_Click_1(object sender, EventArgs e)\r\n\r\n        {\r\n            if (richTextBox18.Text != \u0022\u0022)\r\n            {\r\n                imprime_novo();\r\n                button1.PerformClick();\r\n                richTextBox18.Text = \u0022\u0022;\r\n            }\r\n            //create_qrcode_invited_new(); ;// cadastrar_invited()\r\n            //  cadastrar_invited();\r\n        }\r\n\r\n        private void label1_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button31_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void InsertQueue\u003CT\u003E(T data, string collectionName)\r\n        {\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var collection = db.GetCollection\u003CT\u003E(collectionName);\r\n                collection.Insert(data);\r\n            }\r\n        }\r\n\r\n\r\n        private List\u003CUsuario\u003E GetAll()\r\n        {\r\n            var list = new List\u003CUsuario\u003E();\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var col = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                foreach (Usuario _id in col.FindAll())\r\n                {\r\n                    list.Add(_id);\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n\r\n        public void DisplayPresetData()\r\n        {\r\n            dataGridView1.Size = new System.Drawing.Size(1693, 800);\r\n            dataGridView1.DataSource = GetAll();\r\n            this.dataGridView1.DefaultCellStyle.ForeColor = Color.White;\r\n            this.dataGridView1.DefaultCellStyle.BackColor = Color.FromArgb(51, 51, 76);\r\n\r\n            // Allow user to order columns\r\n            dataGridView1.AllowUserToOrderColumns = true;\r\n\r\n            // Enable sorting on all columns\r\n            foreach (DataGridViewColumn column in dataGridView1.Columns)\r\n            {\r\n                column.SortMode = DataGridViewColumnSortMode.Automatic;\r\n            }\r\n\r\n            dataGridView1.Visible = true;\r\n        }\r\n\r\n        private void change()\r\n        {\r\n            //string connectionString = \u0022banco.db\u0022; // Update with your database file path\r\n\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var usuariocollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022); // Update with your collection name\r\n                var usuario = usuariocollection.FindOne(x =\u003E x.Number.ToString().Contains(\u002233\u0022));\r\n                usuario.Name = \u0022fabio\u0022;\r\n                usuario.Company = \u0022teste\u0022;\r\n                usuariocollection.Update(usuario);\r\n            }\r\n\r\n        }\r\n        //1- ler o QR e extrai os dados do usuario\r\n        //2 - Parse dos campo e atribui a um novo User()\r\n        //3 - Envia esse novo User() populado ao add_data()\r\n        private void add_data()\r\n        {\r\n            NUM = NUM \u002B 1;\r\n            Usuario usuario = new Usuario(NUM, \u0022ALEX\u0022, \u0022Googlemarine\u0022, \u0022 4\u0022, 111098414, \u0022 5\u0022, \u0022 6\u0022, \u0022 7\u0022, \u0022 8\u0022, \u0022 9 \u0022, \u002210\u0022, \u0022 11\u0022, \u002212 \u0022, \u002213\u0022, \u002214 \u0022, \u002215 \u0022, \u0022 16\u0022, \u0022 17\u0022, \u0022 18 \u0022, \u002219 \u0022, \u002220 \u0022, \u0022 21 \u0022, \u002222 \u0022, \u002223\u0022);\r\n            InsertQueue(usuario, \u0022usuario\u0022);\r\n        }\r\n\r\n        private void add_data2(Usuario usuario)\r\n        {\r\n            InsertQueue(usuario, \u0022usuario\u0022);\r\n        }\r\n\r\n        private void get_last()\r\n        {\r\n            string connectionString = @\u0022C:\\compartilhamento\\dados\\banco.db\u0022; // Updated database file path\r\n\r\n            using (var db = new LiteDatabase(connectionString))\r\n            {\r\n                var collection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n\r\n                var lastData = collection.Query()\r\n                    .OrderByDescending(x =\u003E x.Number)\r\n                    .FirstOrDefault();\r\n\r\n                if (lastData != null)\r\n                {\r\n                    textBox1.Text = $\u0022Numero: {lastData.Number},Nome: {lastData.Name}, Empresa: {lastData.Company},Identidade: {lastData.Id_number}\u0022;\r\n                    NUM = lastData.Number;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void AddOrUpdateCadastroData(Cadastro cadastro)\r\n        {\r\n            InsertQueue(cadastro, \u0022cadastro\u0022);\r\n        }\r\n\r\n        private void UpdateDataGridView()\r\n        {\r\n            \r\n            Console.WriteLine(\u0022UpdateDataGridView triggered.\u0022);\r\n\r\n            var allData = GetAll();  // Step 1: Get all data\r\n            Console.WriteLine($\u0022Initial Count: {allData.Count}\u0022);\r\n\r\n            string filterString = dataGridView1.FilterString;\r\n            string sortString = dataGridView1.SortString;\r\n            Console.WriteLine(filterString);\r\n            Console.WriteLine(\u0022Filter String: \u0022 \u002B filterString);\r\n            Console.WriteLine(\u0022Sort String: \u0022 \u002B sortString);\r\n\r\n            // Handling filtering based on the specific format from DataGridView\r\n            if (!string.IsNullOrEmpty(filterString))\r\n            {\r\n                // Filter by Name\r\n                var nameMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Name\\] IN \\((.*?)\\)\u0022);\r\n                if (nameMatch.Success)\r\n                {\r\n                    var names = nameMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Names for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, names));\r\n                    allData = allData.Where(u =\u003E names.Contains(u.Name)).ToList();\r\n                }\r\n\r\n                // Filter by Company\r\n                var companyMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Company\\] IN \\((.*?)\\)\u0022);\r\n                if (companyMatch.Success)\r\n                {\r\n                    var companies = companyMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Companies for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, companies));\r\n                    allData = allData.Where(u =\u003E companies.Contains(u.Company)).ToList();\r\n                }\r\n\r\n                // Filter by Function\r\n                var functionMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Function\\] IN \\((.*?)\\)\u0022);\r\n                if (functionMatch.Success)\r\n                {\r\n                    var functions = functionMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Functions for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, functions));\r\n                    allData = allData.Where(u =\u003E functions.Contains(u.Function)).ToList();\r\n                }\r\n                \r\n                //Filter by Vessel\r\n                var vesselMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Vessel\\] IN \\((.*?)\\)\u0022);\r\n                if (vesselMatch.Success)\r\n                {\r\n                    var vessels = vesselMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Vessels for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, vessels));\r\n                    allData = allData.Where(u =\u003E vessels.Contains(u.Vessel)).ToList();\r\n                }\r\n\r\n                //Filter by Local\r\n                var localMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Local\\] IN \\((.*?)\\)\u0022);\r\n                if (localMatch.Success)\r\n                {\r\n                    var local = localMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, local));\r\n                    allData = allData.Where(u =\u003E local.Contains(u.Local)).ToList();\r\n                }\r\n\r\n                //Filter by Checked_in_val\r\n                var checkedInValMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Checked_in_val\\] IN \\((.*?)\\)\u0022);\r\n                if (checkedInValMatch.Success)\r\n                {\r\n                    var checkedInVal = checkedInValMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkedInValMatch));\r\n                    allData = allData.Where(u =\u003E checkedInVal.Contains(u.Checked_in_val)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_val\r\n                var checkOutValMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_val\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutValMatch.Success)\r\n                {\r\n                    var checkOutVal = checkOutValMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutValMatch));\r\n                    allData = allData.Where(u =\u003E checkOutVal.Contains(u.Check_out_val)).ToList();\r\n                }\r\n\r\n                //Filter by Check_in_data\r\n                var checkInDataMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_in_data\\] IN \\((.*?)\\)\u0022);\r\n                if (checkInDataMatch.Success)\r\n                {\r\n                    var checkInData = checkInDataMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkInDataMatch));\r\n                    allData = allData.Where(u =\u003E checkInData.Contains(u.Check_in_data)).ToList();\r\n                }\r\n\r\n                //Filter by Check_in_hora\r\n                var checkInHoraMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_in_hora\\] IN \\((.*?)\\)\u0022);\r\n                if (checkInHoraMatch.Success)\r\n                {\r\n                    var checkInHora = checkInHoraMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkInHoraMatch));\r\n                    allData = allData.Where(u =\u003E checkInHora.Contains(u.Check_in_hora)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_data\r\n                var checkOutDataMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_data\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutDataMatch.Success)\r\n                {\r\n                    var checkOutData = checkOutDataMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutDataMatch));\r\n                    allData = allData.Where(u =\u003E checkOutData.Contains(u.Check_out_data)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_hora\r\n                var checkOutHoraMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_hora\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutHoraMatch.Success)\r\n                {\r\n                    var checkOutHora = checkOutHoraMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutHoraMatch));\r\n                    allData = allData.Where(u =\u003E checkOutHora.Contains(u.Check_out_hora)).ToList();\r\n                }\r\n\r\n                //Filter by Projec\r\n                var projecMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Projec\\] IN \\((.*?)\\)\u0022);\r\n                if (projecMatch.Success)\r\n                {\r\n                    var projec = projecMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Projec for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, projec));\r\n                    allData = allData.Where(u =\u003E projec.Contains(u.Projec)).ToList();\r\n                }\r\n\r\n                //Filter by Aso\r\n                var asoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Aso\\] IN \\((.*?)\\)\u0022);\r\n                if (asoMatch.Success)\r\n                {\r\n                    var aso = asoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Aso for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, aso));\r\n                    allData = allData.Where(u =\u003E aso.Contains(u.Aso)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_34\r\n                var nr34Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_34\\] IN \\((.*?)\\)\u0022);\r\n                if (nr34Match.Success)\r\n                {\r\n                    var nr34 = nr34Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_34 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr34));\r\n                    allData = allData.Where(u =\u003E nr34.Contains(u.Nr_34)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_10\r\n                var nr10Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_10\\] IN \\((.*?)\\)\u0022);\r\n                if (nr10Match.Success)\r\n                {\r\n                    var nr10 = nr10Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_10 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr10));\r\n                    allData = allData.Where(u =\u003E nr10.Contains(u.Nr_10)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_33\r\n                var nr33Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_33\\] IN \\((.*?)\\)\u0022);\r\n                if (nr33Match.Success)\r\n                {\r\n                    var nr33 = nr33Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_33 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr33));\r\n                    allData = allData.Where(u =\u003E nr33.Contains(u.Nr_33)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_35\r\n                var nr35Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_35\\] IN \\((.*?)\\)\u0022);\r\n                if (nr35Match.Success)\r\n                {\r\n                    var nr35 = nr35Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_35 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr35));\r\n                    allData = allData.Where(u =\u003E nr35.Contains(u.Nr_35)).ToList();\r\n                }\r\n\r\n                //Filter by Motivo\r\n                var motivoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Motivo\\] IN \\((.*?)\\)\u0022);\r\n                if (motivoMatch.Success)\r\n                {\r\n                    var motivo = motivoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Motivo for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, motivo));\r\n                    allData = allData.Where(u =\u003E motivo.Contains(u.Motivo)).ToList();\r\n                }\r\n\r\n                //Filter by Level\r\n                var levelMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Level\\] IN \\((.*?)\\)\u0022);\r\n                if (levelMatch.Success)\r\n                {\r\n                    var level = levelMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Level for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, level));\r\n                    allData = allData.Where(u =\u003E level.Contains(u.Level)).ToList();\r\n                }\r\n\r\n                //Filter by Estado\r\n                var estadoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Estado\\] IN \\((.*?)\\)\u0022);\r\n                if (estadoMatch.Success)\r\n                {\r\n                    var estado = estadoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Estado for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, estado));\r\n                    allData = allData.Where(u =\u003E estado.Contains(u.Estado)).ToList();\r\n                }\r\n\r\n                //Filter by User\r\n                var userMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[User\\] IN \\((.*?)\\)\u0022);\r\n                if (userMatch.Success)\r\n                {\r\n                    var user = userMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed User for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, user));\r\n                    allData = allData.Where(u =\u003E user.Contains(u.User)).ToList();\r\n                }\r\n\r\n\r\n            }\r\n\r\n            // Sorting logic\r\n            if (!string.IsNullOrEmpty(sortString))\r\n            {\r\n                if (sortString.Contains(\u0022[Number]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Number).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Number).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Name]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Name).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Name).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Company]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Company).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Company).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Vessel]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Vessel).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Vessel).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Function]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Function).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Function).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Level]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Level).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Level).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Id_number]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Id_number).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Id_number).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Email]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Email).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Email).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Checked_in_val]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Checked_in_val).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Checked_in_val).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_val]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_val).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_val).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_in_data]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_in_data).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_in_data).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_in_hora]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_in_hora).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_in_hora).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_data]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_data).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_data).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_hora]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_hora).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_hora).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Projec]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Projec).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Projec).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Aso]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Aso).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Aso).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_34]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_34).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_34).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_10]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_10).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_10).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_33]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_33).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_33).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_35]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_35).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_35).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Estado]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Estado).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Estado).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Motivo]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Motivo).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Motivo).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[User]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.User).ToList() :\r\n                              allData.OrderBy(u =\u003E u.User).ToList();\r\n                }\r\n\r\n            }\r\n\r\n            Console.WriteLine($\u0022Filtered and Sorted Object Count: {allData.Count}\u0022);\r\n\r\n            // Update the DataGridView\r\n            dataGridView1.DataSource = allData;\r\n\r\n            \r\n            Console.WriteLine(filterString);\r\n        }\r\n\r\n\r\n\r\n        private void dataGridView1_SortStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.SortEventArgs e)\r\n        {\r\n            UpdateDataGridView();\r\n        }\r\n\r\n        private void dataGridView1_FilterStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.FilterEventArgs e)\r\n        {\r\n             UpdateDataGridView();\r\n        }\r\n      \r\n\r\n\r\n\r\n        private void Create_DB()\r\n        {\r\n            //make dir C:\\compartilhamento\\dados if not exist\r\n            if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n            {\r\n                Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n            }\r\n\r\n\r\n            LiteDatabase db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022);\r\n            //create Usuario collection\r\n            var usuarioCollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n            var cadastroCollection = db.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n            //popuplate Usuario collection\r\n         //usuarioCollection.Insert(new Usuario(1, \u0022ALEX\u0022, \u0022Googlemarine\u0022, \u0022 4\u0022, 111098414, \u0022 5\u0022, \u0022 6\u0022, \u0022 7\u0022, \u0022 8\u0022, \u0022 9 \u0022, \u002210\u0022, \u0022 11\u0022, \u002212 \u0022, \u002213\u0022, \u002214 \u0022, \u002215 \u0022, \u0022 16\u0022, \u0022 17\u0022, \u0022 18 \u0022, \u002219 \u0022, \u002220 \u0022, \u0022 21 \u0022, \u002222 \u0022, \u002223\u0022));  \r\n            hasDb = true;\r\n            db.Dispose();\r\n        }\r\n\r\n   \r\n\r\n        private async void button50_Click_1(object sender, EventArgs e)\r\n        {\r\n            //synch_db(rede1.Trim());\r\n            /*\r\n           QRCodeEncryptor = new QRCodeEncryptor();\r\n            string originalText = \u0022Texto que ser\u00E1 criptografado e depois descriptografado.\u0022;\r\n\r\n            // Criptografa o texto\r\n            string encryptedText = QRCodeEncryptor.EncryptQRCode(originalText);\r\n            Console.WriteLine(\u0022Texto criptografado: \u0022 \u002B encryptedText);\r\n\r\n            // Descriptografa o texto\r\n            string decryptedText = QRCodeEncryptor.DecryptQRCode(encryptedText);\r\n            Console.WriteLine(\u0022Texto descriptografado: \u0022 \u002B decryptedText);\r\n            */\r\n\r\n\r\n            // Supondo que o endere\u00E7o IP da rede local \u00E9 192.168.0.*\r\n            // Supondo que o endere\u00E7o IP da rede local \u00E9 192.168.0.*\r\n            string baseIP = \u0022190.168.0.\u0022;\r\n\r\n            // Executar as tarefas em paralelo para acelerar o processo.\r\n            var tasks = new Task[255];\r\n\r\n            for (int i = 1; i \u003C= 254; i\u002B\u002B)\r\n            {\r\n                string ip = baseIP \u002B i.ToString();\r\n                tasks[i - 1] = PingAsync(ip);\r\n            }\r\n\r\n            await Task.WhenAll(tasks);\r\n        }\r\n        private async Task PingAsync(string ip)\r\n        {\r\n            Ping ping = new Ping();\r\n            PingReply reply = await ping.SendPingAsync(ip, 1000); // Timeout de 1000 ms\r\n            if (reply.Status == IPStatus.Success)\r\n            {\r\n                // Aqui voc\u00EA pode adicionar o IP a uma lista, ou fazer algo com ele.\r\n                Console.WriteLine($\u0022M\u00E1quina ativa encontrada em: {ip}\u0022);\r\n            }\r\n        }\r\n        private void richTextBox12_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void lbustter_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void lv1_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void label18_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox18_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            button28.PerformClick();\r\n            if (richTextBox18.Text != \u0022\u0022)\r\n            {\r\n                richTextBox16.Text = richTextBox18.Text;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                label37.Text = \u0022\u0022;\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                check_if_exist_number2();\r\n                \r\n            }\r\n        }\r\n\r\n        private void richTextBox18_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer13_Tick(object sender, EventArgs e)\r\n        {\r\n            try\r\n            {\r\n                textBox22.Text = \u0022\u0022;\r\n                textBox22.Text = rede \u002B \u0022 On-Line\u0022;\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic class DatabaseExporter\r\n{\r\n    public void ExportDataToExcel(string dbPath, string excelFilePath)\r\n    {\r\n        using (var db = new LiteDatabase(dbPath))\r\n        {\r\n            var usuarioCollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n            var allUsuarios = usuarioCollection.FindAll().ToList();\r\n\r\n            using (var workbook = new XLWorkbook())\r\n  \r\n            {\r\n                var worksheet = workbook.Worksheets.Add(\u0022Usuarios\u0022);\r\n                worksheet.Cell(1, 1).Value = \u0022Number\u0022;\r\n                worksheet.Cell(1, 2).Value = \u0022Name\u0022;\r\n                worksheet.Cell(1, 3).Value = \u0022Company\u0022;\r\n                worksheet.Cell(1, 4).Value = \u0022Function\u0022;\r\n                worksheet.Cell(1, 5).Value = \u0022Id_number\u0022;\r\n                worksheet.Cell(1, 6).Value = \u0022Email\u0022;\r\n                worksheet.Cell(1, 7).Value = \u0022Vessel\u0022;\r\n                worksheet.Cell(1, 8).Value = \u0022Checked_in_val\u0022;\r\n                worksheet.Cell(1, 9).Value = \u0022Check_out_val\u0022;\r\n                worksheet.Cell(1, 10).Value = \u0022Check_in_data\u0022;\r\n                worksheet.Cell(1, 11).Value = \u0022Check_in_hora\u0022;\r\n                worksheet.Cell(1, 12).Value = \u0022Check_out_data\u0022;\r\n                worksheet.Cell(1, 13).Value = \u0022Check_out_hora\u0022;\r\n                worksheet.Cell(1, 14).Value = \u0022Projec\u0022;\r\n                worksheet.Cell(1, 15).Value = \u0022Aso\u0022;\r\n                worksheet.Cell(1, 16).Value = \u0022Nr_34\u0022;\r\n                worksheet.Cell(1, 17).Value = \u0022Nr_10\u0022;\r\n                worksheet.Cell(1, 18).Value = \u0022Nr_33\u0022;\r\n                worksheet.Cell(1, 19).Value = \u0022Nr_35\u0022;\r\n                worksheet.Cell(1, 20).Value = \u0022Local\u0022;\r\n                worksheet.Cell(1, 21).Value = \u0022Level\u0022;\r\n                worksheet.Cell(1, 22).Value = \u0022Estado\u0022;\r\n                worksheet.Cell(1, 23).Value = \u0022Motivo\u0022;\r\n                worksheet.Cell(1, 24).Value = \u0022User\u0022;\r\n                \r\n\r\n                for (int i = 0; i \u003C allUsuarios.Count; i\u002B\u002B)\r\n                {\r\n                    var usuario = allUsuarios[i];\r\n                    worksheet.Cell(i \u002B 2, 1).Value = usuario.Number;\r\n                    worksheet.Cell(i \u002B 2, 2).Value = usuario.Name;\r\n                    worksheet.Cell(i \u002B 2, 3).Value = usuario.Company;\r\n                    worksheet.Cell(i \u002B 2, 4).Value = usuario.Function;\r\n                    worksheet.Cell(i \u002B 2, 5).Value = usuario.Id_number;\r\n                    worksheet.Cell(i \u002B 2, 6).Value = usuario.Email;\r\n                    worksheet.Cell(i \u002B 2, 7).Value = usuario.Vessel;\r\n                    worksheet.Cell(i \u002B 2, 8).Value = usuario.Checked_in_val;\r\n                    worksheet.Cell(i \u002B 2, 9).Value = usuario.Check_out_val;\r\n                    worksheet.Cell(i \u002B 2, 10).Value = usuario.Check_in_data;\r\n                    worksheet.Cell(i \u002B 2, 11).Value = usuario.Check_in_hora;\r\n                    worksheet.Cell(i \u002B 2, 12).Value = usuario.Check_out_data;\r\n                    worksheet.Cell(i \u002B 2, 13).Value = usuario.Check_out_hora;\r\n                    worksheet.Cell(i \u002B 2, 14).Value = usuario.Projec;\r\n                    worksheet.Cell(i \u002B 2, 15).Value = usuario.Aso;\r\n                    worksheet.Cell(i \u002B 2, 16).Value = usuario.Nr_34;\r\n                    worksheet.Cell(i \u002B 2, 17).Value = usuario.Nr_10;\r\n                    worksheet.Cell(i \u002B 2, 18).Value = usuario.Nr_33;\r\n                    worksheet.Cell(i \u002B 2, 19).Value = usuario.Nr_35;\r\n                    worksheet.Cell(i \u002B 2, 20).Value = usuario.Local;\r\n                    worksheet.Cell(i \u002B 2, 21).Value = usuario.Level;\r\n                    worksheet.Cell(i \u002B 2, 22).Value = usuario.Estado;\r\n                    worksheet.Cell(i \u002B 2, 23).Value = usuario.Motivo;\r\n                    worksheet.Cell(i \u002B 2, 24).Value = usuario.User;\r\n                }\r\n\r\n                workbook.SaveAs(excelFilePath);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic class NetworkConnection : IDisposable\r\n{\r\n    string _networkName;\r\n\r\n    public NetworkConnection(string networkName, NetworkCredential credentials)\r\n    {\r\n        _networkName = networkName;\r\n\r\n        var netResource = new NetResource()\r\n        {\r\n            Scope = ResourceScope.GlobalNetwork,\r\n            ResourceType = ResourceType.Disk,\r\n            DisplayType = ResourceDisplaytype.Share,\r\n            RemoteName = networkName\r\n        };\r\n\r\n        var result = WNetAddConnection2(netResource, credentials.Password, credentials.UserName, 0);\r\n\r\n        if (result != 0)\r\n        {\r\n         \r\n        }\r\n    }\r\n\r\n    ~NetworkConnection()\r\n    {\r\n        Dispose(false);\r\n    }\r\n\r\n    public void Dispose()\r\n    {\r\n        Dispose(true);\r\n        GC.SuppressFinalize(this);\r\n    }\r\n\r\n    protected virtual void Dispose(bool disposing)\r\n    {\r\n        WNetCancelConnection2(_networkName, 0, true);\r\n    }\r\n\r\n    [DllImport(\u0022mpr.dll\u0022)]\r\n    private static extern int WNetAddConnection2(NetResource netResource, string password, string username, int flags);\r\n\r\n    [DllImport(\u0022mpr.dll\u0022)]\r\n    private static extern int WNetCancelConnection2(string name, int flags, bool force);\r\n\r\n    [StructLayout(LayoutKind.Sequential)]\r\n    public class NetResource\r\n    {\r\n        public ResourceScope Scope;\r\n        public ResourceType ResourceType;\r\n        public ResourceDisplaytype DisplayType;\r\n        public int Usage;\r\n        public string LocalName;\r\n        public string RemoteName;\r\n        public string Comment;\r\n        public string Provider;\r\n    }\r\n\r\n    public enum ResourceScope : int\r\n    {\r\n        Connected = 1,\r\n        GlobalNetwork,\r\n        Remembered,\r\n        Recent,\r\n        Context\r\n    };\r\n\r\n    public enum ResourceType : int\r\n    {\r\n        Any = 0,\r\n        Disk = 1,\r\n        Print = 2,\r\n        Reserved = 8,\r\n    }\r\n\r\n    public enum ResourceDisplaytype : int\r\n    {\r\n        Generic = 0x0,\r\n        Domain = 0x01,\r\n        Server = 0x02,\r\n        Share = 0x03,\r\n        File = 0x04,\r\n        Group = 0x05,\r\n        Network = 0x06,\r\n        Root = 0x07,\r\n        Shareadmin = 0x08,\r\n        Directory = 0x09,\r\n        Tree = 0x0a,\r\n        Ndscontainer = 0x0b\r\n    }\r\n}","Selections":[{"Caret":148648,"Start":148648,"End":148648}],"FilePath":"C:\\Cripto_qr_mult - Copia\\criptoqrcode_multi\\criptoqrcode\\Form1.cs","Language":"C#"}],"PreSelectedSkill":null,"CorrelationId":{"Guid":"6b95c91f-0ce6-44bb-83c4-6a128f656286"}}},"Response":{"Content":"To implement the Singleton design pattern with LiteDB, you can create a Singleton instance of a \u0060LiteDatabase\u0060 object. This ensures that only one instance of the LiteDB database is created and used throughout your application.\r\n\r\nHere\u0027s an example:\r\n\r\n\u0060\u0060\u0060csharp\r\npublic class LiteDbSingleton\r\n{\r\n   private static LiteDatabase database = null;\r\n   private static readonly object padlock = new object();\r\n\r\n   private LiteDbSingleton() { }\r\n\r\n    public static LiteDatabase GetInstance(string connectionString)\r\n    {\r\n        if (database == null)\r\n        {\r\n            lock (padlock)\r\n            {\r\n                if (database == null)\r\n                {\r\n                    // Create a new instance of LiteDatabase\r\n                    database = new LiteDatabase(connectionString);\r\n                }\r\n            }\r\n        }\r\n        return database;\r\n    }\r\n}\r\n\u0060\u0060\u0060\r\n\r\nIn this example, the \u0060GetInstance\u0060 method returns the \u0060LiteDatabase\u0060 instance. If an instance is not already created, it creates a new instance of the \u0060LiteDatabase\u0060 class. The \u0060padlock\u0060 object is used to ensure that only one thread at a time can access the object.\r\n\r\nTo use this Singleton instance, you can simply call \u0060LiteDbSingleton.GetInstance(connectionString)\u0060 to retrieve the instance of \u0060LiteDatabase\u0060 throughout your application.\r\n\r\nIt\u0027s important to note that while the Singleton pattern can be a useful tool in managing resources like LiteDB instances, it should not be used as a global variable. Instead of using a Singleton, it\u0027s often a better idea to use dependency injection and pass in a single instance of \u0060LiteDatabase\u0060 to all classes and methods that require access to the database. This makes your code more testable and maintainable in the long run.","Type":0,"Status":1,"FollowUpPrompts":["What is the purpose of the padlock object?","How can I implement dependency injection for my LiteDB instance?"]},"SelectedFunctionName":"Answer","LoggedSkillInvocations":null}
{"version":1,"Request":{"Prompt":"Help me analyze the current exception. Start with \u0022This error happens because\u0022 and concisely describe the error. Then, start with \u0022This might be happening because\u0022, think step by step and explain in less than 200 words why I am getting the error. There is more code in my application that might be contributing to the error. You can suggest a fix or tell me what additional information is needed to solve it.","Context":{"VisibleDocuments":[],"PreSelectedSkill":"VSSkill.ExplainException","CorrelationId":{"Guid":"d6a7467f-6347-4a8b-bbc5-8d243f9f4395"}}},"Response":{"Content":"This error happens because the \u0060rede2\u0060 variable is null, and you are trying to access its third element in the array returned by \u0060Split(\u0027\\\\\u0027)\u0060. This means that the \u0060Split\u0060 method is returning an array with less than three elements, causing the \u0060NullReferenceException\u0060 when you try to access the third element.\r\n\r\nThis might be happening because the \u0060rede2\u0060 variable is not being properly initialized or assigned a value before the \u0060Split\u0060 method is called. You can check if \u0060rede2\u0060 is null before calling \u0060Split\u0060 to avoid this exception. Additionally, you can add a null check before accessing the third element of the array returned by \u0060Split\u0060 to ensure that the array has at least three elements. \r\n\r\nTo further investigate this issue, you can add some debug statements to your code to print out the value of \u0060rede2\u0060 before the line that throws the exception. This will help you identify if \u0060rede2\u0060 is null or not.","Type":0,"Status":1,"FollowUpPrompts":["How can I check if \u0060rede2\u0060 is null?","Can you give me an example of how to add debug statements to my code?"]},"SelectedFunctionName":"ExplainException","LoggedSkillInvocations":null}
{"version":1,"Request":{"Prompt":"Im having an error saying Im having an issue trying to access the banco.db because it is been used by other process","Context":{"VisibleDocuments":[{"Content":"using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Forms;\r\nusing System;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing AForge.Video;\r\nusing AForge.Video.DirectShow;\r\nusing System.Windows.Forms;\r\nusing NPOI.SS.UserModel;\r\nusing NPOI.HSSF.UserModel;\r\nusing NPOI.XSSF.UserModel;\r\nusing Microsoft.Office.Interop.Excel;\r\nusing ZXing;\r\nusing System.IO;\r\nusing System.Runtime.InteropServices;\r\nusing Spire.Barcode;\r\nusing System.Drawing.Printing;\r\nusing System.Drawing.Imaging;\r\nusing System.Data.OleDb;\r\nusing System.Collections;\r\nusing System.Text.RegularExpressions;\r\nusing SimpleWifi;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\nusing System.Net.Mail;\r\nusing System.Net;\r\nusing System.Net.NetworkInformation;\r\nusing System.Threading;\r\nusing System.Management;\r\nusing System.Diagnostics;\r\nusing System.Globalization;\r\nusing System.Text;\r\nusing Font = System.Drawing.Font;\r\nusing System.Security.Permissions;\r\nusing System.Security;\r\nusing ClosedXML.Excel;\r\nusing Excel = Microsoft.Office.Interop.Excel;\r\nusing Microsoft.Office.Interop.Excel;\r\nusing System.Security.AccessControl;\r\nusing System.Security.Principal;\r\nusing System.Reflection;\r\nusing DocumentFormat.OpenXml.Bibliography;\r\nusing uPLibrary.Networking.M2Mqtt;\r\nusing uPLibrary.Networking.M2Mqtt.Messages;\r\nusing ZXing.QrCode.Internal;\r\nusing static System.Windows.Forms.VisualStyles.VisualStyleElement;\r\nusing static System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar;\r\nusing DocumentFormat.OpenXml.Vml.Office;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing Color = System.Drawing.Color;\r\nusing DocumentFormat.OpenXml.Drawing;\r\nusing Path = System.IO.Path;\r\nusing LiteDB;\r\nusing NPOI.SS.Formula.Functions;\r\nusing System.Security.Cryptography;\r\nusing criptoqrcode;\r\nusing DocumentFormat.OpenXml.ExtendedProperties;\r\nusing DocumentFormat.OpenXml.Office2010.Word;\r\nusing System.Net.NetworkInformation;\r\nusing System.Threading.Tasks;\r\nusing DocumentFormat.OpenXml.Vml;\r\nusing System.Collections.Concurrent;\r\n\r\nnamespace criptoqrcode\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n\r\n        delegate void SetTextCallback(string text);\r\n        private QRCodeEncryptor QRCodeEncryptor;\r\n        MqttClient client;\r\n        string clientId;\r\n        string vintequatro;\r\n        string vintedois;\r\n        string vinte;\r\n        string vinteum;\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            PopularCadastro.ParseAndInsertToLiteDB(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n        }\r\n        //internal static password Password = new password();\r\n        static AutoResetEvent reconnectEvent = new AutoResetEvent(false);\r\n        //static S22.Imap.ImapClient client;\r\n        //Form mainFormHandler;\r\n        //Microsoft.Office.Interop.Excel.Application XcelApp = new Microsoft.Office.Interop.Excel.Application();\r\n        private static Wifi wifi;\r\n        public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }\r\n        // public static extern int GetWindowThreadProcessId(int handle, out int processId);\r\n        Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();\r\n        Microsoft.Office.Interop.Excel.Workbook wb;\r\n\r\n        Microsoft.Office.Interop.Excel.Worksheet ws;\r\n        //  Excel.Application app = new Excel.Application();\r\n        Microsoft.Office.Interop.Excel.Workbook pasta;\r\n        Microsoft.Office.Interop.Excel.Worksheet plan;\r\n        Microsoft.Office.Interop.Excel.Application XcelApp = new Microsoft.Office.Interop.Excel.Application();\r\n        StreamReader rdr = null;\r\n\r\n        String[] lMessage1 = { \u0022Favor marcar o local e o nivel de acesso para finalizar o cadastro\u0022, \u0022Check Local and Access level Please\u0022 };\r\n        String[] label_nome = { \u0022N\u00FAmero/Nome\u0022, \u0022Number/Name\u0022 };//onboard People\r\n        String[] label_onboard = { \u0022Pessoas a bordo\u0022, \u0022People Onboard\u0022 };//onboard People\r\n        String[] label_emp = { \u0022Empresa/Trip\u0022, \u0022Company/Crew\u0022 };\r\n        // registration only\r\n        //N\u00FAmero de pessoas a bordo:\r\n        String[] onboard = { \u0022N\u00FAmero de pessoas a bordo:\u0022, \u0022                    Onboard People:\u0022 };\r\n        String[] label_reg = { \u0022Cadastrar\u0022, \u0022Registration\u0022 };\r\n        String[] label_vessel = { \u0022Local\u0022, \u0022Place\u0022 };\r\n        String[] label_porj = { \u0022Projeto\u0022, \u0022Project\u0022 };\r\n        String[] label_Function = { \u0022Fun\u00E7\u00E3o\u0022, \u0022Function\u0022 };\r\n        String[] label_Id = { \u0022Identidade\u0022, \u0022ID number\u0022 };\r\n        String[] label_vaccine1 = { \u0022NR-10\u0022, \u0022NR-10\u0022 };\r\n        String[] label_vaccine2 = { \u0022NR-33\u0022, \u0022NR-33\u0022 };\r\n        String[] label_reforco = { \u0022NR-35\u0022, \u0022NR-35\u0022 };\r\n        String[] label_level = { \u0022Nivel\u0022, \u0022Level\u0022 };\r\n        String[] label_acc = { \u0022Nivel de Acesso\u0022, \u0022Access Level\u0022 };\r\n        String[] label_yellow = { \u0022Amarelo\u0022, \u0022Yellow\u0022 };\r\n        String[] label_green = { \u0022Verde\u0022, \u0022Green\u0022 };\r\n        String[] label_red = { \u0022Vermelho\u0022, \u0022Red\u0022 };\r\n        String[] place1 = { \u0022Conv\u00E9s\u0022, \u0022Main Deck\u0022 };\r\n        String[] place2 = { \u0022Pra\u00E7a de Maquina\u0022, \u0022Engine Roon\u0022 };\r\n        String[] place3 = { \u0022Tijup\u00E1\u0022, \u0022monkey island\u0022 };\r\n        String[] place4 = { \u0022Casario\u0022, \u0022Acomodation Place\u0022 };\r\n        String[] Label_initial = { \u0022Data Inicial\u0022, \u0022Check-in\u0022 };\r\n        String[] Label_final = { \u0022Data Limite \u0022, \u0022Check-out\u0022 };\r\n        String[] Label_Read_QRcode_On = { \u0022Modo ler Qrcode \u0022, \u0022Read QRcode mode\u0022 };\r\n        String[] Label_Read_QRcode_Off = { \u0022Modo Cadastro\u0022, \u0022Registration mode\u0022 };\r\n        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n        String[] Label_close_data = { \u0022Fecha banco de dados:\u0022, \u0022Close DataBase\u0022 };\r\n        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n        String[] Label_Mostrar_checkin = { \u0022Pessoas a bordo:\u0022, \u0022Show Onboard\u0022 };\r\n        String[] Label_fechar = { \u0022Fechar:\u0022, \u0022Exit\u0022 };\r\n        String[] Label_reset = { \u0022Reiniciar:\u0022, \u0022Reset\u0022 };\r\n        String[] Label_cancel = { \u0022Cancelar\u0022, \u0022Cancel\u0022 };\r\n        String[] Label_entrada = { \u0022Entrada\u0022, \u0022Check-in\u0022 };\r\n        String[] Label_saida = { \u0022Saida\u0022, \u0022Check-out\u0022 };\r\n        String[] id_check = { \u0022ESTA IDENTIDADE J\u00C1 EST\u00C1 CADASTRADA\u0022, \u0022THIS ID NUMBER ALREADY EXIST\u0022 };\r\n        String[] Label_reset_project = { \u0022Novo Projeto\u0022, \u0022New Project\u0022 };\r\n        String[] Label_cadastro = { \u0022Cadastro Concluido com sucesso\u0022, \u0022Register concluded with success\u0022 };\r\n        String[] label_cad1 = { \u0022Cadastrados\u0022, \u0022Registed\u0022 };\r\n        String[] Label_53 = { \u0022Cadastro Embarca\u00E7\u00E3o\u0022, \u0022Vessel Register\u0022 };\r\n        String[] bt_41 = { \u0022Sair\u0022, \u0022Exit\u0022 };\r\n        String[] bt_42 = { \u0022Cadastrar\u0022, \u0022Register\u0022 };\r\n        String[] bt_43 = { \u0022Editar\u0022, \u0022Edit\u0022 };\r\n        String[] bt_44 = { \u0022Cadastrar\u0022, \u0022Register\u0022 };\r\n        String[] bt_45 = { \u0022Sair\u0022, \u0022Exit\u0022 };\r\n        String[] bt_regis = { \u0022CADASTRAR\u0022, \u0022REGISTER\u0022 };\r\n        String[] cad_mode = { \u0022Favor selecionar o local antes de colocar em modo cadastro\u0022, \u0022Please select the place option before use register mode\u0022 };\r\n        String[] read_mode = { \u0022Favor selecionar o local antes de colocar em modo ler qrcode\u0022, \u0022Please select the place option before use read mode\u0022 };\r\n        DateTime fdataa;\r\n        DateTime fdatab;\r\n        string _cad;\r\n        string _read;\r\n        string nb;\r\n        Boolean checa_host_ = false;\r\n\r\n        string passall;\r\n        bool libera = false;\r\n        Boolean entrou = false;\r\n        Boolean online_ = false;\r\n        // Print QRcode Create Show DataBase Save Backup Settings Wi-Fi connection Send Qr Code  by E-mail\r\n        //Show Check-in\r\n        int NUM = 0;\r\n        string hostName = System.Net.Dns.GetHostName();\r\n        string _ipstart;\r\n        string _ipstop;\r\n        string MyhostName;\r\n        int tempo = 0;\r\n        string bb;\r\n        string rede10;\r\n        string rede1;\r\n        string rede2;\r\n        string rede3;\r\n        string localname;\r\n        string comboname = \u0022\u0022;\r\n        string qr_generate = \u0022\u0022;\r\n        string data2 = \u0022NOME: CRISTIANO\u0022;\r\n        string number = \u0022Number\u0022;\r\n        string nome = \u0022NOME:\u0022;\r\n        string emp = \u0022COMPANY:\u0022;\r\n        string function = \u0022FUNCTION:\u0022;\r\n        string id = \u0022ID:\u0022;\r\n        string vessel = \u0022VESSEL:\u0022;\r\n        string initial = \u0022START\u0022;\r\n        string final = \u0022END\u0022;\r\n        string input_data = \u0022\u0022;\r\n        string input_hora = \u0022\u0022;\r\n        string output_data = \u0022\u0022;\r\n        string output_hora = \u0022\u0022;\r\n        string email = \u0022\u0022;\r\n        string criterio;\r\n        string path2;\r\n        string path3;\r\n        string[] subs2;\r\n        DateTime fproj;\r\n        int band = 0;\r\n        int confere = 0;\r\n        int teste = 0;\r\n        int resultado = 0;\r\n        int checado = 0;\r\n        int checado2 = 0;\r\n        int zzz = 0;\r\n        int comp = 0;\r\n        int compr = 0;\r\n        int lista2 = 0;\r\n        int lista3_;\r\n        string st;\r\n        int loc = 0;\r\n        int lav = 0;\r\n        bool rec = false;\r\n        int ping_local = 0;\r\n        int count = 2; //Count the number of successful pings\r\n        bool grava_number = false;\r\n        Boolean pega = false;\r\n        String varPalavra = \u0022teste\u0022;\r\n        string path = @\u0022C:\\compartilhamento\\data_base\\2022_02_19.xls\u0022;\r\n        int Linhas = 0;\r\n        string z = \u0022\u0022;\r\n        int inside = 0;\r\n        int s4 = 0;\r\n        int okay = 0;\r\n        int cri = 0;\r\n        int aso_1 = 0;\r\n        string rede = \u0022\u0022;\r\n        int id_1 = 0;\r\n        bool online = false;\r\n        string text1 = \u0022\u0022;\r\n        string text2 = \u0022\u0022;\r\n        string text3 = \u0022\u0022;\r\n        string text4 = \u0022\u0022;\r\n        string text5 = \u0022\u0022;\r\n        string text6 = \u0022\u0022;\r\n        string text7 = \u0022\u0022;\r\n        string text8 = \u0022\u0022;\r\n        string ip;\r\n        string ip1;\r\n        string ip2;\r\n        string ip3;\r\n        string rich5 = \u0022\u0022;\r\n        string rich9 = \u0022\u0022;\r\n        int local1val = 0;\r\n        int local2val = 0;\r\n        int local3val = 0;\r\n        int local4val = 0;\r\n        int levelyellow = 0;\r\n        int levelgreen = 0;\r\n        int levelred = 0;\r\n        String myping2 = \u0022\u0022;\r\n        int p = 0;\r\n        Boolean inout = false;\r\n        int mmm = 0;\r\n        string textbloc;\r\n        string textbloc2;\r\n        int l = 0;\r\n        public string caminhoImagemSalva = null;\r\n        public string caminhoImagemSalva2 = null;\r\n        bool r7 = false;\r\n        bool company_loc = false;\r\n        bool id_exist = false;\r\n        bool ok_but2 = false;\r\n        bool valor_ch = false;\r\n        bool id_onboard = false;\r\n        bool id_onboard2 = false;\r\n        bool cad_change = false;\r\n        bool alter = false;\r\n        bool cad = false;\r\n        bool print_ = false;\r\n        bool lido = false;\r\n        bool hasDb = false;\r\n        FilterInfoCollection filterInfoCollection;\r\n        VideoCaptureDevice videoCaptureDevice;\r\n        Bitmap bmp;\r\n        // DateTime flogo3;\r\n\r\n        DateTime flogo3 = DateTime.Now;\r\n\r\n        int tr = 0;\r\n\r\n\r\n\r\n        public static string GetWIFISignalStrength()\r\n        {\r\n            try\r\n            {\r\n                ObjectQuery query = new ObjectQuery(\u0022SELECT * FROM MSNdis_80211_ReceivedSignalStrength Where active = true\u0022);\r\n                ManagementScope scope = new ManagementScope(\u0022root\\\\wmi\u0022);\r\n                ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);\r\n                string result = \u0022\u0022;\r\n                foreach (ManagementObject obj in searcher.Get())\r\n                {\r\n                    if ((bool)obj[\u0022Active\u0022] == true)\r\n                    {\r\n                        result \u002B= (string)obj[\u0022Ndis80211ReceivedSignalStrength\u0022].ToString() \u002B Environment.NewLine;\r\n                    }\r\n                }\r\n                if (result == \u0022\u0022)\r\n                {\r\n                    result = \u0022No active WI-FI adapters found!\u0022;\r\n                }\r\n\r\n                return result.Trim();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message, \u0022Search Error\u0022, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n                return string.Empty;\r\n            }\r\n        }\r\n\r\n        private static void CopyFilesRecursively(string sourcePath, string targetPath)\r\n        {\r\n            //Now Create all of the directories\r\n            foreach (string dirPath in Directory.GetDirectories(sourcePath, \u0022*\u0022, SearchOption.AllDirectories))\r\n            {\r\n                Directory.CreateDirectory(dirPath.Replace(sourcePath, targetPath));\r\n            }\r\n\r\n            //Copy all the files \u0026 Replaces any files with the same name\r\n            foreach (string newPath in Directory.GetFiles(sourcePath, \u0022*.*\u0022, SearchOption.AllDirectories))\r\n            {\r\n                File.Copy(newPath, newPath.Replace(sourcePath, targetPath), true);\r\n            }\r\n        }\r\n        // Move a file into another file, delete the original, and create a backup of the replaced file.\r\n        public static void ReplaceFile(string fileToMoveAndDelete, string fileToReplace, string backupOfFileToReplace)\r\n        {\r\n            // Create a new FileInfo object.\r\n            FileInfo fInfo = new FileInfo(fileToMoveAndDelete);\r\n\r\n            // replace the file.\r\n            fInfo.Replace(fileToReplace, backupOfFileToReplace, true);\r\n        }\r\n\r\n\r\n        public static void copyAll(string SourcePath, string DestinationPath)\r\n        {\r\n            try\r\n            {\r\n                //Now Create all of the directories\r\n                foreach (string dirPath in Directory.GetDirectories(SourcePath, \u0022*\u0022, SearchOption.AllDirectories))\r\n                    Directory.CreateDirectory(Path.Combine(DestinationPath, dirPath.Remove(0, SourcePath.Length)));\r\n\r\n                //Copy all the files \u0026 Replaces any files with the same name\r\n                foreach (string newPath in Directory.GetFiles(SourcePath, \u0022*.*\u0022, SearchOption.AllDirectories))\r\n                    File.Copy(newPath, Path.Combine(DestinationPath, newPath.Remove(0, SourcePath.Length)), true);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void clearFolder(string FolderName)\r\n        {\r\n            DirectoryInfo dir = new DirectoryInfo(FolderName);\r\n\r\n            foreach (FileInfo fi in dir.GetFiles())\r\n            {\r\n                fi.Delete();\r\n            }\r\n\r\n            foreach (DirectoryInfo di in dir.GetDirectories())\r\n            {\r\n                clearFolder(di.FullName);\r\n                di.Delete();\r\n            }\r\n        }\r\n        int vas = 0;\r\n        int valor = 0;\r\n\r\n\r\n\r\n        private void atualiza_received()\r\n        {\r\n\r\n\r\n\r\n\r\n\r\n\r\n            p = 0;\r\n\r\n            vas = 0;\r\n            l = 1;\r\n            try\r\n            {\r\n\r\n\r\n                DateTime fvessel = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                DateTime fvesse2 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022\\\\data_txt\\\\PROJETO.txt\u0022);\r\n                if (fvessel \u003E fvesse2)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n                if (fvessel \u003C fvesse2)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    // copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n\r\n                    copyAll(rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(p.ToString());\r\n                DateTime flogo = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022);\r\n                DateTime flogo1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                if (flogo \u003E flogo1)\r\n                {\r\n\r\n\r\n                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(p.ToString());\r\n                DateTime fpicture = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                DateTime fpicture1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_new_picture\\\\\u0022);\r\n                if (fpicture \u003E fpicture1)\r\n                {\r\n\r\n\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                    copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, rede1.Trim() \u002B \u0022data_picture\\\\\u0022);\r\n                    clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                }\r\n                //  MessageBox.Show(\u0022data_picture ok\u0022);\r\n\r\n\r\n\r\n                DateTime ftime = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim());\r\n                DateTime ftime1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim());\r\n\r\n\r\n                //MessageBox.Show(ftime2.ToString());\r\n                if (ftime \u003E ftime1)\r\n                {\r\n                    // MessageBox.Show(ftime.ToString());\r\n                    // File.Copy(rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim() \u002B \u0022.backup\u0022, true);\r\n                    //  File.Delete(rede.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim());\r\n                    // File.Copy(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), true);\r\n\r\n                }\r\n\r\n                if (ftime1 \u003E ftime)\r\n                {\r\n\r\n                    // File.Copy(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), @\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim() \u002B \u0022.backup\u0022, true);\r\n                    //  File.Delete(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim());\r\n                    File.Copy(rede1.Trim() \u002B \u0022data_base\\\\\u0022 \u002B label18.Text.Trim(), @\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text.Trim(), true);\r\n\r\n                }\r\n\r\n\r\n\r\n                ///  MessageBox.Show(\u0022data_base ok\u0022);\r\n\r\n                ////////////////////////////////////////\r\n                ///\r\n\r\n\r\n                DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                if (vas == 0)\r\n                {\r\n\r\n                    DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n\r\n                    if (fdata \u003E f1data)\r\n                    {\r\n                        // vas = 1;\r\n                        // File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, true);\r\n                        // ler_linha();\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n                if (vas == 0)\r\n                {\r\n\r\n                    // DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                    DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n                    if (f1data \u003E fdata)\r\n                    {\r\n                        vas = 1;\r\n                        File.Copy(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n                        //  ler_linha();\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n\r\n                DateTime fdata1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n\r\n                if (fdata0 \u003E fdata1)\r\n                {\r\n\r\n                    File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, true);\r\n                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                    label3.Text = count.ToString().Trim();\r\n                }\r\n\r\n\r\n                if (fdata1 \u003E fdata0)\r\n                {\r\n                    //   File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    File.Copy(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true);\r\n                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                    label3.Text = count.ToString().Trim();\r\n                }\r\n\r\n\r\n\r\n                //  MessageBox.Show(\u0022data2.txt ok\u0022);\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(ex.Message);\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n                // valor\u002B\u002B;\r\n            }\r\n\r\n            finally\r\n            {\r\n\r\n\r\n\r\n                //  atualiza_compartilhamento();\r\n            }\r\n            l = 0;\r\n            // ler_linha();\r\n\r\n            //  }\r\n\r\n\r\n            timer8.Start();\r\n        }\r\n\r\n        private void atualiza_compartilhamento()\r\n        {\r\n             string rede2 = rede1.Replace(\u0022.lan\u0022, \u0022\u0022);\r\n            synch_db(rede1.Trim());\r\n            \r\n                        using (new NetworkConnection(rede2, new NetworkCredential(\u0022Cristiano Eng\u0022, \u0022469618106086\u0022)))\r\n                        {\r\n\r\n                            // Console.WriteLine($\u0022M\u00E1quina ativa encontrada em: {rede1.Trim()}\u0022);\r\n\r\n                            \r\n\r\n\r\n                            rede = rede2.Split(\u0027\\\\\u0027)[2].Trim();\r\n\r\n                            string linha;\r\n                            using (StreamReader reader = new StreamReader(@\u0022C:\\\\compartilhamento\\recebido.txt\u0022))\r\n                            {\r\n                                linha = reader.ReadLine();\r\n                            }\r\n\r\n                            soma = 1;\r\n                            // timer9.Enabled= false;\r\n                            // somando = 0;\r\n\r\n                            //  if (p == 1)\r\n                            //  {\r\n                            //   MessageBox.Show(p.ToString());\r\n\r\n                            //  MessageBox.Show(rede1.ToString());\r\n\r\n                            rec = false;\r\n                            p = 0;\r\n\r\n                            vas = 0;\r\n                            l = 1;\r\n                            try\r\n                            {\r\n                                //      MessageBox.Show(rede1.Trim() \u002B \u0022 Before Synch\u0022);\r\n\r\n\r\n                                DateTime fvessel = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                                DateTime fvesse2 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022\\\\data_txt\\\\PROJETO.txt\u0022);\r\n                                if (fvessel \u003E fvesse2)\r\n                                {\r\n\r\n                                    File.Copy(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, true);\r\n\r\n\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n\r\n\r\n\r\n\r\n                                }\r\n                                // \r\n\r\n                                if (fvessel \u003C fvesse2)\r\n                                {\r\n                                    string caminhoArquivo3 = rede2.Trim() \u002B \u0022\\\\recebido.txt\u0022;\r\n                                    // Abre o arquivo para escrita\r\n                                    using (StreamWriter sw = new StreamWriter(caminhoArquivo3))\r\n                                    {\r\n                                        sw.WriteLine(\u00220\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                    }\r\n\r\n                                    File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022, true);\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    // copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022);\r\n\r\n                                    //   copyAll(rede1.Trim() \u002B \u0022data_txt\\\\PROJETO.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                DateTime flogo = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022);\r\n                                DateTime flogo1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                                if (flogo \u003E flogo1)\r\n                                {\r\n\r\n\r\n                                    //  copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                    copyAll(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\\u0022, rede2.Trim() \u002B \u0022logo_criptoqrcode\\\\\u0022);\r\n                                    // clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                }\r\n\r\n\r\n                                DateTime fpicture = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                                if (rede2 != null)\r\n                                {\r\n                                    DateTime fpicture1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_new_picture\\\\\u0022);\r\n                                    if (fpicture \u003E fpicture1)\r\n                                    {\r\n\r\n                                        copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                        copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, rede2.Trim() \u002B \u0022data_picture\\\\\u0022);\r\n                                        clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n\r\n                                    }\r\n                                    //  MessageBox.Show(\u0022data_picture ok\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    // Uncomment the following line if you want to display a message box indicating the synchronization is done\r\n                                    // MessageBox.Show(\u0022data_base ok\u0022);\r\n\r\n\r\n                                    ////////////////////////////////////////\r\n                                    ///\r\n\r\n\r\n                                    DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                                    if (vas == 0)\r\n                                    {\r\n\r\n                                        DateTime f1data = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n\r\n                                        if (fdata \u003E f1data)\r\n                                        {\r\n                                            vas = 1;\r\n                                            //if (linha == \u00221\u0022)\r\n                                            // {\r\n                                            File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, true);\r\n                                            //  saida_manual();\r\n                                            //     linha=\u00220\u0022;\r\n                                            //  }\r\n\r\n                                            // client.Publish(\u0022switch1\u0022, Encoding.UTF8.GetBytes(\u0022ok 1\u0022), MqttMsgBase.QOS_LEVEL_AT_MOST_ONCE, false);\r\n                                            // File.\r\n                                            // ler_linha();\r\n                                            //  MessageBox.Show(number);\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                    if (vas == 0)\r\n                                    {\r\n\r\n                                        // DateTime fdata = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                                        DateTime f1data = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data.txt\u0022);\r\n                                        if (f1data \u003E fdata)\r\n                                        {\r\n                                            vas = 1;\r\n                                            File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\data.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n                                            // ler_linha();\r\n\r\n\r\n                                            // MessageBox.Show(\u0022data menor\u0022);\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                    DateTime fdata1 = File.GetLastWriteTime(rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n\r\n                                    if (fdata0 \u003E fdata1)\r\n                                    {\r\n                                        //  if (linha == \u00221\u0022)\r\n                                        //  {\r\n\r\n                                        File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, true);\r\n                                        int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                        label3.Text = count.ToString().Trim();\r\n                                        //   linha = \u00220\u0022;\r\n                                        // }  \r\n                                    }\r\n\r\n\r\n                                    if (fdata1 \u003E fdata0)\r\n                                    {\r\n                                        //   File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                        File.Copy(rede2.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true);\r\n                                        int count2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                        label3.Text = count2.ToString().Trim();\r\n\r\n\r\n                                    }\r\n                                    //     MessageBox.Show(\u0022data\u0022);\r\n\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                                string caminhoArquivo = rede2.Trim() \u002B \u0022data_txt\\\\data4.txt\u0022;\r\n                                // Abre o arquivo para escrita\r\n                                //   using (StreamWriter sw = new StreamWriter(caminhoArquivo))\r\n                                //   {\r\n                                //      sw.WriteLine(\u00221\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                //   }\r\n\r\n                                // somando\u002B\u002B;\r\n\r\n                                //   string caminhoArquivo2 = rede1.Trim() \u002B \u0022\\\\recebido.txt\u0022;\r\n                                // Abre o arquivo para escrita\r\n                                //  using (StreamWriter sw = new StreamWriter(caminhoArquivo2))\r\n                                // {\r\n                                // sw.WriteLine(\u00221\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                                // }\r\n\r\n                                // MessageBox.Show(rede1.Trim());\r\n\r\n                                MessageBox.Show(\u0022ok\u0022);\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                // somando--;\r\n\r\n                                MessageBox.Show(rede2.Trim() \u002B \u0022  \u0022 \u002B ex.Message);\r\n                                ///   MessageBox.Show(\u0022falha\u0022);\r\n                                // valor\u002B\u002B;\r\n                                // panel12.BackColor = Color.Black;\r\n\r\n                            }\r\n\r\n                            //  MessageBox.Show(\u0022ok\u0022);\r\n                            l = 0;\r\n\r\n                            comp = 1;\r\n                            //  string nomeArquivo3 = rede1.Trim() \u002B \u0022lock.txt\u0022;\r\n                            //  using (StreamWriter writer = new StreamWriter(nomeArquivo3, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                            //  {\r\n                            //    writer.WriteLine(\u00220\u0022);\r\n                            //    writer.Close();\r\n                            // }\r\n\r\n\r\n\r\n                            rec = true;\r\n                            soma = 0;\r\n                            /// timer9.Enabled = true;\r\n                            //   timer9.Enabled = true;\r\n                        }\r\n                        \r\n        }\r\n\r\n\r\n        private void synch_db(String rede)\r\n        {\r\n            using (new NetworkConnection(rede, new NetworkCredential(\u0022111111\u0022, \u0022469618106086\u0022)))\r\n            {\r\n                // rede = rede1.Split(\u0027\\\\\u0027)[2].Trim();\r\n                try\r\n                {\r\n                    string localDbPath = @\u0022C:\\compartilhamento\\dados\\banco.db\u0022;\r\n                    //  string remoteDbPath = rede \u002B \u0022\\\\dados\\\\banco.db\u0022;\r\n                    string rede2 = rede.Replace(\u0022.lan\u0022, \u0022\u0022);\r\n                    string remoteDbPath = rede2 \u002B \u0022\\\\dados\\\\banco.db\u0022;\r\n\r\n                    List\u003CUsuario\u003E localUsers;\r\n                    List\u003CUsuario\u003E remoteUsers;\r\n\r\n                    List\u003CCadastro\u003E localCadastro;\r\n                    List\u003CCadastro\u003E remoteCadastro;\r\n\r\n                    // Fetch all the users from the local database\r\n                    using (var localDb = new LiteDatabase(localDbPath))\r\n                    {\r\n\r\n                        localUsers = localDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022)\r\n                                            .FindAll()\r\n                                            .ToList();\r\n\r\n                        localCadastro = localDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022)\r\n                            .FindAll()\r\n                                            .ToList();\r\n                    }\r\n\r\n                    // Fetch all the users from the remote database\r\n                    using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                    {\r\n\r\n                        remoteUsers = remoteDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022)\r\n                                              .FindAll()\r\n                                              .ToList();\r\n\r\n                        remoteCadastro = remoteDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022)\r\n                            .FindAll()\r\n                                              .ToList();\r\n                    }\r\n\r\n                    // Synchronization logic\r\n                    SynchronizeDatabases(localDbPath, remoteDbPath, localUsers, remoteUsers);\r\n                    SynchronizeCadastroDatabases(localDbPath, remoteDbPath, localCadastro, remoteCadastro);\r\n                    //MessageBox.Show(\u0022ok\u0022);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    // MessageBox.Show(\u0022DB_Synch 867\u0022);\r\n                    MessageBox.Show(rede.Trim() \u002B \u0022  \u0022 \u002B ex.Message);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        void SynchronizeDatabases(string localDbPath, string remoteDbPath, List\u003CUsuario\u003E localUsers, List\u003CUsuario\u003E remoteUsers)\r\n        {\r\n            try\r\n            {\r\n\r\n\r\n\r\n                // Find the intersection and the unique users from each database\r\n                var intersectUsers = localUsers.Intersect(remoteUsers).ToList();\r\n                var localUniqueUsers = localUsers.Except(intersectUsers).ToList();\r\n                var remoteUniqueUsers = remoteUsers.Except(intersectUsers).ToList();\r\n\r\n                // Update the local database with unique users from the remote database\r\n                using (var localDb = new LiteDatabase(localDbPath))\r\n                {\r\n                    var userCollection = localDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                    userCollection.InsertBulk(remoteUniqueUsers);\r\n                }\r\n\r\n                // Update the remote database with unique users from the local database\r\n                using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                {\r\n                    var userCollection = remoteDb.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                    userCollection.InsertBulk(localUniqueUsers);\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Log the exception details\r\n\r\n            }\r\n\r\n        }\r\n\r\n        void SynchronizeCadastroDatabases(string localDbPath, string remoteDbPath, List\u003CCadastro\u003E localCadastro, List\u003CCadastro\u003E remoteCadastro)\r\n        {\r\n            try\r\n            {\r\n\r\n\r\n\r\n                // Find the intersection and the unique users from each database\r\n                var intersectCadastro = localCadastro.Intersect(remoteCadastro).ToList();\r\n                var localUniqueCadastro = localCadastro.Except(intersectCadastro).ToList();\r\n                var remoteUniqueCadastro = remoteCadastro.Except(intersectCadastro).ToList();\r\n\r\n                // Update the local database with unique users from the remote database\r\n                using (var localDb = new LiteDatabase(localDbPath))\r\n                {\r\n                    var cadastroCollection = localDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n                    cadastroCollection.InsertBulk(remoteUniqueCadastro);\r\n                }\r\n\r\n                // Update the remote database with unique users from the local database\r\n                using (var remoteDb = new LiteDatabase(remoteDbPath))\r\n                {\r\n                    var cadastroCollection = remoteDb.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n                    cadastroCollection.InsertBulk(localUniqueCadastro);\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Log the exception details\r\n\r\n            }\r\n        }\r\n\r\n        System.Data.DataTable dt = new System.Data.DataTable();\r\n        private DataSet ds;\r\n        int number2 = 0;\r\n        private void print_qrcode()\r\n        {\r\n\r\n            try\r\n            {\r\n                if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1)\r\n                {\r\n\r\n\r\n                    String data_new;\r\n                    String data2_new;\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n                    else\r\n                    {\r\n                        data_new = richTextBox6.Text.Trim();\r\n                    }\r\n                    if (dateTimePicker2.Visible == true)\r\n                    {\r\n                        data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n                    else\r\n                    {\r\n                        data2_new = richTextBox7.Text.Trim();\r\n                    }\r\n                    if (richTextBox16.Text == \u0022\u0022)\r\n                    {\r\n\r\n\r\n\r\n                        int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                        \r\n\r\n  \r\n\r\n                        string number = count.ToString().Trim();\r\n\r\n                        // string number = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                        label3.Text = number;\r\n                        number2 = Int32.Parse(label3.Text);\r\n                        lb4.Visible = true;\r\n                        number2\u002B\u002B;\r\n                        // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022, number2.ToString());\r\n                        label3.Text = number2.ToString();\r\n                        lb4.Text = label3.Text;\r\n\r\n\r\n\r\n\r\n                        label5.Text = \u0022 \u0022;\r\n                        label28.Text = \u0022 \u0022;\r\n                        label30.Text = \u0022 \u0022;\r\n                        label31.Text = \u0022 \u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        panel11.Visible = false;\r\n                        panel4.Visible = true;\r\n                        label5.Text = richTextBox2.Text;\r\n                        label28.Text = comboBox1.Text;\r\n                        label30.Text = richTextBox9.Text;\r\n                        label31.Text = \u0022De: \u0022 \u002B data_new;\r\n                        label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n                    }\r\n\r\n                    else\r\n                    {\r\n\r\n                        label5.Text = \u0022 \u0022;\r\n                        label28.Text = \u0022 \u0022;\r\n                        label30.Text = \u0022 \u0022;\r\n                        label31.Text = \u0022 \u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        panel11.Visible = false;\r\n                        panel4.Visible = true;\r\n                        label5.Text = richTextBox2.Text;\r\n                        label28.Text = comboBox1.Text;\r\n                        label30.Text = richTextBox9.Text;\r\n                        label31.Text = \u0022De: \u0022 \u002B data_new;\r\n                        label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n                    }\r\n\r\n\r\n                    int width = panel4.Size.Width;\r\n                    int height = panel4.Size.Height;\r\n                    Bitmap bm = new Bitmap(width, height);\r\n                    panel4.DrawToBitmap(bm, new System.Drawing.Rectangle(0, 0, width, height));\r\n                    bm.Save(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n\r\n\r\n                    PrintDocument pd = new PrintDocument();\r\n                    comboPaperSize.DisplayMember = \u0022Etiqueta\u0022;\r\n                    System.Drawing.Printing.PaperSize pkSize;\r\n                    pkSize = pd.PrinterSettings.PaperSizes[57];\r\n                    //   pd.DefaultPageSettings.PrinterResolution = new PrinterResolution() { Kind = PrinterResolutionKind.Medium };\r\n\r\n                    comboPaperSize.Items.Add(pkSize);\r\n                    pd.DefaultPageSettings.Landscape = true;\r\n                    pd.PrintPage \u002B= (sender, args) =\u003E\r\n                    {\r\n                        Image i = bm;\r\n                        System.Drawing.Rectangle m = args.PageBounds;\r\n                        args.Graphics.DrawImage(i, 20, 5, 296, 216);\r\n                    };\r\n\r\n                    //  bm.Save(@\u0022C:\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n                    pd.Print();\r\n                    pd.Print();\r\n                    // label5.Visible = false;\r\n                    /// label4.Visible = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    if (band == 0)\r\n                    {\r\n                        MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                    }\r\n\r\n                    if (band == 1)\r\n                    {\r\n                        MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                    }\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022A IMPRESSORA BROTHER QL810 ou QL800 N\u00C3O EST\u00C1 DEFINIDA COMO IMPRESSORA PADR\u00C3O, FAVOR DEFINIR NO PAINEL DE CONTROLE DO WINDOWS NA OP\u00C7\u00C3O (Dispositivos e Impressoras)!\u0022);\r\n            }\r\n        }\r\n        private void out_by_user()\r\n        {\r\n            try\r\n            {\r\n\r\n                // richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                string bio = listBox1.SelectedItem.ToString().Trim();\r\n                // string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(Int16.Parse(bio.Split(\u0027:\u0027)[0]));\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich2 = Int32.Parse(label3.Text);\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n\r\n\r\n\r\n\r\n                for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n                {\r\n                    //print \u0022entrou no for\u0022\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(i);\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[1].Trim() == bio.Split(\u0027:\u0027)[1].Trim())\r\n                        {\r\n\r\n                            //NUMBER\tNAME\tCOMPANY\tFUNCTION\tID\tEMAIL\tVESSEL\tCHECK-IN VALIDATION\t  CHECK-OUT VALIDATION\t CHECK-IN\t     CHECK-OUT\tPROJECT\tASO\tNR-35\tVACCINE-1\tVACCINE-2\tBOOST VACCINE\tLOCAL\tLEVEL\tESTADO\tMOTIVO\tUSUARIO\r\n                            try\r\n                            {    //  1        2          3     4        5    6       7          8                           9                  10              11             12              13         14      15      16        17            18             19          20     21      22     23       24\r\n\r\n                                // NUMBER    NAME    COMPANY FUNCTION    ID EMAIL   VESSEL CHECK-IN VALIDATION     CHECK-OUT VALIDATION   CHECK-IN  DATA  CHECK-IN  HORA CHECK-OUT DATA CHECK-OUT HORA PROJECT    ASO    NR-35   VACCINE - 1   VACCINE - 2   BOOST VACCINE   LOCAL LEVEL   ESTADO MOTIVO  USUARIO\r\n\r\n                                //Number: 1  Name: CRISTIANO CALHEIROS  Compay: GOOGLEMARINE Id: 111098414  :E - Mail: cristiano.engenharia.ac @gmail.com\r\n                                // string bio = listBox1.SelectedItem.ToString().Trim();\r\n\r\n                                // 0      1    2              3             4         5             6           7      8       9          10                    11                      12         13          14      15      16        17           18            19            20              22              23               24               25              26         27   28\r\n                                // Number: 1 : Name: CRISTIANO CALHEIROS : Compay: GOOGLEMARINE: Funcition: ENGENHEIRO: Id: 111098414 : E - mail : cristiano.engenharia.ac @gmail.com: Vessel: Googlemarine: Project: 190605 : ASO: 02 / 02 / 2025 : NR - 34 : 02 / 02 / 2025 : Vaccine - 1 : 02 / 02 / 2025 : Vaccine - 2 : 02 / 02 / 2025 : Booster vaccine : 02 / 02 / 2025 :  : COMUM:\r\n\r\n                                output_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                                output_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n\r\n\r\n\r\n\r\n                                var num = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                var nome = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                var empresa = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                var funcao = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                var id = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                var email = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                                var vessel = secondLine.Split(\u0027:\u0027)[13].Trim();\r\n                                var checked_in_val = \u0022\u0022;\r\n                                var check_out_val = \u0022\u0022;\r\n                                var checked_in_data = \u0022*\u0022;\r\n                                var checked_in_hora = \u0022*\u0022;\r\n                                var checked_out_data = output_data;\r\n                                var checked_out_hora = output_hora \u002B \u0022: MANUAL PELO USU\u00C1RIO\u0022;\r\n                                var user = comuser.Text;\r\n\r\n                                //create and populate new Usuario\r\n                                Usuario usuario = new Usuario(\r\n                                     Int32.Parse(num), nome, empresa, funcao, Int32.Parse(id), email, vessel, checked_in_val, check_out_val, checked_in_data, checked_in_hora, checked_out_data, checked_out_hora, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, \u0022\u0022, user);\r\n                                add_data2(usuario);\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                            // */\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                /// MessageBox.Show(\u0022N\u00C3O A DADOS CADASTRADOS!\u0022);\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n        // [DllImport(\u0022user32.dll\u0022), CharSet= CharSet.Auto, SetLastError = true)]\r\n        //  public static extern int GetWindowThreadProcessId(int handle,out int processId);\r\n\r\n\r\n\r\n        private void carrega_planilha_txt()\r\n        {\r\n            string filePath = \u0022C:\\\\compartilhamento\\\\data_base\\\\novo.txt\u0022;\r\n\r\n\r\n\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            vinte = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n            vinteum = localname;\r\n\r\n            string contentToAppend = richTextBox16.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox2.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox1.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox3.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox8.Text.Trim() \u002B \u0022,\u0022 \u002B comboBox1.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B input_data.Trim() \u002B \u0022,\u0022 \u002B input_hora.Trim() \u002B \u0022,\u0022 \u002B output_data.Trim() \u002B \u0022,\u0022 \u002B output_hora.Trim() \u002B \u0022,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,\u0022 \u002B vinteum \u002B \u0022,\u0022 \u002B vintedois \u002B \u0022,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n\r\n            // Verifica se o arquivo existe antes de tentar adicionar o conte\u00FAdo\r\n            if (File.Exists(filePath))\r\n            {\r\n                // Abre o arquivo em modo de anexa\u00E7\u00E3o (append)\r\n                using (StreamWriter writer = File.AppendText(filePath))\r\n                {\r\n                    // Escreve o conte\u00FAdo no arquivo\r\n                    writer.WriteLine(contentToAppend);\r\n                }\r\n\r\n                Console.WriteLine(\u0022Conte\u00FAdo adicionado com sucesso.\u0022);\r\n            }\r\n        }\r\n        private void CarregarPlanilha()\r\n        {\r\n\r\n            //  int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n            pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n            plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n            txtCodigoFunci.Text = lastRow.ToString();\r\n            lastRow\u002B\u002B;\r\n            /*\r\nxlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\nxlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\nxlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\nxlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\nxlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\nxlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\nxlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\nxlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\nxlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\nxlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\nxlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\nxlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\nxlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\nxlWorkSheet.Cells[1, 16] = \u0022NR-35\u0022;\r\nxlWorkSheet.Cells[1, 17] = \u0022VACCINE-1\u0022;\r\nxlWorkSheet.Cells[1, 18] = \u0022VACCINE-2\u0022;\r\nxlWorkSheet.Cells[1, 19] = \u0022BOOST VACCINE\u0022;\r\nxlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\nxlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\nxlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\nxlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\nxlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n                         output_data = DateTime.Now.ToString(\u0022dd-MM-yyyy\u0022);\r\n                output_hora = DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n*/\r\n\r\n            string contentToAppend = nb \u002B \u0022,\u0022 \u002B richTextBox2.Text \u002B \u0022,\u0022 \u002B richTextBox1.Text \u002B \u0022,\u0022 \u002B richTextBox3.Text \u002B \u0022,\u0022 \u002B richTextBox4.Text \u002B \u0022,\u0022 \u002B richTextBox8.Text \u002B \u0022,\u0022 \u002B comboBox1.Text \u002B \u0022,\u0022 \u002B richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim() \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text \u002B \u0022,\u0022 \u002B input_data \u002B \u0022,\u0022 \u002B input_hora \u002B \u0022,\u0022 \u002B output_data \u002B \u0022,\u0022 \u002B output_hora \u002B \u0022,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,,\u0022 \u002B vintedois \u002B \u0022,,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n            plan.Cells[lastRow, 1] = richTextBox16.Text;\r\n            plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n            plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n            plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n            plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n            plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n            plan.Cells[lastRow, 7] = comboBox1.Text;\r\n            plan.Cells[lastRow, 8] = richTextBox6.Text.Trim() \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text.Trim();\r\n            plan.Cells[lastRow, 9] = \u0022.\u0022 \u002B richTextBox7.Text.Trim(); //DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n            plan.Cells[lastRow, 10] = input_data;\r\n            plan.Cells[lastRow, 11] = input_hora;\r\n            plan.Cells[lastRow, 12] = output_data;\r\n            plan.Cells[lastRow, 13] = output_hora;\r\n            plan.Cells[lastRow, 14] = richTextBox9.Text.Trim();\r\n            plan.Cells[lastRow, 15] = richTextBox10.Text.Trim();\r\n            plan.Cells[lastRow, 16] = richTextBox11.Text.Trim();\r\n            plan.Cells[lastRow, 17] = richTextBox12.Text.Trim();\r\n            plan.Cells[lastRow, 18] = richTextBox13.Text.Trim();\r\n            plan.Cells[lastRow, 19] = richTextBox14.Text.Trim();\r\n            plan.Cells[lastRow, 24] = comuser.Text;\r\n\r\n            localname = \u0022\u0022;\r\n\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            plan.Cells[lastRow, 20] = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n\r\n            plan.Cells[lastRow, 21] = localname;\r\n\r\n            pasta.Save();\r\n            pasta.Close();\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n\r\n            ///  checa_host();\r\n\r\n\r\n            try\r\n            {\r\n                //   checa_host();\r\n                // atualiza_compartilhamento();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(ex.ToString(), ex.Message, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n            }\r\n            //  MessageBox.Show(\u0022CarregarPlanilha - leitura\u0022);\r\n        }\r\n\r\n        private void bloqueio()\r\n        {\r\n            try\r\n            {\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n                // Start at line number 2 because there is a header\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n                    if (richTextBox16.Text.Trim() != \u0022\u0022)\r\n                    {\r\n                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                        {\r\n                            // Copy it where you want\r\n                            //  MessageBox.Show(lines[i].ToString());\r\n                            string text3 = lines[i];\r\n\r\n                            string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                            string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                            text = text.Replace(text3, text4);\r\n                            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //////////////////////////\r\n\r\n                pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n                plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n                txtCodigoFunci.Text = lastRow.ToString();\r\n                lastRow\u002B\u002B;\r\n\r\n                if (richTextBox16.Text == \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = number2;\r\n                }\r\n                if (richTextBox16.Text != \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = Int32.Parse(richTextBox16.Text);\r\n                }\r\n                /*\r\nxlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\nxlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\nxlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\nxlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\nxlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\nxlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\nxlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\nxlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\nxlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\nxlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\nxlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\nxlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\nxlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\nxlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\nxlWorkSheet.Cells[1, 16] = \u0022NR-35\u0022;\r\nxlWorkSheet.Cells[1, 17] = \u0022VACCINE-1\u0022;\r\nxlWorkSheet.Cells[1, 18] = \u0022VACCINE-2\u0022;\r\nxlWorkSheet.Cells[1, 19] = \u0022BOOST VACCINE\u0022;\r\nxlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\nxlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\nxlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\nxlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\nxlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n             output_data = DateTime.Now.ToString(\u0022dd-MM-yyyy\u0022);\r\n    output_hora = DateTime.Now.ToString(\u0022hh:mm:ss tt\u0022);\r\n*/\r\n                // qr_generate = label37.Text;\r\n                plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n                plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n                plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n                plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n                plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n                plan.Cells[lastRow, 7] = comboBox1.Text;\r\n                // plan.Cells[lastRow, 8] = DateTime.Now;\r\n\r\n                //xlWorkSheet.Cells[1, 20] = \u0022ESTADO\u0022;\r\n                // xlWorkSheet.Cells[1, 21] = \u0022MOTIVO\u0022;\r\n                // xlWorkSheet.Cells[1, 22] = \u0022USUARIO\u0022;\r\n                plan.Cells[lastRow, 14] = richTextBox9.Text;\r\n                plan.Cells[lastRow, 15] = richTextBox10.Text;\r\n                plan.Cells[lastRow, 16] = richTextBox11.Text;\r\n                plan.Cells[lastRow, 17] = richTextBox12.Text;\r\n                plan.Cells[lastRow, 18] = richTextBox13.Text;\r\n                plan.Cells[lastRow, 19] = richTextBox14.Text;\r\n                plan.Cells[lastRow, 22] = bb;\r\n                plan.Cells[lastRow, 23] = richTextBox17.Text;\r\n                plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n\r\n                localname = \u0022\u0022;\r\n                bb = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (local1.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n                }\r\n                if (local2.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n                }\r\n                if (local3.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n                }\r\n                if (local4.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 20] = localname;\r\n\r\n                localname = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (level_yellow.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n                }\r\n                if (level_green.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n                }\r\n                if (level_red.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n                }\r\n\r\n                plan.Cells[lastRow, 21] = localname;\r\n\r\n\r\n\r\n\r\n                pasta.Save();\r\n                //pasta.Close();\r\n                app.Quit();\r\n                pasta.Close();\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                //CarregarPlanilha();\r\n                //   atualiza_compartilhamento();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                // MessageBox.Show(ex.ToString(), ex.Message, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n            }\r\n\r\n        }\r\n        public void txt_to_excel()\r\n        {\r\n            string[] InputNamesLines = System.IO.File.ReadAllLines(@\u0022c:\\teste\\excel.txt\u0022);\r\n            string secondLine = File.ReadLines(@\u0022c:\\teste\\data2.txt\u0022).ElementAtOrDefault(1);\r\n            //if()\r\n            Excel.Application oXl;\r\n            Excel._Workbook oWB;\r\n            Excel._Worksheet xlWorkSheet;\r\n            Excel.Range oRng;\r\n            object misvalue = System.Reflection.Missing.Value;\r\n            try\r\n            {\r\n                oXl = new Excel.Application();\r\n                oXl.Visible = true;\r\n\r\n                oWB = (Excel._Workbook)(oXl.Workbooks.Add(\u0022\u0022));\r\n                xlWorkSheet = (Excel.Worksheet)oWB.ActiveSheet;\r\n                xlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\n                xlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\n                xlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\n                xlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n                xlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\n                xlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\n                xlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\n                xlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n                xlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\n                xlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\n                xlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\n                xlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\n                xlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\n                xlWorkSheet.Cells[1, 16] = \u0022NR-34\u0022;\r\n                xlWorkSheet.Cells[1, 17] = \u0022NR-10\u0022;\r\n                xlWorkSheet.Cells[1, 18] = \u0022NR-33\u0022;\r\n                xlWorkSheet.Cells[1, 19] = \u0022NR-35\u0022;\r\n                xlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\n                xlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\n                xlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\n                xlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\n                xlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n                xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022).Font.Bold = true;\r\n                xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022).VerticalAlignment = Excel.XlVAlign.xlVAlignCenter;\r\n                for (int i = 1; i \u003C= InputNamesLines.Length; i\u002B\u002B)\r\n                {\r\n                    // oSheet.Cells[1][i \u002B 1] = i;\r\n                    // oSheet.Cells[2][i \u002B 1] =   InputNamesLines[i - 1];\r\n                    // oSheet.Cells[3]= secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                }\r\n                xlWorkSheet.Cells[1, 3] = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                Thread.Sleep(5000);\r\n                oRng = xlWorkSheet.get_Range(\u0022A1\u0022, \u0022C1\u0022);\r\n                oRng.EntireColumn.AutoFit();\r\n                oXl.Visible = false;\r\n                oWB.SaveAs(@\u0022c:\\teste\\teste.xls\u0022, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, false, false, Excel.XlSaveAsAccessMode.xlNoChange,\r\n                    Type.Missing, Type.Missing, Type.Missing, Type.Missing);\r\n                oWB.Close();\r\n                Marshal.ReleaseComObject(oWB);\r\n                Marshal.ReleaseComObject(oWB);\r\n                Marshal.ReleaseComObject(oWB);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void carrega_planilha2_txt()\r\n        {\r\n            string filePath = \u0022C:\\\\compartilhamento\\\\data_base\\\\novo.txt\u0022;\r\n\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                nb = number2.ToString();\r\n            }\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                nb = richTextBox16.Text.Trim();\r\n            }\r\n            if (alter == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022ALTERADO\u0022;\r\n                alter = false;\r\n            }\r\n            if (print_ == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022PRINTED\u0022;\r\n                print_ = false;\r\n\r\n            }\r\n            if (lido == true)\r\n            {\r\n                vintedois = \u0022LIDO\u0022;\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                lido = false;\r\n            }\r\n\r\n            if (cad == true)\r\n            {\r\n                vintequatro = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                vintedois = \u0022CADASTRADO\u0022;\r\n                cad = false;\r\n            }\r\n\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (local1.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n            }\r\n            if (local2.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n            }\r\n            if (local3.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n            }\r\n            if (local4.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n            }\r\n\r\n\r\n            vinte = localname;\r\n\r\n            localname = \u0022\u0022;\r\n            // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n            if (level_yellow.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n            }\r\n            if (level_green.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n            }\r\n            if (level_red.Checked == true)\r\n            {\r\n                localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n            }\r\n\r\n\r\n            string contentToAppend = nb \u002B \u0022,\u0022 \u002B richTextBox2.Text \u002B \u0022,\u0022 \u002B richTextBox1.Text \u002B \u0022,\u0022 \u002B richTextBox3.Text \u002B \u0022,\u0022 \u002B richTextBox4.Text \u002B \u0022,\u0022 \u002B richTextBox8.Text \u002B \u0022,\u0022 \u002B comboBox1.Text \u002B \u0022,\u0022 \u002B richTextBox6.Text \u002B \u0022,\u0022 \u002B \u0022.\u0022 \u002B richTextBox7.Text \u002B \u0022,,,,,\u0022 \u002B richTextBox9.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox10.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox11.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox12.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox13.Text.Trim() \u002B \u0022,\u0022 \u002B richTextBox14.Text.Trim() \u002B \u0022,\u0022 \u002B vinte \u002B \u0022,,\u0022 \u002B vintedois \u002B \u0022,,\u0022 \u002B vintequatro \u002B \u0022,\u0022;\r\n\r\n            //string to int function\r\n            int number = Int32.Parse(richTextBox16.Text);\r\n            //identidade string to int function\r\n            int identidade = Int32.Parse(richTextBox4.Text);\r\n\r\n            //create new Usuario() object and assign values to its properties respectively\r\n            Usuario usuario = new Usuario(\r\n                number,\r\n                richTextBox2.Text,\r\n                richTextBox1.Text,\r\n                richTextBox3.Text,\r\n                identidade,\r\n                richTextBox8.Text,\r\n                comboBox1.Text,\r\n                richTextBox6.Text \u002B \u0022  At\u00E9  \u0022 \u002B richTextBox7.Text,\r\n                \u0022.\u0022 \u002B richTextBox7.Text,\r\n                input_data,\r\n                input_hora,\r\n                output_data,\r\n                output_hora,\r\n                richTextBox9.Text,\r\n                richTextBox10.Text,\r\n                richTextBox11.Text,\r\n                richTextBox12.Text,\r\n                richTextBox13.Text,\r\n                richTextBox14.Text,\r\n                vinte,\r\n                vinteum,\r\n                vintedois,\r\n                vintequatro,\r\n                comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now\r\n                );\r\n\r\n            add_data2(usuario);\r\n\r\n\r\n            // Verifica se o arquivo existe antes de tentar adicionar o conte\u00FAdo\r\n            if (File.Exists(filePath))\r\n            {\r\n                // Abre o arquivo em modo de anexa\u00E7\u00E3o (append)\r\n                using (StreamWriter writer = File.AppendText(filePath))\r\n                {\r\n                    // Escreve o conte\u00FAdo no arquivo\r\n                    writer.WriteLine(contentToAppend);\r\n                }\r\n\r\n                Console.WriteLine(\u0022Conte\u00FAdo adicionado com sucesso.\u0022);\r\n            }\r\n        }\r\n\r\n        private void CarregarPlanilha2()\r\n        {\r\n            try\r\n            {\r\n\r\n                okay = 1;\r\n                pasta = app.Workbooks.Open(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text);\r\n\r\n                plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n\r\n\r\n                txtCodigoFunci.Text = lastRow.ToString();\r\n                lastRow\u002B\u002B;\r\n\r\n                if (richTextBox16.Text == \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = number2;\r\n                }\r\n                if (richTextBox16.Text != \u0022\u0022)\r\n                {\r\n                    plan.Cells[lastRow, 1] = Int16.Parse(richTextBox16.Text.Trim());\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 2] = richTextBox2.Text;\r\n                plan.Cells[lastRow, 3] = richTextBox1.Text;\r\n                plan.Cells[lastRow, 4] = richTextBox3.Text;\r\n                plan.Cells[lastRow, 5] = richTextBox4.Text;\r\n                plan.Cells[lastRow, 6] = richTextBox8.Text;\r\n                plan.Cells[lastRow, 7] = comboBox1.Text;\r\n                plan.Cells[lastRow, 8] = richTextBox6.Text;\r\n                plan.Cells[lastRow, 9] = \u0022.\u0022 \u002B richTextBox7.Text;\r\n                plan.Cells[lastRow, 14] = richTextBox9.Text;\r\n\r\n\r\n                plan.Cells[lastRow, 15] = richTextBox10.Text.Trim();\r\n                plan.Cells[lastRow, 16] = richTextBox11.Text.Trim();\r\n                plan.Cells[lastRow, 17] = richTextBox12.Text.Trim();\r\n                plan.Cells[lastRow, 18] = richTextBox13.Text.Trim();\r\n                plan.Cells[lastRow, 19] = richTextBox14.Text.Trim();\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n\r\n\r\n                // plan.Cells[lastRow, 24] = comuser.Text;\r\n\r\n                localname = \u0022\u0022;\r\n\r\n\r\n\r\n\r\n                if (alter == true)\r\n                {\r\n                    plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 22] = \u0022CADASTRO ALTERADO\u0022;\r\n                }\r\n                if (alter == false)\r\n                {\r\n                    plan.Cells[lastRow, 22] = qr_generate \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 24] = comuser.Text;\r\n                }\r\n                if (cad == true)\r\n                {\r\n                    plan.Cells[lastRow, 24] = comuser.Text \u002B \u0022: \u0022 \u002B DateTime.Now;\r\n                    plan.Cells[lastRow, 22] = \u0022CADASTRADO\u0022;\r\n                    cad = false;\r\n                }\r\n\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (local1.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local1.Text;\r\n                }\r\n                if (local2.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local2.Text;\r\n                }\r\n                if (local3.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local3.Text;\r\n                }\r\n                if (local4.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B local4.Text;\r\n                }\r\n\r\n\r\n                plan.Cells[lastRow, 20] = localname;\r\n\r\n                localname = \u0022\u0022;\r\n                // localname = local1.Text \u002B \u0022 \u0022 \u002B local2.Text \u002B \u0022 \u0022 \u002B local3.Text \u002B \u0022 \u0022 \u002B local4.Text;\r\n                if (level_yellow.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_yellow.Text;\r\n\r\n                }\r\n                if (level_green.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_green.Text;\r\n                }\r\n                if (level_red.Checked == true)\r\n                {\r\n                    localname = localname \u002B \u0022 \u0022 \u002B level_red.Text;\r\n                }\r\n\r\n                plan.Cells[lastRow, 21] = localname;\r\n\r\n\r\n\r\n\r\n                pasta.Save();\r\n                pasta.Close();\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                Marshal.ReleaseComObject(pasta);\r\n                //  atualiza_compartilhamento();\r\n                // myThread.Abort();\r\n                //   checa_host();\r\n                //  MessageBox.Show(\u0022CarregarPlanilha - atualiza excel\u0022);\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            //CarregarPlanilha();\r\n\r\n        }\r\n        private static void CloseExcel(Excel.Application ExcelApplication = null)\r\n        {\r\n            if (ExcelApplication != null)\r\n            {\r\n                //ExcelApplication.Workbooks.Close();\r\n                // ExcelApplication.Quit();\r\n            }\r\n\r\n            System.Diagnostics.Process[] PROC = System.Diagnostics.Process.GetProcessesByName(\u0022EXCEL\u0022);\r\n            foreach (System.Diagnostics.Process PK in PROC)\r\n            {\r\n                //  if (PK.MainWindowTitle.Length == 0) { PK.Kill(); }\r\n            }\r\n\r\n\r\n            var valor = 1;\r\n            //  var array[] = 1;\r\n            int x = 2;\r\n            var processes = Process.GetProcessesByName(\u0022Excel\u0022);\r\n\r\n            foreach (var p in processes)\r\n            {\r\n\r\n\r\n                //  x\u002B\u002B;\r\n                if (x \u003E= 2)\r\n                {\r\n                    valor = p.Id;\r\n\r\n                    //MessageBox.Show(valor.ToString());\r\n                    Process processes2 = Process.GetProcessById(valor);\r\n                    processes2.Kill();\r\n                    x--;\r\n                }\r\n            }\r\n            x = 2;\r\n\r\n\r\n        }\r\n        private void excel_close()\r\n        {\r\n\r\n            int ourPID = 0;\r\n            int tmpX = 0;\r\n            int indexRow = 1;\r\n            int indexCol = 1;\r\n            int[] existingPIDs;\r\n            existingPIDs = new int[100];\r\n\r\n            Process[] localByName = Process.GetProcessesByName(\u0022excel\u0022);\r\n            // user didnt have any excels open, kill excel\r\n            if (tmpX == 0)\r\n            {\r\n                foreach (Process proc in localByName)\r\n                {\r\n                    proc.Kill();\r\n                }\r\n            }\r\n            // user does have excel(s) already open, only kill our apps excel\r\n            else if (tmpX \u003E 0 \u0026\u0026 ourPID != 0)\r\n            {\r\n                foreach (Process proc in localByName)\r\n                {\r\n                    if (proc.Id == ourPID)\r\n                    {\r\n                        proc.Kill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        private void GerarCabecalho()\r\n        {\r\n\r\n            pasta = app.Workbooks.Open(\u0022label17.Text\u0022);\r\n            plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            plan.Cells[1, 1].Text = \u0022NAME\u0022;\r\n            plan.Cells[1, 2].Text = \u0022COMPANY\u0022;\r\n            plan.Cells[1, 3].Text = \u0022FUNCTION\u0022;\r\n            plan.Cells[1, 4].Text = \u0022ID\u0022;\r\n            plan.Cells[1, 5].Text = \u0022EMAIL:\u0022;\r\n            plan.Cells[1, 6].text = \u0022VESSEL\u0022;\r\n            plan.Cells[1, 7].Text = \u0022INITIAL\u0022;\r\n            plan.Cells[1, 8].Text = \u0022FINAL\u0022;\r\n            plan.Cells[1, 9].Text = \u0022INPUT\u0022;\r\n            plan.Cells[1, 10].Text = \u0022OUTPU\u0022;\r\n            pasta.Save();\r\n            pasta.Close();\r\n            app.Quit();\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n            Marshal.ReleaseComObject(pasta);\r\n        }\r\n\r\n        int wi = 0;\r\n        // VideoCaptureDevice videoCaptureDevice;\r\n        private void button6_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        private void atualizar_file()\r\n        {\r\n\r\n            var file2 = new DirectoryInfo(@\u0022C:\\compartilhamento\\data_base\\\u0022).GetFiles().OrderBy(o =\u003E o.CreationTime).LastOrDefault();\r\n            label17.Text = file2.ToString();\r\n\r\n\r\n            //  if (label17.Text != label18.Text)\r\n            //  {\r\n            Microsoft.Office.Interop.Excel.Workbook xlWorkBook;\r\n            Microsoft.Office.Interop.Excel.Worksheet xlWorkSheet;\r\n            object misValue = System.Reflection.Missing.Value;\r\n\r\n            xlWorkBook = app.Workbooks.Add(misValue);\r\n            xlWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);\r\n\r\n            // xlWorkSheet = pasta.Worksheets[\u0022Planilha1\u0022];\r\n            xlWorkSheet.Cells[1, 1] = \u0022NUMBER\u0022;\r\n            xlWorkSheet.Cells[1, 2] = \u0022NAME\u0022;\r\n            xlWorkSheet.Cells[1, 3] = \u0022COMPANY\u0022;\r\n            xlWorkSheet.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n            xlWorkSheet.Cells[1, 5] = \u0022ID\u0022;\r\n            xlWorkSheet.Cells[1, 6] = \u0022EMAIL\u0022;\r\n            xlWorkSheet.Cells[1, 7] = \u0022VESSEL\u0022;\r\n            xlWorkSheet.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n            xlWorkSheet.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 10] = \u0022CHECK-IN  DATA\u0022;\r\n            xlWorkSheet.Cells[1, 11] = \u0022CHECK-IN  HORA\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 12] = \u0022CHECK-OUT DATA\u0022;\r\n            xlWorkSheet.Cells[1, 13] = \u0022CHECK-OUT HORA\u0022;\r\n\r\n            xlWorkSheet.Cells[1, 14] = \u0022PROJECT\u0022;\r\n            xlWorkSheet.Cells[1, 15] = \u0022ASO\u0022;\r\n            xlWorkSheet.Cells[1, 16] = \u0022NR-34\u0022;\r\n            xlWorkSheet.Cells[1, 17] = \u0022NR-10\u0022;\r\n            xlWorkSheet.Cells[1, 18] = \u0022NR-33\u0022;\r\n            xlWorkSheet.Cells[1, 19] = \u0022NR-35\u0022;\r\n            xlWorkSheet.Cells[1, 20] = \u0022LOCAL\u0022;\r\n            xlWorkSheet.Cells[1, 21] = \u0022LEVEL\u0022;\r\n            xlWorkSheet.Cells[1, 22] = \u0022ESTADO\u0022;\r\n            xlWorkSheet.Cells[1, 23] = \u0022MOTIVO\u0022;\r\n            xlWorkSheet.Cells[1, 24] = \u0022USUARIO\u0022;\r\n\r\n\r\n            // xlWorkSheet.Pictures.Add(1, 1, @\u0022E:\\work\\sample.jpg\u0022);\r\n            string mydate = DateTime.Today.ToString(\u0022yyyy/MM/dd\u0022);\r\n            label18.Text = mydate.Replace(\u0022/\u0022, \u0022_\u0022) \u002B \u0022.xls\u0022;\r\n\r\n            xlWorkBook.SaveAs(@\u0022C:\\compartilhamento\\data_base\\\u0022 \u002B label18.Text, Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);\r\n            xlWorkBook.Close(true, misValue, misValue);\r\n            app.Quit();\r\n\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n\r\n            MessageBox.Show(\u0022New date created\u0022);\r\n            System.Windows.Forms.Application.Restart();\r\n            //  }\r\n\r\n        }\r\n\r\n        private void inicialize_qrreader()\r\n        {\r\n            vid = 1;\r\n            richTextBox1.ReadOnly = true;\r\n            richTextBox2.ReadOnly = true;\r\n            richTextBox3.ReadOnly = true;\r\n            richTextBox4.ReadOnly = true;\r\n            //richTextBox5.ReadOnly = true;\r\n            richTextBox6.ReadOnly = true;\r\n            richTextBox7.ReadOnly = true;\r\n            richTextBox8.ReadOnly = true;\r\n            // button2.Enabled = false;\r\n\r\n            button1.Text = \u0022Read QRcode On\u0022;\r\n            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n            videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n            //   videoCaptureDevice.Start();\r\n            dateTimePicker1.Visible = false;\r\n            dateTimePicker2.Visible = false;\r\n\r\n\r\n\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n\r\n            richTextBox6.Visible = true;\r\n            richTextBox7.Visible = true;\r\n            if (timer4.Enabled == false)\r\n            {\r\n                // button2.Enabled = false;\r\n                timer4.Start();\r\n            }\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n        }\r\n\r\n        private static string GetFiles(string path)\r\n        {\r\n\r\n            var file = new DirectoryInfo(path).GetFiles().OrderByDescending(o =\u003E o.LastWriteTime).FirstOrDefault();\r\n            return file.Name;\r\n            // label18.Text =\r\n        }\r\n        private void ckecked_false()\r\n        {\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            // richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n            // richTextBox9.Text = \u0022\u0022;\r\n            richTextBox10.Text = \u0022\u0022;\r\n            richTextBox11.Text = \u0022\u0022;\r\n            richTextBox12.Text = \u0022\u0022;\r\n            richTextBox13.Text = \u0022\u0022;\r\n            richTextBox14.Text = \u0022\u0022;\r\n            richTextBox16.Text = \u0022\u0022;\r\n            button8.Visible = false;\r\n            button9.Visible = false;\r\n            button10.Visible = false;\r\n            maskedTextBox1.Text = \u0022 \u0022;\r\n            maskedTextBox2.Text = \u0022 \u0022;\r\n            maskedTextBox3.Text = \u0022 \u0022;\r\n            maskedTextBox4.Text = \u0022 \u0022;\r\n            maskedTextBox5.Text = \u0022 \u0022;\r\n            local1.Checked = false;\r\n            local2.Checked = false;\r\n            local3.Checked = false;\r\n            // local4.Checked = false;\r\n\r\n\r\n            //level_green.Checked = false;\r\n            // level_red.Checked = false;\r\n            //  level_yellow.Checked = false;\r\n\r\n        }\r\n        private void FinalFrame_NewFrame(object sender, NewFrameEventArgs eventArgs)\r\n        {\r\n            eventArgs.Frame.RotateFlip(RotateFlipType.RotateNoneFlipX);\r\n            pictureBox7.Image = (Bitmap)eventArgs.Frame.Clone();\r\n        }\r\n\r\n        int vid = 0;\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            if (comboBox1.Text != \u0022\u0022)\r\n            {\r\n\r\n                if (panel6.Visible == false)\r\n                {\r\n\r\n                    if (richTextBox3.Text != \u0022\u0022)\r\n                    {\r\n                        comboBox1.Items.Clear();\r\n                        StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                        string x = sr.ReadToEnd();\r\n                        string[] y = x.Split(\u0027\\n\u0027);\r\n                        foreach (string s in y)\r\n                        {\r\n                            comboBox1.Items.Add(s);\r\n                        }\r\n                        sr.Close();\r\n                    }\r\n                }\r\n\r\n                label54.Visible = false;\r\n                label44.Visible = false;\r\n                label45.Visible = false;\r\n                label46.Visible = false;\r\n                label47.Visible = false;\r\n                label48.Visible = false;\r\n                label49.Visible = false;\r\n                label50.Visible = false;\r\n\r\n\r\n                dataGridView1.Visible = false;\r\n                local1.Enabled = false;\r\n                local2.Enabled = false;\r\n                local4.Enabled = false;\r\n                plant = 0;\r\n\r\n                if (band == 0)\r\n                {\r\n                    button3.Text = Label_Show_data[0];\r\n                }\r\n                else\r\n                {\r\n                    button3.Text = Label_Show_data[1];\r\n                }\r\n\r\n                // button3.Text = \u0022Show DataBase\u0022;\r\n\r\n\r\n                button1.Enabled = true;\r\n\r\n\r\n                tempo = 0;\r\n                panel11.Visible = true;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                panel11.BackColor = Color.White;\r\n                label8.Visible = false;\r\n                maskedTextBox1.ReadOnly = true;\r\n                maskedTextBox2.ReadOnly = true;\r\n                maskedTextBox3.ReadOnly = true;\r\n                maskedTextBox4.ReadOnly = true;\r\n                maskedTextBox5.ReadOnly = true;\r\n                maskedTextBox1.Text = \u0022 \u0022;\r\n                maskedTextBox2.Text = \u0022 \u0022;\r\n                maskedTextBox3.Text = \u0022 \u0022;\r\n                maskedTextBox4.Text = \u0022 \u0022;\r\n                maskedTextBox5.Text = \u0022 \u0022;\r\n                vid = 1;\r\n\r\n\r\n                //  if (vid == 1)\r\n                // {\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                richTextBox1.ReadOnly = true;\r\n                richTextBox2.ReadOnly = true;\r\n                richTextBox3.ReadOnly = true;\r\n                richTextBox4.ReadOnly = true;\r\n                //richTextBox5.ReadOnly = true;\r\n                richTextBox6.ReadOnly = true;\r\n                richTextBox7.ReadOnly = true;\r\n                richTextBox8.ReadOnly = true;\r\n                //richTextBox9.ReadOnly = true;\r\n                richTextBox10.ReadOnly = true;\r\n                richTextBox11.ReadOnly = true;\r\n                richTextBox12.ReadOnly = true;\r\n                richTextBox13.ReadOnly = true;\r\n                richTextBox14.ReadOnly = true;\r\n                richTextBox16.ReadOnly = true;\r\n                // button2.Enabled = false;\r\n                if (band == 0)\r\n                {\r\n                    button1.Text = Label_Read_QRcode_On[0];\r\n                    label7.Text = button1.Text;\r\n                }\r\n                else\r\n                {\r\n                    button1.Text = Label_Read_QRcode_On[1];\r\n                    label7.Text = button1.Text;\r\n                }\r\n\r\n                panel10.Visible = false;\r\n\r\n                videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                //  pictureBox1.BackgroundImage = Properties.Resources.frame;\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                // richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox16.Text = \u0022\u0022;\r\n\r\n                richTextBox6.Visible = true;\r\n                richTextBox7.Visible = true;\r\n\r\n                ckecked_false();\r\n                //  if (timer4.Enabled == false)\r\n                //  {\r\n                //  button2.Enabled = false;\r\n                // timer4.Start();\r\n                //  }\r\n\r\n\r\n                //}\r\n\r\n                if (vid == 2)\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(_read);\r\n            }\r\n        }\r\n\r\n        private void ler_linha()\r\n        {\r\n            //   String locked = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n\r\n            //  timer8.Stop();\r\n\r\n            // textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n\r\n            try\r\n            {\r\n                if (textBox16.Text == \u0022\u0022) {\r\n\r\n                    if (comboBox2.Text.Trim() == \u0022ALL\u0022)\r\n                    {\r\n                        listBox1.Items.Clear();\r\n                        lista_ = 0;\r\n                        foreach (string linha22 in linhas22)\r\n                        {\r\n                            if (linha22.Contains(\u0022Vessel\u0022))\r\n                            {\r\n                                listBox1.Items.Add(linha22);\r\n                                lista_\u002B\u002B;\r\n                                label27.Text = lista_.ToString();\r\n                                label67.Text = lista_.ToString();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        if (lista_ == 0)\r\n                        {\r\n                            label27.Text = lista_.ToString();\r\n                            //label67.Text = label27.Text;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        listBox1.Items.Clear();\r\n                        lista_ = 0;\r\n                        foreach (string linha222 in linhas22)\r\n                        {\r\n\r\n                            if (linha222.Contains(comboBox2.Text.Trim()))\r\n                            {\r\n                                //  if (linha22.Contains(\u0022\\n\u0022))\r\n                                // {\r\n                                listBox1.Items.Add(linha222);\r\n                                lista_\u002B\u002B;\r\n                                label27.Text = lista_.ToString();\r\n                                label67.Text = lista_.ToString();\r\n                                // }\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        if (lista_ == 0)\r\n                        {\r\n                            label27.Text = lista_.ToString();\r\n                            label67.Text = lista_.ToString();\r\n                            //label67.Text = label27.Text;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n                string FileToRead = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n                TextReader Leitor = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);//Inicializa o Leitor\r\n                int Linhas = 0;\r\n\r\n                while (Leitor.Peek() != -1)\r\n                {//Enquanto o arquivo n\u00E3o acabar, o Peek n\u00E3o retorna -1 sendo adequando para o loop while...\r\n                    Linhas\u002B\u002B;//Incrementa 1 na contagem\r\n                    Leitor.ReadLine();//Avan\u00E7a uma linha no arquivo\r\n                }\r\n                Leitor.Close(); //Fecha o Leitor, dando acesso ao arquivo para outros programas....\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                string number = count.ToString().Trim();\r\n\r\n                //   MessageBox.Show(rich5);\r\n\r\n\r\n                //string criterio = comboBox1.Text.Trim();// id\r\n\r\n                // string[] linhas2 = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                //  foreach (string linha in linhas2)\r\n                //  {\r\n                // if (linha.Contains(criterio))\r\n                //  lbResultado.Items.Add(linha);\r\n                // label27.Text = Linhas.ToString();\r\n                //  }\r\n                label27.Text = Linhas.ToString();\r\n                //  label67.Text = label27.Text;\r\n\r\n                //  string number = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                label3.Text = number;\r\n                //  number2 = Int32.Parse(label3.Text);\r\n                // MessageBox.Show(\u0022linha ok\u0022);\r\n            }\r\n            catch\r\n            {\r\n                //   MessageBox.Show(\u0022n\u00E3o consegui acessar o caminho  \u0022 \u002B @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void wifi_level()\r\n        {\r\n            try\r\n            {\r\n                System.Diagnostics.Process p = new System.Diagnostics.Process();\r\n                ///  System.Diagnostics.h\r\n                p.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                p.StartInfo.CreateNoWindow = true;\r\n                p.StartInfo.FileName = \u0022netsh.exe\u0022;\r\n                p.StartInfo.Arguments = \u0022wlan show interfaces\u0022;\r\n                p.StartInfo.UseShellExecute = false;\r\n                p.StartInfo.RedirectStandardOutput = true;\r\n\r\n                p.Start();\r\n\r\n                string s = p.StandardOutput.ReadToEnd();\r\n                string s1 = s.Substring(s.IndexOf(\u0022Perfil\u0022));\r\n                s1 = s1.Substring(2, s1.IndexOf(\u0022:\u0022));\r\n                s1 = s1.Substring(2, s1.IndexOf(\u0022\\n\u0022)).Trim();\r\n\r\n                string s2 = s.Substring(s.IndexOf(\u0022Sinal\u0022));\r\n                s2 = s2.Substring(s2.IndexOf(\u0022:\u0022));\r\n                s2 = s2.Substring(2, s2.IndexOf(\u0022\\n\u0022)).Trim();\r\n                string s3 = s2.Replace(\u0022%\u0022, \u0022\u0022);\r\n\r\n                s4 = Int32.Parse(s3);\r\n                label20.Text = s3;\r\n\r\n                p.WaitForExit();\r\n\r\n                if (s4 \u003C= 10 || s4 == null)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level0_1;\r\n                }\r\n                if (s4 \u003C= 20)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level1_1;\r\n                }\r\n                if (s4 \u003C= 50)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level2_1;\r\n                }\r\n                if (s4 \u003E= 100)\r\n                {\r\n                    button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level31;\r\n                }\r\n            }\r\n            catch (ArgumentException ex)\r\n            {\r\n\r\n                button6.Image = global::criptoqrcode.Properties.Resources.wifi2_level0_1;\r\n            }\r\n\r\n        }\r\n        private void ler_linha_projeto()\r\n        {\r\n\r\n            // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n            string[] arquivo = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            // TextReader Leitor = new StreamReader(@\u0022C:\\data_txt\\ROJETO.txt\u0022, true);//Inicializa o Leitor\r\n\r\n\r\n            // comboBox1.Text = arquivo[0].ToString();\r\n            richTextBox9.Text = arquivo[1].ToString();\r\n            // Leitor.Close(); //Fecha o Leitor, dando acesso ao arquivo para outros programas....\r\n\r\n\r\n        }\r\n        private void ler_data_txt()\r\n        {\r\n            using (StreamReader sr = new StreamReader(\u0022data_time.txt\u0022))\r\n            {\r\n                string line;\r\n\r\n                while ((line = sr.ReadLine()) != null)\r\n                {\r\n                    z = line;\r\n                }\r\n            }\r\n        }\r\n        private void Form1_FormClosing(object sender, FormClosingEventArgs e)\r\n        {\r\n            client.Disconnect();\r\n        }\r\n        void client_MqttMsgPublishReceived(object sender, MqttMsgPublishEventArgs e)\r\n        {\r\n            string ReceivedMessage = Encoding.UTF8.GetString(e.Message);\r\n\r\n            // we need this construction because the receiving code in the library and the UI with textbox run on different threads\r\n            SetText(ReceivedMessage);\r\n\r\n        }\r\n        private void SetText(string text)\r\n        {\r\n            // we need this construction because the receiving code in the library and the UI with textbox run on different threads\r\n            if (this.RecText.InvokeRequired)\r\n            {\r\n                SetTextCallback d = new SetTextCallback(SetText);\r\n                this.Invoke(d, new object[] { text });\r\n            }\r\n            else\r\n            {\r\n                this.RecText.Text = text;\r\n            }\r\n        }\r\n        private void Form1_Load(object sender, EventArgs e)\r\n        {\r\n            checa_host_ = true;\r\n            if (!File.Exists(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                Create_DB();\r\n                if (hasDb == true)\r\n                {\r\n                    get_last();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                get_last();\r\n            }\r\n\r\n            ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n            startInfo2.RedirectStandardOutput = true;\r\n            startInfo2.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo2.CreateNoWindow = true;\r\n            startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo2);\r\n\r\n            //  client = new MqttClient(\u0022stellar-veterinary.cloudmqtt.com\u0022, 1883, false, null, null, MqttSslProtocols.TLSv1_2);\r\n\r\n            //  client.MqttMsgPublishReceived \u002B= client_MqttMsgPublishReceived;\r\n            //  clientId = Guid.NewGuid().ToString();\r\n            //  client.Connect(clientId, \u0022suport1\u0022, \u002212345\u0022);\r\n\r\n            //   client.Subscribe(new string[] { \u0022suport1\u0022 }, new byte[] { 0 });   // we need arrays as parameters because we can subscribe to different topics with one call\r\n            //   SetText(\u0022\u0022);\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n            IP_START.Text = x.Split(\u0027,\u0027)[0].Trim();\r\n            IP_STOP.Text = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            _ipstart = x.Split(\u0027,\u0027)[0].Trim();\r\n            _ipstop = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            //  MessageBox.Show(IP_START.Text);\r\n\r\n\r\n            label44.Visible = false;\r\n            label45.Visible = false;\r\n            label46.Visible = false;\r\n            label47.Visible = false;\r\n            label48.Visible = false;\r\n            label49.Visible = false;\r\n            label50.Visible = false;\r\n\r\n            passall = File.ReadAllText(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            //  rede = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n            // rede1 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(0);\r\n            // rede2 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(1);\r\n            // rede3 = File.ReadLines(@\u0022C:\\compartilhamento\\rede.txt\u0022).ElementAtOrDefault(2);\r\n            // rede = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n\r\n\r\n\r\n            fproj = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            FileIOPermission f2 = new FileIOPermission(FileIOPermissionAccess.AllAccess, \u0022C:\\\\compartilhamento\\\\\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n            int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n            string number = count.ToString().Trim();//System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n            label3.Text = number;\r\n            number2 = Int32.Parse(label3.Text);\r\n            //string constr = String.Format(@\u0022Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\u0022\u0022Excel 8.0;HDR=YES;IMEX=1;\u0022\u0022\u0022, \u0022C:\\\\data_base\\\\\u0022 \u002B label18.Text);\r\n            try\r\n            {\r\n                wifi_level();\r\n\r\n\r\n                textBox6.Select();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            ler_linha_projeto();\r\n            ler_linha();\r\n            ler_data_txt();\r\n            filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);\r\n            foreach (FilterInfo Device in filterInfoCollection)\r\n                cboCamera.Items.Add(Device.Name);\r\n            cboCamera.SelectedIndex = 0;\r\n            videoCaptureDevice = new VideoCaptureDevice();\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n            lcompany.Text = nome;\r\n            lname.Text = emp;\r\n            lfunc.Text = function;\r\n            lid.Text = id;\r\n            lvessel.Text = vessel;\r\n            lcheckin.Text = Label_initial[1];\r\n            lcheckout.Text = Label_final[1];\r\n            // button7.Visible = false;\r\n\r\n            dateTimePicker1.Visible = true;\r\n            dateTimePicker2.Visible = true;\r\n            // textBox2.Text = dateTimePicker1.Value.ToString();\r\n            richTextBox6.Visible = false;\r\n            richTextBox7.Visible = false;\r\n            filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);\r\n            foreach (FilterInfo Device in filterInfoCollection)\r\n                cboCamera.Items.Add(Device.Name);\r\n            cboCamera.SelectedIndex = 0;\r\n            videoCaptureDevice = new VideoCaptureDevice();\r\n\r\n\r\n\r\n            label18.Text = GetFiles(@\u0022C:\\compartilhamento\\data_base\u0022);\r\n\r\n            inicialize_qrreader();\r\n\r\n            lname.Text = label_nome[0];\r\n            lcompany.Text = label_emp[0];\r\n            lfunc.Text = label_Function[0];\r\n            lid.Text = label_Id[0];\r\n            lvessel.Text = label_vessel[0];\r\n            lproject.Text = label_porj[0];\r\n            lv1.Text = label_vaccine1[0];\r\n            lv2.Text = label_vaccine2[0];\r\n            lbustter.Text = label_reforco[0];\r\n            local1.Text = place1[0];\r\n            local2.Text = place2[0];\r\n            local3.Text = place3[0];\r\n            local4.Text = place4[0];\r\n            laccess.Text = label_acc[0];\r\n            level_yellow.Text = label_yellow[0];\r\n            level_green.Text = label_green[0];\r\n            level_red.Text = label_red[0];\r\n            lcheckin.Text = Label_initial[0];\r\n            lcheckout.Text = Label_final[0];\r\n            button1.Text = Label_Read_QRcode_On[0];\r\n            button28.Text = Label_Read_QRcode_Off[0];\r\n            button2.Text = Label_Create_QRcode[0];\r\n            button3.Text = Label_Show_data[0];\r\n            button4.Text = Label_Save_data[0];\r\n            // button5.Text = Label_Config[0];\r\n            button6.Text = Label_wifi[0];\r\n            button17.Text = Label_email[0];\r\n            button19.Text = Label_Mostrar_checkin[0];\r\n            button21.Text = Label_reset[0];\r\n            button22.Text = Label_fechar[0];\r\n            button8.Text = Label_entrada[0];\r\n            button9.Text = Label_saida[0];\r\n            button10.Text = Label_cancel[0];\r\n            label23.Text = label_onboard[0];\r\n            button27.Text = Label_reset_project[0];\r\n            button29.Text = label_reg[0];\r\n            label7.Text = button1.Text;\r\n            label6.Text = onboard[0];\r\n            label_cad.Text = label_cad1[0];\r\n\r\n            label53.Text = Label_53[0];\r\n            button41.Text = bt_41[0];\r\n            button42.Text = bt_42[0];\r\n            button43.Text = bt_43[0];\r\n            button44.Text = bt_44[0];\r\n            button45.Text = bt_45[0];\r\n            regs.Text = bt_regis[0];\r\n            _cad = cad_mode[0];\r\n            _read = read_mode[0];\r\n\r\n            /*\r\n             Label_reset\r\n                        String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                        String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                        String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                        String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                        String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                        String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n            */\r\n            panel11.Size = new Size(460, 455);\r\n            //  panel11.Location = new System.Drawing.Point(95, 150);\r\n            pictureBox7.Size = new Size(430, 420);\r\n            pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n            ip = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\IP.txt\u0022);\r\n            ip1 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(0);\r\n            ip2 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(1);\r\n            ip3 = File.ReadLines(@\u0022C:\\compartilhamento\\IP.txt\u0022).ElementAtOrDefault(2);\r\n\r\n            textBox7.Focus();\r\n            textBox7.Text = \u0022\u0022;\r\n\r\n            GetBiosInformation();\r\n            // CloseExcel();\r\n            // myThread.Abort();\r\n            //  checa_host();\r\n            // atualiza_compartilhamento();\r\n            comp = 1;\r\n\r\n\r\n            try\r\n            {\r\n                // open file dialog\r\n                OpenFileDialog open = new OpenFileDialog();\r\n                // image filters\r\n                //  open.Filter = \u0022Image Files(*.jpg; *.jpeg; *.gif; *.bmp)|*.jpg; *.jpeg; *.gif; *.bmp\u0022;\r\n                String foto = @\u0022C:\\compartilhamento\\logo_criptoqrcode\\logo.png\u0022;\r\n                //  if (open.ShowDialog() == DialogResult.OK)\r\n                // {\r\n                // display image in picture box\r\n                pictureBox2.Image = new Bitmap(foto);\r\n                // image file path\r\n                // textBox1.Text = open.FileName;\r\n                // }\r\n                StreamReader sr2 = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                string x2 = sr2.ReadToEnd();\r\n                string[] y = x2.Split(\u0027\\n\u0027);\r\n                foreach (string s in y)\r\n                {\r\n                    comboBox1.Items.Add(s);\r\n                    comboBox2.Items.Add(s);\r\n                }\r\n                sr.Close();\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022O arquivo com a logo deve estar no formato PNG. Corriga o formato e inicie o programa novamente\u0022);\r\n                // throw new ApplicationException(\u0022Image loading error....\u0022);\r\n            }\r\n\r\n\r\n            int milliseconds = 5000;\r\n            Thread.Sleep(milliseconds);\r\n\r\n            MyhostName = System.Net.Dns.GetHostName();\r\n            string hostName = System.Net.Dns.GetHostName();\r\n            string myIP = Dns.GetHostByName(hostName).AddressList[0].ToString();\r\n            label66.Text = \u0022IP: \u0022 \u002B myIP;\r\n            timer10.Enabled = true;\r\n        }\r\n\r\n\r\n        Thread myThread = null;\r\n        int plant = 0;\r\n\r\n\r\n        public void checa_host()\r\n        {\r\n            if (checa_host_ == true)\r\n            {\r\n                // MessageBox.Show(\u0022ok\u0022);\r\n\r\n                if (IP_START.Text == string.Empty)\r\n                {\r\n                    //MessageBox.Show(\u0022No IP address entered.\u0022, \u0022Error\u0022, MessageBoxButtons.OK, MessageBoxIcon.Error);\r\n                    // lblStatus.ForeColor = System.Drawing.Color.Red;\r\n                    // lblStatus.Text = \u0022No IP address entered.\u0022;\r\n                }\r\n                else\r\n                {\r\n\r\n                    //Create new thread for pinging\r\n                    //myThread = new Thread(() =\u003E scan(txtIP.Text));\r\n                    myThread = new Thread(() =\u003E scan2(IP_START.Text, IP_STOP.Text));\r\n                    myThread.Start();\r\n\r\n                    if (myThread.IsAlive == true)\r\n                    {\r\n                        // cmdStop.Enabled = true;\r\n                        //  cmdScan.Enabled = false;\r\n                        // txtIP.Enabled = false;\r\n                        // txtIP2.Enabled = false;\r\n                        //  MessageBox.Show(\u0022checa_host ok\u0022);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        static void SetDoubleBuffer(System.Windows.Forms.Control dgv, bool DoubleBuffered)\r\n        {\r\n            typeof(System.Windows.Forms.Control).InvokeMember(\u0022DoubleBuffered\u0022,\r\n                BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.SetProperty,\r\n                null, null, new object[] { DoubleBuffered });\r\n        }\r\n        private async void button3_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            try\r\n            {\r\n                String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n\r\n\r\n\r\n                /// criar_excel();\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                plant\u002B\u002B;\r\n                if (plant == 1)\r\n                {\r\n                    //  criar_excel();\r\n                    //if (libera == true)\r\n                    // {\r\n                    button34.Visible = true;\r\n                    // }\r\n                    // else\r\n                    // {\r\n                    //  button34.Visible = false;\r\n                    // }\r\n\r\n                    if (band == 0)\r\n                    {\r\n                        button3.Text = Label_close_data[0];\r\n                    }\r\n                    else\r\n                    {\r\n                        button3.Text = Label_close_data[1];\r\n                    }\r\n                    //  button3.Text = \u0022Close DataBase\u0022;\r\n                    //  button1.Enabled = false;\r\n                    //button2.Enabled = false;\r\n                    /*\r\n                    String name = \u0022Planilha1\u0022;\r\n\r\n\r\n\r\n                    string constr = String.Format(@\u0022Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\u0022\u0022Excel 8.0;HDR=YES;IMEX=1;\u0022\u0022\u0022, \u0022C:\\\\compartilhamento\\\\data_base\\\\\u0022 \u002B label18.Text);\r\n\r\n                    OleDbConnection con = new OleDbConnection(constr);\r\n                    OleDbCommand oconn = new OleDbCommand(\u0022Select * From [\u0022 \u002B name \u002B \u0022$]\u0022, con);\r\n                    con.Open();\r\n\r\n                    OleDbDataAdapter sda = new OleDbDataAdapter(oconn);\r\n                    System.Data.DataTable data = new System.Data.DataTable();\r\n                    sda.Fill(data);\r\n                    con.Close();\r\n\r\n                    */\r\n\r\n                    //  dataGridView1.FilterAndSortEnabled = true;\r\n                    // bindingSource1.DataSource = data;\r\n                    panel5.Visible = false;\r\n                    DisplayPresetData();\r\n\r\n                }\r\n                else\r\n                {\r\n                    dataGridView1.Visible = false;\r\n                    dataGridView1.Visible = false;\r\n                    button34.Visible = false;\r\n                    panel5.Visible = true;\r\n\r\n                    plant = 0;\r\n\r\n                    if (band == 0)\r\n                    {\r\n                        button3.Text = Label_Show_data[0];\r\n                    }\r\n                    else\r\n                    {\r\n                        button3.Text = Label_Show_data[1];\r\n                    }\r\n\r\n\r\n\r\n\r\n                    button1.Enabled = true;\r\n\r\n\r\n                    dataGridView1.DataSource = null;\r\n                    dataGridView1.CleanFilter();\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                MessageBox.Show(\u0022data base corrompida ou n\u00E3o encontrada. feche a planilha se estiver aberta e inicie o programa novamente!\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void acha_palavra_txt()\r\n        {\r\n            if (l == 0)\r\n            {\r\n\r\n                lbResultado.Items.Clear();\r\n                Refresh();\r\n\r\n                string criterio = richTextBox4.Text;// id\r\n\r\n                string[] linhas = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                foreach (string linha in linhas)\r\n                {\r\n                    if (linha.Contains(criterio))\r\n                        lbResultado.Items.Add(linha);\r\n                }\r\n\r\n\r\n\r\n                if (lbResultado.Items.Count == 1)\r\n                {\r\n                    button8.Enabled = false;\r\n                    button9.Enabled = true;\r\n\r\n                }\r\n                if (lbResultado.Items.Count == 0)\r\n                {\r\n                    button8.Enabled = true;\r\n                    button9.Enabled = false;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        private void timer1_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            BarcodeReader Reader = new BarcodeReader();\r\n            Result result = Reader.Decode((Bitmap)pictureBox1.Image);\r\n            if (result != null)\r\n            {\r\n\r\n                try\r\n                {\r\n\r\n\r\n                    // timer2.Enabled = false;\r\n\r\n\r\n\r\n\r\n\r\n                    txtResult.Text = result.ToString();\r\n\r\n                    if (txtResult.Text.Length \u003E 10)\r\n                    {\r\n\r\n\r\n                        string text1 = txtResult.Lines[0];\r\n                        string mystring = text1.Remove(0, 6);\r\n                        richTextBox1.Text = mystring;\r\n\r\n                        string text2 = txtResult.Lines[1];\r\n                        mystring = text2.Remove(0, 9);\r\n                        richTextBox2.Text = mystring;\r\n\r\n                        string text3 = txtResult.Lines[2];\r\n                        mystring = text3.Remove(0, 10);\r\n                        richTextBox3.Text = mystring;\r\n\r\n                        string text4 = txtResult.Lines[3];\r\n                        mystring = text4.Remove(0, 4);\r\n                        richTextBox4.Text = mystring;\r\n\r\n                        string text5 = txtResult.Lines[4];\r\n                        mystring = text5.Remove(0, 8);\r\n                        comboBox1.Text = mystring;\r\n\r\n                        string text8 = txtResult.Lines[5];\r\n                        mystring = text8.Remove(0, 1);\r\n                        richTextBox8.Text = mystring;\r\n\r\n                        string text6 = txtResult.Lines[6];\r\n                        mystring = text6.Remove(0, 9);\r\n                        richTextBox6.Text = mystring;\r\n\r\n                        string text7 = txtResult.Lines[7];\r\n                        mystring = text7.Remove(0, 7);\r\n                        richTextBox7.Text = mystring;\r\n\r\n                        videoCaptureDevice.Stop();\r\n                        //  pictureBox1.BackgroundImage= Image.\r\n                        pictureBox7.BackgroundImage = Properties.Resources.barcode1;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        compare_data();\r\n\r\n                        acha_palavra_txt();\r\n\r\n                        timer1.Stop();\r\n\r\n\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n        }\r\n        int input_ok = 0;\r\n        private void zera()\r\n        {\r\n            if (input_ok == 0)\r\n            {\r\n                videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                videoCaptureDevice.Start();\r\n                timer1.Start();\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                button8.Visible = false;\r\n                button9.Visible = false;\r\n                button10.Visible = false;\r\n            }\r\n        }\r\n        private void cancelar()\r\n        {\r\n            // panel11.Visible = false;\r\n            // panel4.Visible = true;\r\n\r\n            /// maskedTextBox1.Text = \u0022 \u0022;\r\n            /// maskedTextBox2.Text = \u0022 \u0022;\r\n            ///maskedTextBox3.Text = \u0022 \u0022;\r\n            ///maskedTextBox4.Text = \u0022 \u0022;\r\n            ///maskedTextBox5.Text = \u0022 \u0022;\r\n\r\n            panel11.Visible = true;\r\n            pictureBox7.Image = Properties.Resources.barcode1;\r\n            panel11.BackColor = Color.White;\r\n            label8.Visible = false;\r\n            //pictureBox1.Image = Properties.Resources.frame;\r\n            input_ok = 0;\r\n\r\n            //  pictureBox1.Image = null;\r\n            /// pictureBox1.Image = Modern_Qr_code.Properties.Resources.\r\n\r\n            // panel4.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(51)))), ((int)(((byte)(51)))), ((int)(((byte)(76)))));\r\n            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n            //videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n            //videoCaptureDevice.Start();\r\n            // timer1.Start();\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n            richTextBox1.Text = \u0022\u0022;\r\n            richTextBox2.Text = \u0022\u0022;\r\n            richTextBox3.Text = \u0022\u0022;\r\n            richTextBox4.Text = \u0022\u0022;\r\n            //richTextBox5.Text = \u0022\u0022;\r\n            richTextBox6.Text = \u0022\u0022;\r\n            richTextBox7.Text = \u0022\u0022;\r\n            richTextBox8.Text = \u0022\u0022;\r\n\r\n            // richTextBox9.Text = \u0022\u0022;\r\n            richTextBox10.Text = \u0022\u0022;\r\n            richTextBox11.Text = \u0022\u0022;\r\n            richTextBox12.Text = \u0022\u0022;\r\n            richTextBox13.Text = \u0022\u0022;\r\n            richTextBox14.Text = \u0022\u0022;\r\n            richTextBox16.Text = \u0022\u0022;\r\n            button8.Visible = false;\r\n            button9.Visible = false;\r\n            button10.Visible = false;\r\n            pictureBox1.Image = criptoqrcode.Properties.Resources.barcode1;\r\n        }\r\n        private void timer2_Tick(object sender, EventArgs e)\r\n        {\r\n            cancelar();\r\n            ckecked_false();\r\n            timer2.Stop();\r\n        }\r\n        int lista_ = 0;\r\n        private void mostra_conteudo_txt()\r\n        {\r\n            listBox1.Items.Clear();\r\n            lista_ = 0;\r\n\r\n            if (checkBox1.Checked == true)\r\n            {\r\n                panel6.Size = new Size(1695, 996); //1695; 996\r\n                panel6.Visible = true;\r\n                string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox1.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                        //  label67.Text = label27.Text;\r\n\r\n\r\n                    }\r\n                }\r\n                //  ler_linha();\r\n            }\r\n            else\r\n            {\r\n\r\n                if (new FileInfo(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Length \u003E= 0)\r\n                {\r\n\r\n                    panel6.Size = new Size(1695, 996);\r\n                    panel6.Visible = true;\r\n                    string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n                    foreach (string s in Regex.Split(text, \u0022\\n\u0022))\r\n                    {\r\n\r\n                        listBox1.Items.Add(s);\r\n\r\n\r\n\r\n                    }\r\n\r\n                    //  ler_linha();\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        private void beep()\r\n        {\r\n\r\n            int frequency = 800;\r\n\r\n            // Set the Duration\r\n            int duration = 250;\r\n\r\n            // Play beep sound once\r\n            Console.Beep(frequency, duration);\r\n        }\r\n        private void timer3_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            try\r\n            {\r\n                string caminhoArquivo = @\u0022C:\\compartilhamento\\data_txt\\data4.txt\u0022;\r\n                string primeiraLinha = File.ReadLines(caminhoArquivo).First().Trim();\r\n                if (primeiraLinha == \u00221\u0022)\r\n                {\r\n                    //  panel12.BackColor = Color.GreenYellow;\r\n\r\n\r\n                    //ler_linha();\r\n                    Console.WriteLine($\u0022A primeira linha do arquivo \u00E9: {primeiraLinha}\u0022);\r\n\r\n                    using (StreamWriter sw = new StreamWriter(caminhoArquivo))\r\n                    {\r\n                        sw.WriteLine(\u00220\u0022); // Escreve o n\u00FAmero 1 na primeira linha do arquivo\r\n                    }\r\n                }\r\n            }\r\n\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n\r\n\r\n            if (online == true)\r\n            {\r\n                wifi_level();\r\n            }\r\n\r\n            string datetime = DateTime.Now.ToString();\r\n            label19.Text = DateTime.Now.ToString();\r\n            label62.Text = DateTime.Now.ToString();\r\n            DateTime now = DateTime.Now;\r\n            int h = now.Hour;\r\n            int m = now.Minute;\r\n            int s = now.Second;\r\n\r\n            label22.Text = h \u002B \u0022:\u0022 \u002B m \u002B \u0022:\u0022 \u002B s.ToString().Trim();\r\n            //label22.Text = \u002211:27:00\u0022;\r\n\r\n            if (label22.Text == z)\r\n            {\r\n                //\r\n                //\r\n                //\r\n                //\r\n                // ();\r\n                //listBox1.Text = varPalavra;\r\n                mostra_conteudo_txt();\r\n                beep();\r\n                beep();\r\n                beep();\r\n                beep();\r\n                beep();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        private void escrever_palavra()\r\n\r\n        {\r\n            string nomeArquivo = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n\r\n\r\n            // Name: Henrique Kaique Costa Compay: Local 9  E - Mail: cristiano.engenharia.ac @gmail.com ID: 111099444\r\n            string textoInserir = \u0022Number: \u0022 \u002B richTextBox16.Text \u002B \u0022:  Name: \u0022 \u002B richTextBox2.Text \u002B \u0022:  Vessel: \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022:  Compay: \u0022 \u002B richTextBox1.Text \u002B \u0022  Id: \u0022 \u002B richTextBox4.Text \u002B \u0022  :E-Mail: \u0022 \u002B richTextBox8.Text \u002B \u0022 :  \u0022 \u002B DateTime.Now;//\r\n            int numeroLinha = Convert.ToInt32(Linhas);\r\n            ArrayList linhas = new ArrayList();\r\n\r\n            if (File.Exists(nomeArquivo))\r\n            {\r\n                try\r\n                {\r\n                    rdr = new StreamReader(nomeArquivo);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022O arquivo : \u0022 \u002B nomeArquivo \u002B \u0022 n\u00E3o existe...\u0022);\r\n                return;\r\n            }\r\n\r\n            string linha;\r\n\r\n            while ((linha = rdr.ReadLine()) != null)\r\n            {\r\n                try\r\n                {\r\n                    linhas.Add(linha);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            rdr.Close();\r\n\r\n            if (linhas.Count \u003E numeroLinha)\r\n                linhas.Insert(numeroLinha, textoInserir);\r\n            else\r\n                linhas.Add(textoInserir);\r\n\r\n            StreamWriter wrtr = new StreamWriter(nomeArquivo);\r\n\r\n            foreach (string strNewLine in linhas)\r\n            {\r\n                wrtr.WriteLine(strNewLine);\r\n            }\r\n            wrtr.Close();\r\n            textoInserir = \u0022\u0022;\r\n            // txtArquivo.Text = AbreArquivoTexto(nomeArquivo);\r\n\r\n        }\r\n\r\n        string ll;\r\n        private void apaga_palavra_txt()\r\n        {\r\n            if (l == 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n                string tempFile = Path.GetTempFileName();\r\n\r\n                using (var sr = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022))\r\n                {\r\n                    using (var sw = new StreamWriter(tempFile))\r\n                    {\r\n                        string line;\r\n\r\n                        while ((line = sr.ReadLine()) != null)\r\n                        {\r\n\r\n                            //Name: Rodrigo  Compay: Googlemarine  Id: 111222333\r\n\r\n                            ll = RemoveEnd(line, 23);\r\n                            //  MessageBox.Show(ll);\r\n\r\n                            // Number: 10  Name: Cristiano de Araujo Calheiros  Compay: Googlemarine Id: 111098414  :E - Mail: cristiano.engenharia.ac @gmail.com\r\n                            if (ll != \u0022Number: \u0022 \u002B richTextBox16.Text \u002B \u0022:  Name: \u0022 \u002B richTextBox2.Text \u002B \u0022:  Vessel: \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022:  Compay: \u0022 \u002B richTextBox1.Text \u002B \u0022  Id: \u0022 \u002B richTextBox4.Text \u002B \u0022  :E-Mail: \u0022 \u002B richTextBox8.Text)\r\n                                sw.WriteLine(line);\r\n                        }\r\n                    }\r\n                }\r\n                File.Copy(tempFile, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);\r\n\r\n                // File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                // File.Move(tempFile, @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n        }\r\n\r\n        private void in_out_alt()\r\n        {\r\n            checa_host_ = false;\r\n            timer9.Enabled = false;\r\n            lbResultado.Items.Clear();\r\n            Refresh();\r\n            string criterio = richTextBox4.Text;// id\r\n            string[] linhas = File.ReadAllLines(@\u0022c:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n            foreach (string linha in linhas)\r\n            {\r\n                if (linha.Contains(criterio))\r\n                    lbResultado.Items.Add(linha);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            if (lbResultado.Items.Count == 1)\r\n            {\r\n\r\n                // MessageBox.Show(\u0022existe\u0022);\r\n                try\r\n                {\r\n\r\n                    comp = 0;\r\n                    //   ler_linha();\r\n                    // \r\n                    //timer8.Stop();\r\n                    pictureBox7.Image = Properties.Resources.barcode1;\r\n                    panel11.BackColor = Color.White;\r\n                    label8.Visible = false;\r\n\r\n\r\n\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                    listBox1.Items.Clear();\r\n                    input_ok = 0;\r\n                    output_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                    output_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n                    input_data = \u0022*\u0022;\r\n                    input_hora = \u0022*\u0022;\r\n                    apaga_palavra_txt();\r\n\r\n                    panel4.BackColor = Color.White;\r\n                    videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                    videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                    // videoCaptureDevice.Start();\r\n                    // timer1.Start();\r\n                    pictureBox7.Image = Properties.Resources.barcode1;\r\n                    //  CarregarPlanilha();\r\n                    //   carrega_planilha_txt();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = false;\r\n                    //  checa_host();\r\n                    // atualiza_compartilhamento();\r\n                    // ler_linha();\r\n                    // ckecked_false();\r\n                    carrega_planilha2_txt();\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(ex.Message);\r\n                }\r\n                comp = 1;\r\n            }\r\n            if (lbResultado.Items.Count == 0)\r\n            {\r\n                // MessageBox.Show(\u0022n\u00E3o existe\u0022);\r\n                try\r\n                {\r\n                    if (checado == 1)\r\n                    {\r\n                        comp = 0;\r\n                        // ler_linha();\r\n                        // ckecked_false();\r\n                        // timer8.Stop();\r\n\r\n                        pictureBox7.Image = Properties.Resources.barcode1;\r\n                        panel11.BackColor = Color.White;\r\n                        label8.Visible = false;\r\n\r\n\r\n\r\n\r\n                        if (textBox7.SelectionLength \u003E= 0)\r\n                        {\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022\u0022;\r\n                        }\r\n\r\n                        input_data = DateTime.Now.ToString(\u0022MM/dd/yyyy\u0022).Trim();\r\n                        pictureBox7.Image = Properties.Resources.barcode1;\r\n                        input_ok = 0;\r\n\r\n                        input_hora = DateTime.Now.ToString(\u0022HH:mm:ss tt\u0022).Trim();\r\n                        output_data = \u0022*\u0022;\r\n                        output_hora = \u0022*\u0022;\r\n                        panel4.BackColor = Color.White;\r\n                        videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[cboCamera.SelectedIndex].MonikerString);\r\n                        videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n\r\n                        acha_palavra_txt();\r\n                        escrever_palavra();\r\n\r\n\r\n\r\n\r\n                        button8.Visible = false;\r\n                        button9.Visible = false;\r\n                        button10.Visible = false;\r\n\r\n                        ler_linha();\r\n                        //  ckecked_false();\r\n                        // CarregarPlanilha();\r\n                        carrega_planilha2_txt();\r\n                        // checa_host();\r\n                        //atualiza_compartilhamento();\r\n                        comp = 1;\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022PLease check local or level\u0022);\r\n                    }\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(ex.Message);\r\n                }\r\n\r\n                checa_host_ = true;\r\n            }\r\n\r\n            /////////////////////////////////////////// in/////////////////////////////////////////\r\n\r\n            ///////////////////////////////////////////////////////\r\n            ///\r\n            /// \r\n            /// \r\n            /////////////////////////////out///////////////////////\r\n\r\n            ////////////////////////////////////////////////////////////////\r\n            timer9.Enabled = true;\r\n        }\r\n        private void compare_data()\r\n        {\r\n\r\n            if (id_onboard2 == true)\r\n            {\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n                var parameterDate_ASo = DateTime.ParseExact(richTextBox10.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var parameterDate_initial = DateTime.ParseExact(richTextBox6.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var parameterDate_final = DateTime.ParseExact(richTextBox7.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var todaysDate = DateTime.Today;\r\n\r\n\r\n\r\n                if (rich5 != comboBox1.Text.Trim() || rich9 != richTextBox9.Text.Trim())\r\n                {\r\n                    //  richTextBox5.Text = text10[7].Remove(0, 8);\r\n                    //  richTextBox9.Text = text10[8].Remove(0, 0);\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    // label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Embarca\u00E7\u00E3o \u0022 \u002B rich5 \u002B \u0022 ou Projeto divergente\u0022;\r\n                    try\r\n                    {\r\n\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n\r\n\r\n\r\n\r\n                    timer2.Start();\r\n                    //  DateTime now = DateTime.Now;\r\n                    //  while (DateTime.Now.Subtract(now).Seconds \u003C 3)\r\n                    // {\r\n                    // wait for 60 seconds.\r\n                    //  }\r\n                    // cancelar_teste();\r\n                    //  Thread.Sleep(3000);\r\n                }\r\n\r\n\r\n\r\n                if (company_loc == true)\r\n                {\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022BLOQUEADO: CART\u00C3O INUTILIZADO !\u0022;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n\r\n\r\n                    timer2.Start();\r\n                }\r\n\r\n                if (bb == \u0022Bloqueado\u0022)\r\n                {\r\n                    // pictureBox7.Image \r\n                    //pictureBox7.Image \r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    //label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    button7.Visible = false;\r\n                    btloc.Visible = true;\r\n                    label8.Text = \u0022BLOQUEADO : \u0022 \u002B label37.Text;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n                    DateTime now = DateTime.Now;\r\n                    while (DateTime.Now.Subtract(now).Seconds \u003C 5)\r\n                    {\r\n                        // wait for 60 seconds.\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n                if (parameterDate_initial \u003E parameterDate_ASo)\r\n                {\r\n\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n                    //label8.ForeColor = Color.Red;\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Aso vencido\u0022;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                if ((parameterDate_initial \u003C todaysDate) \u0026\u0026 (parameterDate_final \u003C todaysDate))\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n                if ((parameterDate_initial \u003E todaysDate) \u0026\u0026 (parameterDate_final \u003E todaysDate))\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n                if (parameterDate_initial \u003E parameterDate_final)\r\n                {\r\n\r\n                    label8.Visible = true;\r\n                    label8.Text = \u0022Data limite expirou\u0022;\r\n                    panel11.BackColor = Color.Red;\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n\r\n                    button8.Visible = false;\r\n                    button9.Visible = false;\r\n                    button10.Visible = true;\r\n                    input_ok = 0;\r\n\r\n                    try\r\n                    {\r\n                        pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                    }\r\n                    catch\r\n                    {\r\n                        pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                    }\r\n                    timer2.Start();\r\n                }\r\n\r\n\r\n                if (parameterDate_final == todaysDate \u0026\u0026 parameterDate_initial \u003C parameterDate_ASo)\r\n                {\r\n\r\n\r\n\r\n\r\n\r\n                    if (rich5 == comboBox1.Text.Trim() \u0026\u0026 rich9 == richTextBox9.Text.Trim() \u0026\u0026 company_loc == false \u0026\u0026 bb != \u0022Bloqueado\u0022)\r\n                    {\r\n\r\n                        entrou = true;\r\n                        label8.Visible = true;\r\n                        label8.Text = \u0022Liberado\u0022;\r\n                        input_ok = 1;\r\n                        panel11.BackColor = Color.GreenYellow;\r\n                        beep();\r\n\r\n                        // bool lido = true;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n                        button7.Visible = true;\r\n                        btloc.Visible = false;\r\n                        try\r\n                        {\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                            button7.Visible = true;\r\n\r\n                        }\r\n                        catch\r\n                        {\r\n                            button7.Visible = true;\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n\r\n                        }\r\n                        if (panel11.BackColor == Color.GreenYellow)\r\n                        {\r\n                            // MessageBox.Show(\u00221\u0022);\r\n                            in_out_alt();\r\n                            //panel11.BackColor =Color.White;\r\n                        }\r\n\r\n                        rich9 = \u0022\u0022;\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if ((parameterDate_final \u003E todaysDate) \u0026\u0026 (parameterDate_initial \u003C= todaysDate) \u0026\u0026 (parameterDate_initial \u003C parameterDate_ASo))\r\n                {\r\n\r\n                    if ((rich5 == comboBox1.Text.Trim()) \u0026\u0026 (rich9 == richTextBox9.Text.Trim()) \u0026\u0026 company_loc == false \u0026\u0026 bb != \u0022Bloqueado\u0022)\r\n                    {\r\n\r\n                        entrou = true;\r\n                        label8.Visible = true;\r\n                        label8.Text = \u0022Liberado\u0022;\r\n                        input_ok = 1;\r\n                        panel11.BackColor = Color.GreenYellow;\r\n                        beep();\r\n                        //  bool lido = true;\r\n                        button8.Visible = true;\r\n                        button9.Visible = true;\r\n                        button10.Visible = true;\r\n                        button7.Visible = true;\r\n                        btloc.Visible = false;\r\n                        input_ok = 1;\r\n                        try\r\n                        {\r\n                            pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n                            button7.Visible = true;\r\n                        }\r\n                        catch\r\n                        {\r\n                            pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                            button7.Visible = true;\r\n                        }\r\n                        if (panel11.BackColor == Color.GreenYellow)\r\n                        {\r\n                            //  MessageBox.Show(\u00222\u0022);\r\n                            in_out_alt();\r\n                            // panel11.BackColor = Color.White;\r\n                        }\r\n\r\n                        rich9 = \u0022\u0022;\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        private void alterado()\r\n        {\r\n            //  richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n            // richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n            try\r\n            {\r\n                int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n                string sec = secondLine2.Split(\u0027:\u0027)[26].Trim();\r\n                string pass11 = secondLine2.Split(\u0027:\u0027)[5].Trim();\r\n                string pass12 = secondLine2.Split(\u0027:\u0027)[9].Trim();\r\n                string pass13 = secondLine2.Split(\u0027:\u0027)[3].Trim();\r\n                string pass14 = secondLine2.Split(\u0027:\u0027)[11].Trim();\r\n                string pass15 = secondLine2.Split(\u0027:\u0027)[17].Trim();\r\n                string pass16 = secondLine2.Split(\u0027:\u0027)[19].Trim(); // NR34\r\n                string pass17 = secondLine2.Split(\u0027:\u0027)[21].Trim(); // VA1\r\n                string pass18 = secondLine2.Split(\u0027:\u0027)[23].Trim(); // V2                                                                                                                                                                   //17\r\n                string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n                string pass20 = secondLine2.Split(\u0027:\u0027)[31].Trim();// V BOOSTER\r\n                string pass21 = secondLine2.Split(\u0027:\u0027)[32].Trim();// V BOOSTER\r\n                string pass22 = secondLine2.Split(\u0027:\u0027)[33].Trim();// V BOOSTER\r\n                                                                  //  0   1      2                       3        4              5         6              7  8           9         10                                  11      12             13        14      15    16           17     18           19          20            21          22           23               24            25 26     27   \r\n                                                                  //Number : 1 : Name : CRISTIANO CALHEIROS 3 : Compay : GOOGLEMARINE :Funcition:  ENGENHEIRO  :Id: 1110988400 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Googlemarine : Project : 2001 : ASO : 02/02/2024 : NR-34 : 02/02/2025 : Vaccine-1 : 02/02/2026 : Vaccine-2 : 02/02/2027 : Booster vaccine : 02/02/2028 :  : COMUM :\r\n                if (pass11.Trim() != richTextBox1.Text.Trim())  //COMPANY\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n\r\n\r\n                if (pass12.Trim() != richTextBox4.Text.Trim())  // IDENTIDADE\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass13.Trim() != richTextBox2.Text.Trim()) // NOME\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass14.Trim() != richTextBox8.Text.Trim()) // email\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass15.Trim() != maskedTextBox1.Text.Trim()) // aso\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass16.Trim() != maskedTextBox2.Text.Trim()) // nr34\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass17.Trim() != maskedTextBox3.Text.Trim()) // vacina 1\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass18.Trim() != maskedTextBox4.Text.Trim()) // vacina 2\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass19.Trim() != maskedTextBox5.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass20.Trim() != richTextBox6.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass21.Trim() != richTextBox7.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n                if (pass22.Trim() != richTextBox15.Text.Trim()) // vacina refor\u00E7o\r\n                {\r\n                    alter = true;\r\n                }\r\n\r\n                if (pass11.Trim() == richTextBox1.Text.Trim() \u0026\u0026 pass12.Trim() == richTextBox4.Text.Trim() \u0026\u0026 pass13.Trim() == richTextBox2.Text.Trim())\r\n                {\r\n                    if (pass14.Trim() == richTextBox8.Text.Trim() \u0026\u0026 pass15.Trim() == maskedTextBox1.Text.Trim() \u0026\u0026 pass16.Trim() == maskedTextBox2.Text.Trim())\r\n                    {\r\n                        if (pass17.Trim() == maskedTextBox3.Text.Trim() \u0026\u0026 pass18.Trim() == maskedTextBox4.Text.Trim() \u0026\u0026 pass19.Trim() == maskedTextBox5.Text.Trim() \u0026\u0026 pass20.Trim() == richTextBox6.Text.Trim() \u0026\u0026 pass21.Trim() == richTextBox7.Text.Trim() \u0026\u0026 pass21.Trim() == richTextBox15.Text.Trim())\r\n                        {\r\n                            alter = false; // \r\n                            print_ = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        int test2 = 0;\r\n        private void timer4_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n            if (vid == 1)\r\n            {\r\n\r\n\r\n\r\n\r\n                ckecked_false();\r\n                // string cripto = \u0022\u0022;\r\n                textBox7.Text.Replace(\u0027;\u0027, \u0027/\u0027);\r\n                string zzz = textBox7.Text.Replace(\u0027;\u0027, \u0027/\u0027);\r\n                textBox8.Text = zzz.Trim();\r\n\r\n                try\r\n                {\r\n                    Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n                    criptografia.Key = \u0022Etec2017\u0022;\r\n                    textBox8.Text = criptografia.Decrypt(zzz);\r\n                    textBox10.Text = textBox8.Text;\r\n                    test2 = 1;\r\n                    string textoqr = zzz;\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    textBox7.Text = \u0022 \u0022;\r\n                    textBox8.Text = \u0022 \u0022;\r\n                    timer4.Stop();\r\n                    MessageBox.Show(\u0022Invalid card\u0022, ex.Message.Substring(2, 0));\r\n                    test2 = 0;\r\n                    tempo = 0;\r\n                }\r\n\r\n                if (test2 == 1)\r\n                {\r\n                    int count = textBox8.Lines.Length;\r\n                    TextReader read = new System.IO.StringReader(textBox8.Text);\r\n                    int rows = 150;\r\n\r\n                    string[] text10 = new string[rows];\r\n                    for (int r = 1; r \u003C rows; r\u002B\u002B)\r\n                    {\r\n                        text10[r] = read.ReadLine();\r\n                    }\r\n\r\n\r\n\r\n                    if (count \u003E= 8)\r\n                    {\r\n\r\n                        try\r\n                        {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            richTextBox16.Text = text10[1].Remove(0, 6);\r\n                            richTextBox1.Text = text10[3].Remove(0, 9);\r\n                            richTextBox2.Text = text10[2].Remove(0, 6);\r\n                            richTextBox3.Text = text10[4].Remove(0, 10);\r\n                            richTextBox4.Text = text10[5].Remove(0, 4);\r\n                            richTextBox8.Text = text10[6].Remove(0, 1);\r\n                            //  richTextBox5.Text = text10[7].Remove(0, 8);\r\n                            //  richTextBox9.Text = text10[8].Remove(0, 0);\r\n\r\n\r\n                            rich5 = text10[7].Remove(0, 8).Trim();\r\n                            //    MessageBox.Show(rich5);\r\n                            rich9 = text10[8].Remove(0, 0).Trim();\r\n                            // label33.Text = rich5;\r\n                            //  label34.Text = rich9;\r\n                            richTextBox10.Text = text10[9].Remove(0, 0);\r\n                            richTextBox11.Text = text10[10].Remove(0, 0);\r\n                            richTextBox12.Text = text10[11].Remove(0, 0);\r\n                            richTextBox13.Text = text10[12].Remove(0, 0);\r\n                            richTextBox14.Text = text10[13].Remove(0, 0);\r\n                            richTextBox6.Text = text10[14].Remove(0, 6).Trim();\r\n                            richTextBox7.Text = text10[15].Remove(0, 4).Trim();\r\n                            richTextBox15.Text = \u0022https://drive.google.com/file/d/\u0022 \u002B text10[16] \u002B \u0022/view?usp=sharing\u0022;\r\n                            maskedTextBox1.Text = richTextBox10.Text;\r\n                            maskedTextBox2.Text = richTextBox11.Text;\r\n                            maskedTextBox3.Text = richTextBox12.Text;\r\n                            maskedTextBox4.Text = richTextBox13.Text;\r\n                            maskedTextBox5.Text = richTextBox14.Text;\r\n                            ///  MessageBox.Show(richTextBox16.Text);\r\n\r\n                            check_id_onboard2();\r\n\r\n\r\n\r\n                            if (id_onboard2 == true)\r\n                            {\r\n\r\n                                timer4.Stop();\r\n                                MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 EM OUTRA EMBARCA\u00C7\u00C3O! SER\u00C1 NECESS\u00C1RIO DAR A SA\u00CDDA PARA A LIBERA\u00C7\u00C3O DE ENTRADA A ESTA EMBARCA\u00C7\u00C3O\u0022);\r\n\r\n\r\n\r\n                            }\r\n\r\n\r\n                            if (id_onboard2 == false)\r\n                            {\r\n\r\n\r\n\r\n                                if (text10[17].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local1.Checked = true;\r\n\r\n                                }\r\n                                if (text10[18].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local2.Checked = true;\r\n                                }\r\n                                if (text10[19].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local3.Checked = true;\r\n                                }\r\n                                if (text10[20].Trim() == \u00221\u0022)\r\n                                {\r\n                                    local4.Checked = true;\r\n                                }\r\n                                if (text10[21].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_yellow.Checked = true;\r\n                                }\r\n                                if (text10[22].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_green.Checked = true;\r\n                                }\r\n                                if (text10[23].Trim() == \u00221\u0022)\r\n                                {\r\n                                    level_red.Checked = true;\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                // path3 = \u0022https://drive.google.com/file/d/\u0022 \u002B subs2[5] \u002B \u0022/view?usp=sharing\u0022;\r\n                                // panel11.Visible = true;\r\n                                //  panel4.Visible = false;\r\n\r\n                                /////////////////////\r\n\r\n                                // string ve = textBox10.Lines[6];\r\n                                textBox15.Text = text10[7];\r\n\r\n                                if (text10[7] == \u0022VESSEL: \u0022 \u002B comboBox1.Text.Trim())\r\n                                {\r\n                                    try\r\n                                    {\r\n                                        path2 = richTextBox15.Text;\r\n                                        subs2 = path2.Split(\u0027/\u0027);\r\n                                        path3 = subs2[5];\r\n                                    }\r\n                                    catch\r\n                                    {\r\n\r\n                                    }\r\n                                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B richTextBox6.Text \u002B \u0022 :\u0022 \u002B richTextBox7.Text \u002B \u0022 :\u0022 \u002B path3;\r\n                                    string filePath = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n                                    string[] lines = File.ReadAllLines(filePath);\r\n\r\n                                    for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                                    {\r\n                                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                                        {\r\n                                            ver = 1;\r\n                                            lines[i] = teste2.Trim();\r\n                                            /// MessageBox.Show(\u0022Achei: \u0022 \u002B richTextBox4.Text.Trim());\r\n                                        }\r\n\r\n                                    }\r\n                                    //and save it:\r\n\r\n                                    File.WriteAllLines(filePath, lines);\r\n                                    ver = 0;\r\n\r\n                                }\r\n                                //////////////////\r\n\r\n\r\n                                //  pictureBox1.Visible = false;\r\n                                //  panel4.Visible = false;\r\n                                //  panel4.Size = new Size(360, 355);\r\n                                // panel4.Location = new System.Drawing.Point(95, 150);\r\n                                // pictureBox1.Size = new Size(330, 320);\r\n                                // pictureBox1.Location = new System.Drawing.Point(15, 18);\r\n\r\n                                // panel4.Visible = true;\r\n                                //  pictureBox1.Visible = true;\r\n                                // panel10.Visible = false;\r\n\r\n\r\n\r\n                                // button8.Visible = true;\r\n                                // button9.Visible = true;\r\n                                // button10.Visible = true;\r\n                                // pictureBox1.BackgroundImage = Properties.Resources.barcode1;\r\n                                int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                                string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n                                string sec = secondLine2.Split(\u0027:\u0027)[26].Trim();\r\n                                string pass11 = secondLine2.Split(\u0027:\u0027)[5].Trim();\r\n                                string pass12 = secondLine2.Split(\u0027:\u0027)[9].Trim();\r\n                                string pass13 = secondLine2.Split(\u0027:\u0027)[3].Trim();\r\n                                string pass14 = secondLine2.Split(\u0027:\u0027)[11].Trim();\r\n                                string pass15 = secondLine2.Split(\u0027:\u0027)[17].Trim();\r\n                                string pass16 = secondLine2.Split(\u0027:\u0027)[19].Trim(); // NR34\r\n                                string pass17 = secondLine2.Split(\u0027:\u0027)[21].Trim(); // VA1\r\n                                string pass18 = secondLine2.Split(\u0027:\u0027)[23].Trim(); // V2                                                                                                                                                                   //17\r\n                                string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n\r\n                                //   string pass19 = secondLine2.Split(\u0027:\u0027)[25].Trim();// V BOOSTER\r\n\r\n\r\n\r\n\r\n\r\n                                //  0   1      2                       3        4              5         6              7  8           9         10                                  11      12             13        14      15    16           17     18           19          20            21          22           23               24            25 26     27   \r\n                                //Number : 1 : Name : CRISTIANO CALHEIROS 3 : Compay : GOOGLEMARINE :Funcition:  ENGENHEIRO  :Id: 1110988400 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Googlemarine : Project : 2001 : ASO : 02/02/2024 : NR-34 : 02/02/2025 : Vaccine-1 : 02/02/2026 : Vaccine-2 : 02/02/2027 : Booster vaccine : 02/02/2028 :  : COMUM :\r\n                                if (pass11.Trim() != richTextBox1.Text.Trim())  //COMPANY\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n\r\n\r\n                                if (pass12.Trim() != richTextBox4.Text.Trim())  // IDENTIDADE\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n                                if (pass13.Trim() != richTextBox2.Text.Trim()) // NOME\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n                                if (pass14.Trim() != richTextBox8.Text.Trim()) // email\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass15.Trim() != maskedTextBox1.Text.Trim()) // aso\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass16.Trim() != maskedTextBox2.Text.Trim()) // nr34\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass17.Trim() != maskedTextBox3.Text.Trim()) // vacina 1\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass18.Trim() != maskedTextBox4.Text.Trim()) // vacina 2\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n                                if (pass19.Trim() != maskedTextBox5.Text.Trim()) // vacina refor\u00E7o\r\n                                {\r\n                                    company_loc = true;\r\n                                }\r\n\r\n\r\n                                if (pass11.Trim() == richTextBox1.Text.Trim() \u0026\u0026 pass12.Trim() == richTextBox4.Text.Trim() \u0026\u0026 pass13.Trim() == richTextBox2.Text.Trim())\r\n                                {\r\n                                    if (pass14.Trim() == richTextBox8.Text.Trim() \u0026\u0026 pass15.Trim() == maskedTextBox1.Text.Trim() \u0026\u0026 pass16.Trim() == maskedTextBox2.Text.Trim())\r\n                                    {\r\n                                        if (pass17.Trim() == maskedTextBox3.Text.Trim() \u0026\u0026 pass18.Trim() == maskedTextBox4.Text.Trim() \u0026\u0026 pass19.Trim() == maskedTextBox5.Text.Trim())\r\n                                        {\r\n                                            company_loc = false; // \r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n\r\n\r\n                                if (sec == \u0022Bloqueado\u0022)\r\n                                {\r\n                                    bb = \u0022Bloqueado\u0022;\r\n                                    label37.Text = secondLine2.Split(\u0027:\u0027)[28];\r\n                                    // company_loc = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    bb = \u0022\u0022;\r\n                                    label37.Text = \u0022\u0022;\r\n                                    // company_loc = false;\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                acha_palavra_txt();\r\n                                compare_data();\r\n\r\n                                //  timer2.Enabled = true;\r\n                                textBox7.Text = \u0022\u0022;\r\n                                textBox8.Text = \u0022 \u0022;\r\n                                label37.Text = \u0022\u0022;\r\n                                tempo = 0;\r\n                            }\r\n\r\n                            timer4.Stop();\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            //  MessageBox.Show(\u0022\u0022,ex.Message);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        public async Task TestaPing(string url)\r\n        {\r\n            try\r\n            {\r\n                Ping pinger = new Ping();\r\n                PingReply resposta = await pinger.SendPingAsync(url);\r\n                ExibeInfoRespostaPing(resposta);\r\n                pinger.PingCompleted \u002B= pinger_PingCompleted;\r\n\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private static void pinger_PingCompleted(object sender, PingCompletedEventArgs e)\r\n        {\r\n            try\r\n            {\r\n                PingReply resposta = e.Reply;\r\n                if (e.Cancelled)\r\n                {\r\n                    MessageBox.Show($\u0022Ping para {e.UserState.ToString()} foi cancelado\u0022);\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show($\u0022Excepition lan\u00E7ada durante o ping:{ex.Message}\u0022);\r\n            }\r\n        }\r\n\r\n        private void ExibeInfoRespostaPing(PingReply resposta)\r\n        {\r\n\r\n            st = resposta.Status.ToString().Trim();\r\n            /// MessageBox.Show(st);\r\n            if (st == \u0022Success\u0022)\r\n            {\r\n                // panel12.BackColor = Color.YellowGreen;\r\n                // label40.Visible = false;\r\n\r\n                if (timer9.Enabled == false)\r\n                {\r\n\r\n                    // timer9.Start();\r\n                }\r\n                p = 1;\r\n                ping_local = 1;\r\n            }\r\n            if (st == \u0022TimedOut\u0022)\r\n            {\r\n                // panel12.BackColor = Color.Red;\r\n                // label40.Visible = true;\r\n                zzz = 0;\r\n                p = 0;\r\n                ping_local = 0;\r\n                // MessageBox.Show(\u0022sem comunica\u00E7\u00E3o\u0022);\r\n            }\r\n        }\r\n\r\n        private void timer8_Tick(object sender, EventArgs e)\r\n        {\r\n            //TestaPing(ip1);\r\n            // TestaPing(ip2);\r\n            //  TestaPing(ip3);\r\n            // checa_host();\r\n            //  MessageBox.Show(comp.ToString());\r\n            label51.Text = count2.ToString();\r\n            //  label51.Text = hostName;\r\n            String block = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n            if (comp == 1)\r\n            {\r\n                //checa_host();\r\n                //  atualiza_compartilhamento();\r\n                /// ler_linha();\r\n            }\r\n\r\n            if (count \u003E= 1)\r\n            {\r\n                // label51.Text = count.ToString();\r\n                // online_ = true;\r\n            }\r\n\r\n            DateTime fproj2 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\PROJETO.txt\u0022);\r\n            if (fproj2 \u003E fproj)\r\n            {\r\n\r\n                System.Windows.Forms.Application.Restart();\r\n\r\n            }\r\n\r\n\r\n            DateTime flogo2 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\logo_criptoqrcode\\logo.png\u0022);\r\n            if (flogo2 \u003E flogo3)\r\n            {\r\n\r\n\r\n                System.Windows.Forms.Application.Restart();\r\n\r\n\r\n            }\r\n            //  MessageBox.Show(flogo3.ToString() \u002B \u0022    \u0022 \u002B flogo2.ToString());\r\n            //    DateTime flogo;\r\n            //   DateTime flogo1;\r\n        }\r\n        private void ler_linha3()\r\n        {\r\n            //   String locked = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n\r\n            //  timer8.Stop();\r\n            try\r\n            {\r\n                // string FileToRead = @\u0022C:\\data_txt\\data.txt\u0022;\r\n                string FileToRead = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n                TextReader Leitor = new StreamReader(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, true);//Inicializa o Leitor\r\n                int Linhas = 0;\r\n                //  MessageBox.Show(\u0022acesso ok\u0022);\r\n                while (Leitor.Peek() != -1)\r\n                {//Enquanto o arquivo n\u00E3o acabar, o Peek n\u00E3o retorna -1 sendo adequando para o loop while...\r\n                    Linhas\u002B\u002B;//Incrementa 1 na contagem\r\n                    Leitor.ReadLine();//Avan\u00E7a uma linha no arquivo\r\n                }\r\n\r\n\r\n\r\n                label27.Text = Linhas.ToString();\r\n                //   label67.Text = label27.Text;\r\n                if (rich5 == comboBox1.Text.Trim())\r\n                {\r\n\r\n                }\r\n                Leitor.Close();\r\n            }\r\n            catch\r\n            {\r\n                //  MessageBox.Show(\u0022n\u00E3o consegui acessar o caminho  \u0022 \u002B @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        //  int comp = 1;\r\n        private void timer9_Tick(object sender, EventArgs e)\r\n        {\r\n            //myThread.Start();\r\n            // myThread.Abort();\r\n            //    panel12.BackColor = Color.Black;\r\n\r\n            try\r\n            {\r\n                if (checa_host_ == true)\r\n                {\r\n\r\n                    checa_host();\r\n                    //  compr = 1;\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void userloc()\r\n        {\r\n            panel5.Visible = true;\r\n            button1.Enabled = true;\r\n            button28.Enabled = true;\r\n            // button2.Enabled = true;\r\n            //  button17.Enabled = true;\r\n            //  button29.Enabled = true;\r\n            button3.Enabled = true;\r\n            button4.Enabled = true;\r\n            button19.Enabled = true;\r\n        }\r\n        private void userlocon()\r\n        {\r\n            button1.Enabled = false;\r\n            button28.Enabled = false;\r\n            // button2.Enabled = false;\r\n            //  button17.Enabled = false;\r\n            //  button29.Enabled = false;\r\n            button3.Enabled = false;\r\n            button4.Enabled = false;\r\n            button19.Enabled = false;\r\n            panel5.Visible = false;\r\n        }\r\n        bool verz = false;\r\n\r\n        public void loc_crew()\r\n        {\r\n            button21.Visible = false;\r\n            button6.Visible = false;\r\n            button4.Visible = false;\r\n            button3.Visible = false;\r\n            // button29.Visible = false;\r\n            button28.Visible = false;\r\n            // button17.Visible = false;\r\n            //  button2.Visible = false;\r\n            button1.Visible = false;\r\n            button19.Visible = false;\r\n            monitor();\r\n        }\r\n\r\n        public void unloc_crew()\r\n        {\r\n            button21.Visible = true;\r\n            button6.Visible = true;\r\n            button4.Visible = true;\r\n            button3.Visible = true;\r\n            //button29.Visible = true;\r\n            button28.Visible = true;\r\n            //button17.Visible = true;\r\n            // button2.Visible = true;\r\n            button1.Visible = true;\r\n            button19.Visible = true;\r\n        }\r\n        private void button35_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            verz = true;\r\n            String pass0 = passall.Split(\u0027,\u0027)[0];\r\n            String pass1 = passall.Split(\u0027,\u0027)[1];\r\n            String pass2 = passall.Split(\u0027,\u0027)[2];\r\n            String pass3 = passall.Split(\u0027,\u0027)[3];\r\n            String pass4 = passall.Split(\u0027,\u0027)[4];\r\n            String pass5 = passall.Split(\u0027,\u0027)[5];\r\n            String pass6 = passall.Split(\u0027,\u0027)[6];\r\n            String pass7 = passall.Split(\u0027,\u0027)[7];\r\n            String pass8 = passall.Split(\u0027,\u0027)[8];\r\n            String pass9 = passall.Split(\u0027,\u0027)[9];\r\n            String pass10 = passall.Split(\u0027,\u0027)[10];\r\n            String pass11 = passall.Split(\u0027,\u0027)[11];\r\n            //   if (verz == true)\r\n            // {\r\n\r\n\r\n            //  }\r\n            try\r\n            {\r\n                if (comuser.SelectedItem.ToString() == pass0.Trim() \u0026\u0026 textpass.Text.Trim() == pass1.Trim())\r\n                {\r\n\r\n\r\n                    MessageBox.Show(\u0022Usu\u00E1rio Admin \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = false;\r\n                    // button27.Visible = true;\r\n                    regs.Visible = true;\r\n                    panel17.Visible = true;\r\n                    panel19.Visible = true;\r\n\r\n                    libera = true;\r\n                    userloc();\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass0.Trim() \u0026\u0026 textpass.Text.Trim() != pass1.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass2.Trim() \u0026\u0026 textpass.Text.Trim() == pass3.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio Admin nivel 2 \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = false;\r\n                    libera = true;\r\n                    userloc();\r\n                    verz = false;\r\n                    // button27.Visible = true;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n                    regs.Visible = true;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass2.Trim() \u0026\u0026 textpass.Text.Trim() != pass3.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    panel17.Visible = false;\r\n                    panel19.Visible = false;\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass4.Trim() \u0026\u0026 textpass.Text.Trim() == pass5.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    textBox7.Focus();\r\n                    unloc_crew();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass4.Trim() \u0026\u0026 textpass.Text.Trim() != pass5.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass6.Trim() \u0026\u0026 textpass.Text.Trim() == pass7.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n                    button27.Visible = false;\r\n                    regs.Visible = false;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    unloc_crew();\r\n                }\r\n                if (comuser.SelectedItem.ToString() == pass6.Trim() \u0026\u0026 textpass.Text.Trim() != pass7.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == pass8.Trim() \u0026\u0026 textpass.Text.Trim() == pass9.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    verz = false;\r\n                    userloc();\r\n                    button27.Visible = false;\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    regs.Visible = false;\r\n                    unloc_crew();\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass8.Trim() \u0026\u0026 textpass.Text.Trim() != pass9.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass10.Trim() \u0026\u0026 textpass.Text.Trim() == pass11.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022Usu\u00E1rio \u0022 \u002B comuser.Text \u002B \u0022 com acesso liberado\u0022);\r\n                    dataGridView1.ReadOnly = true;\r\n                    libera = false;\r\n                    userloc();\r\n                    verz = false;\r\n\r\n\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    regs.Visible = false;\r\n                    loc_crew();\r\n                }\r\n\r\n                if (comuser.SelectedItem.ToString() == pass10.Trim() \u0026\u0026 textpass.Text.Trim() != pass11.Trim())\r\n                {\r\n                    MessageBox.Show(\u0022A SENHA DO USUARIO \u0022 \u002B comuser.Text \u002B \u0022 EST\u00C1 INCORRETA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n\r\n\r\n                }\r\n\r\n\r\n                if (comuser.SelectedItem.ToString() == \u0022\u0022 \u0026\u0026 textpass.Text.Trim() == \u0022\u0022)\r\n                {\r\n\r\n                    MessageBox.Show(\u0022ESCOLHA O USU\u00C1RIO E DIGITE A SENHA!\u0022);\r\n                    userlocon();\r\n                    libera = false;\r\n                    regs.Visible = false;\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n            // MessageBox.Show(libera.ToString());\r\n        }\r\n\r\n        private void button28_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            if (comboBox1.Text != \u0022\u0022)\r\n            {\r\n\r\n                label44.Visible = true;\r\n                label54.Visible = true;\r\n                label45.Visible = true;\r\n                label46.Visible = true;\r\n                label47.Visible = true;\r\n                //  label48.Visible = true;\r\n                label49.Visible = true;\r\n                label50.Visible = true;\r\n\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                local1.Enabled = true;\r\n                local2.Enabled = true;\r\n                local4.Enabled = true;\r\n                label37.Visible = false;\r\n\r\n                dataGridView1.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                //  button29.Enabled = true;\r\n                btloc.Visible = false;\r\n                button7.Visible = false;\r\n                // CHLocked.Visible = false;\r\n                richTextBox4.ReadOnly = false;\r\n                richTextBox16.ReadOnly = false;\r\n                plant = 0;\r\n\r\n                if (band == 0)\r\n                {\r\n                    button3.Text = Label_Show_data[0];\r\n                }\r\n                else\r\n                {\r\n                    button3.Text = Label_Show_data[1];\r\n                }\r\n\r\n                // button3.Text = \u0022Show DataBase\u0022;\r\n\r\n\r\n                button1.Enabled = true;\r\n\r\n                panel11.Visible = true;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                panel11.BackColor = Color.White;\r\n                label8.Visible = false;\r\n                //  button7.Visible = true;\r\n                maskedTextBox1.ReadOnly = false;\r\n                maskedTextBox2.ReadOnly = false;\r\n                maskedTextBox3.ReadOnly = false;\r\n                maskedTextBox4.ReadOnly = false;\r\n                maskedTextBox5.ReadOnly = false;\r\n                maskedTextBox1.Visible = true;\r\n                maskedTextBox2.Visible = true;\r\n                maskedTextBox3.Visible = true;\r\n                maskedTextBox4.Visible = true;\r\n                maskedTextBox5.Visible = true;\r\n                maskedTextBox1.Text = \u0022 \u0022;\r\n                //maskedTextBox2.Text = \u0022 \u0022;\r\n                //maskedTextBox3.Text = \u0022 \u0022;\r\n                // maskedTextBox4.Text = \u0022 \u0022;\r\n                //  maskedTextBox5.Text = \u0022 \u0022;\r\n                // MaskedTextBox m = new MaskedTextBox();\r\n                // m.Text = \u002200000000\u0022;\r\n                maskedTextBox2.Text = \u002200000000\u0022;\r\n                maskedTextBox3.Text = \u002200000000\u0022;\r\n                maskedTextBox4.Text = \u002200000000\u0022;\r\n                maskedTextBox5.Text = \u002200000000\u0022;\r\n\r\n\r\n\r\n\r\n                // panel4.Size = new Size(296, 215);\r\n                // panel4.Location = new System.Drawing.Point(80, 277);\r\n                //  pictureBox1.Location = new System.Drawing.Point(5, 25);\r\n                //  pictureBox1.Size = new Size(178, 176);\r\n                // panel10.Visible = true;\r\n\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                richTextBox1.ReadOnly = false;\r\n                richTextBox2.ReadOnly = false;\r\n                richTextBox3.ReadOnly = false;\r\n                richTextBox4.ReadOnly = false;\r\n                //richTextBox5.ReadOnly = false;\r\n                // richTextBox6.ReadOnly = false;\r\n                // richTextBox7.ReadOnly = false;\r\n                richTextBox8.ReadOnly = false;\r\n\r\n                richTextBox10.ReadOnly = true;\r\n                richTextBox11.ReadOnly = true;\r\n                richTextBox12.ReadOnly = true;\r\n                richTextBox13.ReadOnly = true;\r\n                richTextBox14.ReadOnly = true;\r\n\r\n                // if (timer4.Enabled)\r\n                /// {\r\n\r\n                cancelar();\r\n                //button2.Enabled = true;\r\n                if (band == 0)\r\n                {\r\n                    button28.Text = Label_Read_QRcode_Off[0];\r\n                    label7.Text = button28.Text;\r\n                }\r\n                else\r\n                {\r\n                    button28.Text = Label_Read_QRcode_Off[1];\r\n                    label7.Text = button28.Text;\r\n                }\r\n\r\n                //richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                //button1.Text = \u0022Read QRcode Off\u0022;\r\n                richTextBox1.Enabled = true;\r\n                richTextBox2.Enabled = true;\r\n                richTextBox3.Enabled = true;\r\n                richTextBox4.Enabled = true;\r\n                comboBox1.Enabled = true;\r\n                richTextBox6.Enabled = true;\r\n                richTextBox7.Enabled = true;\r\n                richTextBox8.Enabled = true;\r\n                richTextBox9.Enabled = true;\r\n                richTextBox10.Enabled = true;\r\n                richTextBox11.Enabled = true;\r\n                richTextBox12.Enabled = true;\r\n                richTextBox13.Enabled = true;\r\n                richTextBox14.Enabled = true;\r\n\r\n\r\n                button4.Enabled = true;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n\r\n                //richTextBox9.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                // richTextBox8.Text = \u0022cristiano.engenharia.ac@gmail.com\u0022;\r\n                dateTimePicker1.Visible = true;\r\n                dateTimePicker2.Visible = true;\r\n                richTextBox6.Visible = false;\r\n                richTextBox7.Visible = false;\r\n                //    timer4.Stop();\r\n                // videoCaptureDevice.Stop();\r\n                //  pictureBox1.Image = Properties.Resources.frame;\r\n                //button2.Enabled = true;\r\n                // }\r\n                vid = 0;\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(_cad);\r\n            }\r\n        }\r\n        private void compare_aso()\r\n        {\r\n            try\r\n            {\r\n\r\n                string texto = \u0022Aqui est\u00E1 um exemplo de texto com a palavra \u0027dado\u0027.\u0022;\r\n\r\n                string palavraProcurada = \u0022dado\u0022;\r\n\r\n                if (texto.Contains(palavraProcurada))\r\n                {\r\n                    Console.WriteLine($\u0022A palavra \u0027{palavraProcurada}\u0027 foi encontrada no texto.\u0022);\r\n                }\r\n                var parameterDate_ASo = DateTime.ParseExact(maskedTextBox1.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                //var parameterDate_initial = DateTime.ParseExact(richTextBox6.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                /// var parameterDate_final = DateTime.ParseExact(richTextBox7.Text.Trim(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                var todaysDate = DateTime.Today;\r\n\r\n                if (todaysDate \u003E parameterDate_ASo)\r\n                {\r\n\r\n\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    beep();\r\n                    aso_1 = 1;\r\n                    MessageBox.Show(\u0022Aso vencido, Favor verificar\u0022);\r\n                }\r\n                else\r\n                {\r\n\r\n                    aso_1 = 0;\r\n\r\n                }\r\n\r\n\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                MessageBox.Show(e.Message);\r\n            }\r\n            // compare_id();\r\n        }\r\n        int ver = 0;\r\n        String local22 = \u0022\u0022;\r\n        private void read_write()\r\n        {\r\n            checa_host_ = false;\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                richTextBox6.Text = data_new;\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                richTextBox7.Text = data2_new;\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n            if (richTextBox16.Text.Trim() == \u0022\u0022)\r\n            {\r\n\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n\r\n                string number = count.ToString().Trim(); //   teste count System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022);\r\n                label3.Text = number;\r\n                number2 = count;//Int32.Parse(number);\r\n                lb4.Visible = true;\r\n                number2 = number2 \u002B 1;\r\n                // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\count.txt\u0022, number2.ToString());\r\n                if (zzz == 1)\r\n                {\r\n                    // string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\rede.txt\u0022);\r\n                    // \\\\DOF_ACCESS\\\\compartilhamento\\\\\r\n                    //  File.WriteAllText(text \u002B @\u0022data_txt\\count.txt\u0022, number2.ToString());\r\n                }\r\n\r\n                label3.Text = number2.ToString();\r\n                lb4.Text = label3.Text;\r\n                richTextBox16.Text = number2.ToString();\r\n\r\n                if (local1val == 1)\r\n                {\r\n                    local22 = place1[band];\r\n\r\n                }\r\n                if (local2val == 1)\r\n                {\r\n                    local22 = place2[band];\r\n\r\n                }\r\n                if (local4val == 1)\r\n                {\r\n                    local22 = place4[band];\r\n\r\n                }\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    try\r\n                    {\r\n                        path2 = richTextBox15.Text;\r\n                        subs2 = path2.Split(\u0027/\u0027);\r\n                        path3 = subs2[5];\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n\r\n                    //Number : 1 : Name : Gustavo de Vasconcelos Magalh\u00E3es : Compay : DOF :Funcition:  Gerente de Projeto  :Id: 120159298 : E-mail : N/A : Vessel : SKANDI AMAZONAS : Project : Estadia : ASO : 01/07/2024 : NR-34 : 01/06/2024 : NR-10 : 01/06/2024 : NR-33 : 01/06/2024 : NR-35 : 01/06/2024 :  : JO\u00C3O : : : :17/08/2023 :17/08/2023 :.\r\n                    //  richTextBox16.Text = label3.Text.Trim();\r\n                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B data_new \u002B \u0022 :\u0022 \u002B data2_new \u002B \u0022 :\u0022 \u002B path3;\r\n\r\n                    Cadastro cadastro = new Cadastro(\r\n                        number: richTextBox16.Text.Trim(),\r\n                        name: richTextBox2.Text,\r\n                        company: richTextBox1.Text,\r\n                        function: richTextBox3.Text,\r\n                        identidade: richTextBox4.Text,\r\n                        email: richTextBox8.Text,\r\n                        vessel: comboBox1.Text,\r\n                        project: richTextBox9.Text,\r\n                        aso: richTextBox10.Text,\r\n                        nr_34: richTextBox11.Text,\r\n                        nr_10: richTextBox12.Text,\r\n                        nr_33: richTextBox13.Text,\r\n                        nr_35: richTextBox14.Text,\r\n                        estado: bb,\r\n                        usuario: comuser.Text,\r\n                        motivo: richTextBox17.Text,\r\n                        local: local22,\r\n                        data: data_new,\r\n                        data2: data2_new,\r\n                        document: path3\r\n                        );\r\n\r\n                    //save cadstro at  using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n                    if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n                    {\r\n                        Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n                    }\r\n\r\n                    AddOrUpdateCadastroData(cadastro);\r\n\r\n                    writer.WriteLine(teste2);\r\n                    writer.Close();\r\n                }\r\n                // MessageBox.Show(\u0022N\u00E3o Achei \u0022);\r\n            }\r\n\r\n            else\r\n            {\r\n                //  richTextBox16.Text = number2.ToString();\r\n                if (local1val == 1)\r\n                {\r\n                    local22 = place1[band];\r\n\r\n                }\r\n                if (local2val == 1)\r\n                {\r\n                    local22 = place2[band];\r\n\r\n                }\r\n                if (local4val == 1)\r\n                {\r\n                    local22 = place4[band];\r\n\r\n                }\r\n                if (richTextBox16.Text.Trim() != \u0022\u0022)\r\n                {\r\n                    try\r\n                    {\r\n                        path2 = richTextBox15.Text;\r\n                        subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                        path3 = subs2[5];\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    string teste2 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B data_new \u002B \u0022 :\u0022 \u002B data2_new \u002B \u0022 :\u0022 \u002B path3;\r\n                    string filePath = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n                    string[] lines = File.ReadAllLines(filePath);\r\n                    //create new Cadastro object and save it into a new SQLite table called Cadastro\r\n                    Cadastro cadastro = new Cadastro(\r\n                        number: richTextBox16.Text.Trim(),\r\n                        name: richTextBox2.Text,\r\n                        company: richTextBox1.Text,\r\n                        function: richTextBox3.Text,\r\n                        identidade: richTextBox4.Text,\r\n                        email: richTextBox8.Text,\r\n                        vessel: comboBox1.Text,\r\n                        project: richTextBox9.Text,\r\n                        aso: richTextBox10.Text,\r\n                        nr_34: richTextBox11.Text,\r\n                        nr_10: richTextBox12.Text,\r\n                        nr_33: richTextBox13.Text,\r\n                        nr_35: richTextBox14.Text,\r\n                        estado: bb,\r\n                        usuario: comuser.Text,\r\n                        motivo: richTextBox17.Text,\r\n                        local: local22,\r\n                        data: data_new,\r\n                        data2: data2_new,\r\n                        document: path3\r\n                        );\r\n\r\n                    //save cadstro at  using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n                    if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n                    {\r\n                        Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n                    }\r\n\r\n                    AddOrUpdateCadastroData(cadastro);\r\n\r\n\r\n\r\n                    for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                    {\r\n                        if (lines[i].Contains(richTextBox4.Text.Trim()))\r\n                        {\r\n                            ver = 1;\r\n                            lines[i] = teste2.Trim();\r\n                            /// MessageBox.Show(\u0022Achei: \u0022 \u002B richTextBox4.Text.Trim());\r\n                        }\r\n\r\n                    }\r\n                    //and save it:\r\n\r\n                    File.WriteAllLines(filePath, lines);\r\n                    ver = 0;\r\n\r\n                }\r\n            }\r\n\r\n\r\n            checa_host_ = true;\r\n\r\n        }\r\n        public Bitmap GerarQRCode(int width, int height, string text)\r\n        {\r\n            try\r\n            {\r\n                var bw = new ZXing.BarcodeWriter();\r\n                var encOptions = new ZXing.Common.EncodingOptions() { Width = width, Height = height, Margin = 0 };\r\n                bw.Options = encOptions;\r\n                bw.Format = ZXing.BarcodeFormat.QR_CODE;\r\n                var resultado = new Bitmap(bw.Write(text));\r\n                return resultado;\r\n\r\n            }\r\n            catch\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n\r\n        private void criar_excel()\r\n        {\r\n\r\n            string txtFilePath = @\u0022C:\\compartilhamento\\data_base\\novo.txt\u0022;\r\n            string excelFilePath = @\u0022C:\\compartilhamento\\data_base\\novo.xls\u0022;\r\n\r\n            IWorkbook workbook = new HSSFWorkbook();\r\n            ISheet sheet = workbook.CreateSheet(\u0022Planilha1\u0022);\r\n\r\n            using (StreamReader reader = new StreamReader(txtFilePath))\r\n            {\r\n                string headerLine = reader.ReadLine();\r\n                string[] headerParts = { \u0022NUMBER\u0022, \u0022NAME\u0022, \u0022COMPANY FUNCTION \u0022, \u0022FUNCTION\u0022, \u0022ID\u0022, \u0022EMAIL\u0022, \u0022VESSEL\u0022, \u0022CHECK-IN VALIDATION\u0022, \u0022CHECK-OUT VALIDATION\u0022, \u0022CHECK-IN  DATA\u0022, \u0022CHECK-IN  HORA\u0022, \u0022CHECK-OUT DATA\u0022, \u0022CHECK-OUT HORA\u0022, \u0022PROJECT\u0022, \u0022ASO\u0022, \u0022NR-34\u0022, \u0022NR-10\u0022, \u0022NR-33\u0022, \u0022NR-35\u0022, \u0022LOCAL\u0022, \u0022LEVEL\u0022, \u0022ESTADO\u0022, \u0022MOTIVO\u0022, \u0022USUARIO\u0022 };//headerLine.Split(\u0027:\u0027);\r\n\r\n                IRow headerRow = sheet.CreateRow(0);\r\n                for (int colIndex = 0; colIndex \u003C headerParts.Length; colIndex\u002B\u002B)\r\n                {\r\n                    ICell cell = headerRow.CreateCell(colIndex);\r\n                    cell.SetCellValue(headerParts[colIndex]);\r\n                }\r\n\r\n                int rowIndex = 1;\r\n\r\n                while (!reader.EndOfStream)\r\n                {\r\n                    string line = reader.ReadLine();\r\n                    string[] parts = line.Split(\u0027,\u0027);\r\n\r\n                    IRow row = sheet.CreateRow(rowIndex);\r\n\r\n                    for (int colIndex = 0; colIndex \u003C parts.Length; colIndex\u002B\u002B)\r\n                    {\r\n                        ICell cell = row.CreateCell(colIndex);\r\n                        cell.SetCellValue(parts[colIndex]);\r\n                    }\r\n\r\n                    rowIndex\u002B\u002B;\r\n                }\r\n            }\r\n\r\n            using (FileStream stream = new FileStream(excelFilePath, FileMode.Create, FileAccess.Write))\r\n            {\r\n                workbook.Write(stream);\r\n            }\r\n        }\r\n        private void cadastrar_invited()\r\n        {\r\n\r\n            rec = false;\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                check_id_onboard();\r\n\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    // alterado();\r\n                    System.Threading.Thread.Sleep(2000);\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n\r\n                        //  MessageBox.Show(\u0022id existe\u0022);\r\n                        richTextBox10.Text = \u0022VISITANTE\u0022;//maskedTextBox1.Text;\r\n                        richTextBox11.Text = \u0022N/A\u0022;\r\n                        richTextBox12.Text = \u0022N/A\u0022;\r\n                        richTextBox13.Text = \u0022N/A\u0022;\r\n                        richTextBox14.Text = \u0022N/A\u0022;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                // compare_aso();\r\n\r\n                                // if (aso_1 == 0)\r\n                                //  {\r\n                                //  richTextBox1.Text = richTextBox1.Text.Trim()\u002B\u0022 VISITANTE \u0022;\r\n\r\n                                if (richTextBox8.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox8.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox10.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox10.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox11.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox11.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox12.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox12.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox13.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox13.Text = \u0022N/A\u0022;\r\n                                }\r\n                                if (richTextBox14.Text == \u0022\u0022)\r\n                                {\r\n                                    richTextBox14.Text = \u0022N/A\u0022;\r\n                                }\r\n\r\n                                maskedTextBox1.Visible = false;\r\n                                maskedTextBox2.Visible = false;\r\n                                maskedTextBox3.Visible = false;\r\n                                maskedTextBox4.Visible = false;\r\n                                maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                read_write();\r\n                                confere = 1;\r\n                                lb4.Visible = true;\r\n                                label5.Visible = true;\r\n                                panel10.Visible = true;\r\n                                label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                //\r\n                                // CarregarPlanilha2();\r\n                                carrega_planilha2_txt();\r\n                                //  create_qrcode();\r\n                                // create_qrcode_new();\r\n                                create_qrcode_invited_new();\r\n                                print_qrcode();\r\n\r\n                                ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                startInfo2.RedirectStandardOutput = true;\r\n                                startInfo2.UseShellExecute = false;\r\n                                // Do not create the black window.\r\n                                startInfo2.CreateNoWindow = true;\r\n                                startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                Process.Start(startInfo2);\r\n\r\n                                /// }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void create_qrcode_invited_new()\r\n        {\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n\r\n            label5.Text = \u0022 \u0022;\r\n            label28.Text = \u0022 \u0022;\r\n            label30.Text = \u0022 \u0022;\r\n            label31.Text = \u0022 \u0022;\r\n            panel4.BackColor = Color.White;\r\n            panel11.Visible = false;\r\n            panel4.Visible = true;\r\n\r\n            label5.Text = richTextBox2.Text;\r\n            label28.Text = \u0022Vessel: \u0022 \u002B comboBox1.Text;\r\n            label30.Text = richTextBox9.Text;\r\n            lb4.Text = richTextBox16.Text; ;\r\n            label31.Text = \u0022De: \u0022 \u002B data_new;\r\n            label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n\r\n            if (richTextBox15.Text != \u0022\u0022)\r\n            {\r\n                try\r\n                {\r\n                    path2 = richTextBox15.Text;\r\n                    subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                    path3 = subs2[5];\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                path3 = \u0022.\u0022;\r\n            }\r\n\r\n\r\n\r\n            //   richTextBox1.Text = \u0022 VISITANTE  \u0022 \u002B richTextBox1.Text;\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B richTextBox1.Text \u002B \u0022 \\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n            this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n            initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n            final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n            // MessageBox.Show(data2);\r\n            Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n            criptografia.Key = \u0022Etec2017\u0022; // chave\r\n            data2 = criptografia.Encrypt(data2.ToString());\r\n            Bitmap bmp = new Bitmap(GerarQRCode(300, 300, data2));\r\n            pictureBox1.Image = bmp;\r\n        }\r\n        private void create_qrcode_new()\r\n        {\r\n\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n\r\n            label5.Text = \u0022 \u0022;\r\n            label28.Text = \u0022 \u0022;\r\n            label30.Text = \u0022 \u0022;\r\n            label31.Text = \u0022 \u0022;\r\n            panel4.BackColor = Color.White;\r\n            panel11.Visible = false;\r\n            panel4.Visible = true;\r\n\r\n            label5.Text = richTextBox2.Text;\r\n            label28.Text = \u0022Vessel: \u0022 \u002B comboBox1.Text;\r\n            label30.Text = richTextBox9.Text;\r\n            lb4.Text = richTextBox16.Text; ;\r\n            label31.Text = \u0022De: \u0022 \u002B data_new;\r\n            label32.Text = \u0022A:    \u0022 \u002B data2_new;\r\n\r\n\r\n            if (richTextBox15.Text != \u0022\u0022)\r\n            {\r\n                try\r\n                {\r\n                    path2 = richTextBox15.Text;\r\n                    subs2 = path2.Split(\u0027/\u0027);\r\n\r\n                    path3 = subs2[5];\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                path3 = \u0022.\u0022;\r\n            }\r\n\r\n\r\n\r\n\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B richTextBox1.Text \u002B \u0022\\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n            this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n            initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n            final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n\r\n\r\n            QRCodeEncryptor = new QRCodeEncryptor();\r\n            string originalText = data2;\r\n\r\n            // Criptografa o texto\r\n            string encryptedText = QRCodeEncryptor.EncryptQRCode(originalText);\r\n            // Console.WriteLine(\u0022Texto criptografado: \u0022 \u002B encryptedText);\r\n\r\n            // Descriptografa o texto\r\n            string decryptedText = QRCodeEncryptor.DecryptQRCode(encryptedText);\r\n            // Console.WriteLine(\u0022Texto descriptografado: \u0022 \u002B decryptedText);\r\n\r\n\r\n            Criptografia criptografia = new Criptografia(CryptProvider.RC2);\r\n            criptografia.Key = \u0022Etec2017\u0022; // chave\r\n            data2 = criptografia.Encrypt(data2.ToString());\r\n            Bitmap bmp = new Bitmap(GerarQRCode(300, 300, data2));\r\n            pictureBox1.Image = bmp;\r\n        }\r\n        //bool a = false;\r\n        bool id_existe = false;\r\n        private void button2_Click(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n\r\n\r\n            checa_host_ = false;\r\n\r\n                Boolean tempo = false;\r\n                if (dateTimePicker1.Visible == true)\r\n                {\r\n                    if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                    {\r\n                        tempo = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        tempo = false;\r\n                        MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                    }\r\n                }\r\n\r\n                if (dateTimePicker1.Visible == false)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                if (tempo == true)\r\n                {\r\n                    timer10.Enabled = false;\r\n                    timer12.Enabled = false;\r\n\r\n                /*\r\n                    ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                    startInfo.RedirectStandardOutput = true;\r\n                    startInfo.UseShellExecute = false;\r\n                    // Do not create the black window.\r\n                    startInfo.CreateNoWindow = true;\r\n                    startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                    Process.Start(startInfo);\r\n                */\r\n                    check_id_onboard();\r\n\r\n                    if (id_onboard == false)\r\n                    {\r\n                        if (dateTimePicker1.Visible == true)\r\n                        {\r\n                            richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                            richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        }\r\n\r\n\r\n                        alterado();\r\n                        System.Threading.Thread.Sleep(2000);\r\n                        compare_id();\r\n                        check_if_exist_id();\r\n\r\n                        if (id_exist == true)\r\n                        {\r\n\r\n                            //  MessageBox.Show(\u0022id existe\u0022);\r\n                            richTextBox10.Text = maskedTextBox1.Text;\r\n                            richTextBox11.Text = maskedTextBox2.Text;\r\n                            richTextBox12.Text = maskedTextBox3.Text;\r\n                            richTextBox13.Text = maskedTextBox4.Text;\r\n                            richTextBox14.Text = maskedTextBox5.Text;\r\n                            textBox13.Text = richTextBox1.Text;\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022\u0022;\r\n\r\n                            if (band == 0)\r\n                            {\r\n                                button2.Text = Label_Create_QRcode[0];\r\n                            }\r\n                            else\r\n                            {\r\n                                button2.Text = Label_Create_QRcode[1];\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                            // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                            // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                            if (resultado == 0)\r\n                            {\r\n                                if (textBox7.SelectionLength \u003E= 0)\r\n                                {\r\n                                    // textBox7.Focus();\r\n                                    // textBox7.Text = \u0022\u0022;\r\n                                }\r\n                                // dataGridView1.Visible = false;\r\n                                if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                    \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                                {\r\n\r\n\r\n\r\n                                    compare_aso();\r\n\r\n                                    if (aso_1 == 0)\r\n                                    {\r\n\r\n                                        if (richTextBox8.Text == \u0022\u0022)\r\n                                        {\r\n                                            richTextBox8.Text = \u0022N/A\u0022;\r\n                                        }\r\n\r\n                                        maskedTextBox1.Visible = false;\r\n                                        maskedTextBox2.Visible = false;\r\n                                        maskedTextBox3.Visible = false;\r\n                                        maskedTextBox4.Visible = false;\r\n                                        maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                        read_write();\r\n                                        confere = 1;\r\n                                        lb4.Visible = true;\r\n                                        label5.Visible = true;\r\n                                        panel10.Visible = true;\r\n                                        label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                        qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                        //\r\n                                        //  CarregarPlanilha2();\r\n                                        carrega_planilha2_txt();\r\n                                        //  create_qrcode();\r\n                                        create_qrcode_new();\r\n                                        print_qrcode();\r\n\r\n                                        ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                        startInfo2.RedirectStandardOutput = true;\r\n                                        startInfo2.UseShellExecute = false;\r\n                                        // Do not create the black window.\r\n                                        startInfo2.CreateNoWindow = true;\r\n                                        startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                        Process.Start(startInfo2);\r\n\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                    //\r\n                                    //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                    //  atualiza_compartilhamento();\r\n\r\n                                    // \r\n\r\n                                    // else\r\n                                    //  {\r\n                                    //  MessageBox.Show(id_check[band]);\r\n                                    //  }\r\n                                    checado = 0;\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    if (band == 0)\r\n                                    {\r\n                                        MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                    }\r\n\r\n                                    if (band == 1)\r\n                                    {\r\n                                        MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n\r\n                            if (resultado == 1)\r\n                            {\r\n                                MessageBox.Show(\u0022ID duplicated\u0022);\r\n                            }\r\n                            textBox7.Focus();\r\n                            textBox7.Text = \u0022 \u0022;\r\n                        }\r\n                        ok_but2 = false;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                        id_onboard = false;\r\n                    }\r\n                }\r\n                rec = true;\r\n                timer10.Enabled = true;\r\n                timer12.Enabled = true;\r\n            checa_host_ = true;\r\n\r\n        }\r\n        private void imprime_novo()\r\n        {\r\n\r\n\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                check_id_onboard();\r\n\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    alterado();\r\n                    System.Threading.Thread.Sleep(2000);\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n\r\n                        //  MessageBox.Show(\u0022id existe\u0022);\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 richTextBox6.Text != \u0022\u0022 \u0026\u0026 richTextBox7.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022 \u0026\u0026 richTextBox6.Text != \u0022 \u0022 \u0026\u0026 richTextBox7.Text != \u0022 \u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n\r\n                                    if (richTextBox8.Text == \u0022\u0022)\r\n                                    {\r\n                                        richTextBox8.Text = \u0022N/A\u0022;\r\n                                    }\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                    read_write();\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                    qr_generate = \u0022Printed Qrcode\u0022;\r\n\r\n                                    //\r\n                                    //  CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    //  create_qrcode();\r\n                                    create_qrcode_new();\r\n                                    print_qrcode();\r\n\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n        private void compare_id()\r\n        {\r\n            try\r\n            {\r\n                String l = \u0022\u0022;\r\n                bool ESIM = false;\r\n                bool dois = false;\r\n                bool tres = false;\r\n                string nume = \u0022\u0022;\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                id_1 = 0;\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n\r\n                    if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                    {\r\n\r\n                        l = lines[i].Split(\u0027:\u0027)[9].Trim();\r\n                        if (lines[i].Split(\u0027:\u0027)[1].Trim() != richTextBox16.Text.Trim())\r\n                        {\r\n                            MessageBox.Show(\u0022O N\u00DAMERO DA IDENTIDADE  * \u0022 \u002B lines[i].Split(\u0027:\u0027)[9].Trim() \u002B \u0022 *  J\u00C1 EST\u00C1 CADASTRADO NO ACESSO DE N\u00DAMERO \u0022 \u002B lines[i].Split(\u0027:\u0027)[1].Trim());\r\n                        }\r\n                        ESIM = true;\r\n                        richTextBox4.Text = lines[int.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                        string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B local22.Trim();\r\n\r\n                        string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                        text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                        File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        //  MessageBox.Show(\u0022 CADASTRO REALIZADO COM SUCESSO, A IDENTIDADE N\u00C3O FOI ALTERADA POIS J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                        break;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        ESIM = false;\r\n\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n                if (ESIM == false)\r\n                {\r\n                    if (local1val == 1)\r\n                    {\r\n                        local22 = place1[band];\r\n\r\n                    }\r\n                    if (local2val == 1)\r\n                    {\r\n                        local22 = place2[band];\r\n\r\n                    }\r\n                    if (local4val == 1)\r\n                    {\r\n                        local22 = place4[band];\r\n\r\n                    }\r\n                    id_1 = 1;\r\n                    string[] lines2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    if (richTextBox4.Text.Trim() != l)\r\n                    {\r\n\r\n                        //   int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                        //   richTextBox16.Text = (Int32.Parse(label3.Text) \u002B 1).ToString();\r\n\r\n                        string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : NR-10 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : NR-33 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : NR-35 : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text \u002B \u0022 :\u0022 \u002B local22 \u002B \u0022 :\u0022 \u002B richTextBox15.Text;\r\n\r\n                        string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                        // try\r\n                        // {\r\n                        text = text.Replace(lines2[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                        File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                        //  }\r\n                        //   catch\r\n                        //{\r\n                        //     MessageBox.Show(\u0022UTILIZE A OP\u00C7\u00C3P CADASTRAR ANTES DE IMPRIMIR\u0022);\r\n                        //  }\r\n                        //  MessageBox.Show(\u0022CADASTRO REALIZADO COM SUCESSO\u0022);\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                    }\r\n                }\r\n\r\n                timer10.Enabled = true;\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void button29_Click(object sender, EventArgs e)\r\n        {\r\n            checa_host_ = false;\r\n            rec = false;\r\n            Boolean tempo2 = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo2 = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo2 = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo2 = true;\r\n            }\r\n            if (tempo2 == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n                ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n                Process.Start(startInfo);\r\n                */\r\n\r\n                string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                bool id_ok = false;\r\n                for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n                {\r\n\r\n                    if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                    {\r\n                        id_ok = true;\r\n                        MessageBox.Show(\u0022J\u00C1 EXISTE UM CADASTRO COM ESTA IDENTIDADE\u0022);\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                if (id_ok == false)\r\n                {\r\n                    check_id_onboard();\r\n                    if (id_onboard == false)\r\n                    {\r\n\r\n\r\n\r\n\r\n\r\n                        tempo = 0;\r\n\r\n                        //timer4.Stop();\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n                        // \r\n                        //  if (textBox7.SelectionLength \u003E= 0)\r\n                        // {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n                        // acha_palavra_txt2();\r\n\r\n\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox2.Text != \u0022 \u0022 \u0026\u0026 richTextBox3.Text != \u0022 \u0022 \u0026\u0026 richTextBox4.Text != \u0022 \u0022 \u0026\u0026 comboBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox8.Text != \u0022 \u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022)  //  /  /\r\n                            {\r\n                                //compare_id();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n                                    if (richTextBox8.Text == \u0022\u0022)\r\n                                    {\r\n                                        richTextBox8.Text = \u0022N/A\u0022;\r\n                                    }\r\n\r\n                                    read_write();\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n                                    // f\r\n\r\n\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n                                    qr_generate = \u0022registered\u0022;\r\n                                    cad = true;\r\n                                  //  CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    create_qrcode_new();\r\n\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n\r\n\r\n                                    richTextBox1.Text = \u0022\u0022;\r\n                                    richTextBox2.Text = \u0022\u0022;\r\n                                    richTextBox3.Text = \u0022\u0022;\r\n                                    richTextBox4.Text = \u0022\u0022;\r\n                                    richTextBox6.Text = \u0022\u0022;\r\n                                    richTextBox7.Text = \u0022\u0022;\r\n                                    richTextBox8.Text = \u0022\u0022;\r\n                                    richTextBox10.Text = \u0022\u0022;\r\n                                    richTextBox11.Text = \u0022\u0022;\r\n                                    richTextBox12.Text = \u0022\u0022;\r\n                                    richTextBox13.Text = \u0022\u0022;\r\n                                    richTextBox14.Text = \u0022\u0022;\r\n                                    richTextBox15.Text = \u0022\u0022;\r\n                                    richTextBox16.Text = \u0022\u0022;\r\n                                    maskedTextBox1.Text = \u0022\u0022;\r\n                                    maskedTextBox2.Text = \u0022\u0022;\r\n                                    maskedTextBox3.Text = \u0022\u0022;\r\n                                    maskedTextBox4.Text = \u0022\u0022;\r\n                                    maskedTextBox5.Text = \u0022\u0022;\r\n                                    if (band == 0)\r\n                                    {\r\n                                        MessageBox.Show(Label_cadastro[0]);\r\n                                    }\r\n                                    if (band == 1)\r\n                                    {\r\n                                        MessageBox.Show(Label_cadastro[1]);\r\n                                    }\r\n\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                    checado = 0;\r\n                                }\r\n                                //  MessageBox.Show(id_check[band]);\r\n                            }\r\n\r\n\r\n                            // atualiza_compartilhamento();\r\n\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO!, S\u00D3 \u00C9 PERMITIDO IMPRIMIR OU CADASTRAR SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                    }\r\n                }\r\n            }\r\n            ///  timer4.Start();\r\n            rec = true;\r\n      \r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n            checa_host_ = true;\r\n        }\r\n\r\n        private void button4_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            panel15.Visible = true;\r\n\r\n\r\n\r\n        }\r\n\r\n        private void button6_Click_1(object sender, EventArgs e)\r\n        {\r\n            // panel8.Location= new Point(Location.X,Location.Y);//Point(521,155);\r\n            panel8.Size = new Size(490, 353); //new Size(1030, 600);\r\n            wi\u002B\u002B;\r\n            if (wi == 1)\r\n            {\r\n                //online = true;\r\n                lview_AP.Items.Clear();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n\r\n\r\n                panel8.Visible = true;\r\n            }\r\n            if (wi == 2)\r\n            {\r\n                // online = false;\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                panel8.Visible = false;\r\n\r\n                wi = 0;\r\n            }\r\n\r\n            // System.Windows.Forms.Application.Exit();\r\n            //   this.Close();\r\n        }\r\n        int inp = 0;\r\n        public void monitor()\r\n        {\r\n            // MessageBox.Show(valores.ToString());\r\n\r\n            pictureBox4.Visible = false;\r\n\r\n\r\n            if (new FileInfo(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Length \u003E= 0)\r\n            {\r\n                inp\u002B\u002B;\r\n                if (inp == 1)\r\n                {\r\n                    // panel6.Visible = true;\r\n                    mostra_conteudo_txt();\r\n                    comboBox2.SelectedIndex = 0;\r\n\r\n                    //  comboBox2.Text = \u0022ok\u0022;\r\n\r\n                    comboBox2.Visible = true;\r\n                    beep();\r\n                    beep();\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                if (inp == 2)\r\n                {\r\n\r\n                    //if (textBox7.SelectionLength \u003E= 0)\r\n                    // {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                    // }\r\n                    panel6.Visible = false;\r\n                    comboBox2.Visible = false;\r\n                    inp = 0;\r\n                }\r\n            }\r\n            textBox7.Focus();\r\n            textBox7.Text = \u0022\u0022;\r\n\r\n            //this.Close();\r\n        }\r\n\r\n        private void button19_Click(object sender, EventArgs e)\r\n        {\r\n            monitor();\r\n\r\n        }\r\n\r\n        private void button21_Click(object sender, EventArgs e)\r\n        {\r\n            //panel16.Visible = true;\r\n            // ler_linha();\r\n            //CloseExcel();\r\n            ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo2.RedirectStandardOutput = true;\r\n            startInfo2.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo2.CreateNoWindow = true;\r\n            startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo2);\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button22_Click(object sender, EventArgs e)\r\n        {\r\n            CloseExcel();\r\n            this.Close();\r\n        }\r\n\r\n\r\n\r\n        private void check_if_exist_number2()\r\n        {\r\n\r\n            // richTextBox17.Text = \u0022\u0022;\r\n            //    label37.Text = \u0022Bloquear\u0022;\r\n            int rich1 = Int16.Parse(richTextBox18.Text.Trim()) - 1;\r\n            string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n            //  MessageBox.Show(secondLine);\r\n            //string checline = secondLine.Trim();\r\n            if (secondLine2 != null)\r\n            {\r\n\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich16 = Int16.Parse(richTextBox18.Text.Trim()) - 1;\r\n                int lab3 = Int16.Parse(label3.Text);\r\n                if (rich16 \u003C= lab3)\r\n                {\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich16);\r\n\r\n                    //  MessageBox.Show(secondLine);\r\n                    //string checline = secondLine.Trim();\r\n\r\n                    try\r\n                    {\r\n\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            button2.Enabled = true;\r\n                            // richTextBox15.Text = \u0022\u0022;\r\n                            /*\r\n                             richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                             richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                             richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                             richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                             richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            */\r\n\r\n\r\n                            //Number : 1 : Name : GUSTAVO MAGALHAES : Compay : DOF :Funcition:  GERENTE DE PROJETO  :Id: 8866640719 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 07/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : : :Conv\u00E9s :14/10/2022 :28/10/2022 :.\r\n\r\n                            richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                            richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                            richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                            richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n\r\n                          //  comboBox1.Items.Clear();\r\n                          //  comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                          //  comboBox1.SelectedIndex = 0;\r\n\r\n                            richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                            {\r\n                                richTextBox8.Text = \u0022N/A\u0022;\r\n                            }\r\n\r\n                            maskedTextBox1.Visible = true;\r\n                            maskedTextBox2.Visible = true;\r\n                            maskedTextBox3.Visible = true;\r\n                            maskedTextBox4.Visible = true;\r\n                            maskedTextBox5.Visible = true;\r\n                            // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            // maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            try\r\n                            {\r\n\r\n                                string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n\r\n                                maskedTextBox1.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                // MessageBox.Show(teste);\r\n                                maskedTextBox2.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n\r\n                            if (richTextBox3.Text != \u0022\u0022)\r\n                            {\r\n                                //  comboBox1.Items.Clear();\r\n                                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                                string x = sr.ReadToEnd();\r\n                                string[] y = x.Split(\u0027\\n\u0027);\r\n                                foreach (string s in y)\r\n                                {\r\n                                    comboBox1.Items.Add(s);\r\n                                }\r\n                                sr.Close();\r\n                            }\r\n\r\n\r\n\r\n\r\n                            maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                            maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                            maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                            maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                            maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                            {\r\n                                // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            try\r\n                            {\r\n                                richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33].Trim();\r\n                            }\r\n                            catch\r\n                            {\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n                            }\r\n                            richTextBox6.Visible = true;\r\n                            richTextBox7.Visible = true;\r\n                            dateTimePicker1.Visible = false;\r\n                            dateTimePicker2.Visible = false;\r\n\r\n                            try\r\n                            {\r\n\r\n                                richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n                                String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n\r\n                                label34.Text = local222;\r\n                                if (local222 == place1[band])\r\n                                {\r\n                                    local1.Checked = true;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place2[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = true;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place4[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = true;\r\n                                }\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                        }\r\n\r\n                        string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n                        if (sec == \u0022Bloqueado\u0022)\r\n                        {\r\n                            button2.Enabled = false;\r\n                            button17.Enabled = false;\r\n                            //  button5.Image = ((System.Drawing.Image)(resources.GetObject(\u0022_bButton.Image\u0022)));\r\n                            label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                            textbloc = richTextBox17.Text.Trim();\r\n                            textbloc2 = richTextBox17.Text.Trim();\r\n                            //label37.Text = sec;\r\n                            btloc.Visible = true;\r\n                            button7.Visible = false;\r\n                            label37.Visible = true;\r\n                            btloc.Image = Properties.Resources.lock0;\r\n                            ////  btloc.Text = \u0022Bloqueado\u0022;\r\n                            CHLocked.Text = \u0022Desbloquear\u0022;\r\n                            //  textbloc = \u0022\u0022;\r\n                            //  textbloc2 = \u0022\u0022;\r\n                        }\r\n                        else\r\n                        {\r\n                            richTextBox17.Text = \u0022\u0022;\r\n                            //  label37.Text = \u0022Desbloqueado\u0022;\r\n                            CHLocked.Text = \u0022Bloquear\u0022;\r\n                            btloc.Visible = false;\r\n                            button7.Visible = true;\r\n                            button2.Enabled = true;\r\n                            button17.Enabled = true;\r\n                            //  btloc.Text = \u0022 \u0022;\r\n                            // btloc.Image = Properties.Resources.lock2;\r\n                        }\r\n                        String pass11 = secondLine.Split(\u0027:\u0027)[11];\r\n                    }\r\n\r\n                    catch\r\n                    {\r\n                        // MessageBox.Show(\u0022N\u00E3o h\u00E1 cadastro com este N\u00FAmero\u0022);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //  button2.Enabled = true;\r\n                //   button17.Enabled = true;\r\n                //  button29.Enabled = false;\r\n                // richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                //panel11.Size = new Size(360, 355);\r\n                //panel11.Location = new System.Drawing.Point(95, 150);\r\n                //pictureBox7.Size = new Size(330, 320);\r\n                // pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n                try\r\n                {\r\n\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                id_exist = false;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                maskedTextBox1.Text = \u0022\u0022;\r\n                maskedTextBox2.Text = \u0022\u0022;\r\n                maskedTextBox3.Text = \u0022\u0022;\r\n                maskedTextBox4.Text = \u0022\u0022;\r\n                maskedTextBox5.Text = \u0022\u0022;\r\n                maskedTextBox1.Visible = false;\r\n                maskedTextBox2.Visible = false;\r\n                maskedTextBox3.Visible = false;\r\n                maskedTextBox4.Visible = false;\r\n                maskedTextBox5.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n\r\n\r\n                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n            }\r\n        }\r\n\r\n        private void check_if_exist_number()\r\n        {\r\n\r\n            // richTextBox17.Text = \u0022\u0022;\r\n            //    label37.Text = \u0022Bloquear\u0022;\r\n            int rich1 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n            string secondLine2 = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich1);\r\n            //  MessageBox.Show(secondLine);\r\n            //string checline = secondLine.Trim();\r\n            if (secondLine2 != null)\r\n            {\r\n\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich16 = Int16.Parse(richTextBox16.Text.Trim()) - 1;\r\n                int lab3 = Int16.Parse(label3.Text);\r\n                if (rich16 \u003C= lab3)\r\n                {\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(rich16);\r\n\r\n                    //  MessageBox.Show(secondLine);\r\n                    //string checline = secondLine.Trim();\r\n\r\n                    try\r\n                    {\r\n\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            button2.Enabled = true;\r\n                            // richTextBox15.Text = \u0022\u0022;\r\n                            /*\r\n                             richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                             richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                             richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                             richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                             richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            */\r\n\r\n\r\n                            //Number : 1 : Name : GUSTAVO MAGALHAES : Compay : DOF :Funcition:  GERENTE DE PROJETO  :Id: 8866640719 : E-mail : cristiano.engenharia.ac@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 07/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : : :Conv\u00E9s :14/10/2022 :28/10/2022 :.\r\n\r\n                            richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                            richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                            richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                            richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n                            richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                            if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                            {\r\n                                richTextBox8.Text = \u0022N/A\u0022;\r\n                            }\r\n\r\n                            maskedTextBox1.Visible = true;\r\n                            maskedTextBox2.Visible = true;\r\n                            maskedTextBox3.Visible = true;\r\n                            maskedTextBox4.Visible = true;\r\n                            maskedTextBox5.Visible = true;\r\n                            // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            // maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            try\r\n                            {\r\n\r\n                                string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n\r\n                                maskedTextBox1.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                //  MessageBox.Show(ok);\r\n                                teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                // MessageBox.Show(teste);\r\n                                maskedTextBox2.Text = teste;\r\n\r\n                                if (ok == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n\r\n                            comboBox1.Items.Clear();\r\n                            comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                            comboBox1.SelectedIndex = 0;\r\n\r\n\r\n                            if (richTextBox3.Text != \u0022\u0022)\r\n                            {\r\n                                //  comboBox1.Items.Clear();\r\n                                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                                string x = sr.ReadToEnd();\r\n                                string[] y = x.Split(\u0027\\n\u0027);\r\n                                foreach (string s in y)\r\n                                {\r\n                                    comboBox1.Items.Add(s);\r\n                                }\r\n                                sr.Close();\r\n                            }\r\n\r\n\r\n\r\n\r\n                            maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                            maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                            maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                            maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                            maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                            {\r\n                                // maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                            }\r\n                            if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                            {\r\n                                maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                            }\r\n\r\n                            try\r\n                            {\r\n                                richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33].Trim();\r\n                            }\r\n                            catch\r\n                            {\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n                            }\r\n                            richTextBox6.Visible = true;\r\n                            richTextBox7.Visible = true;\r\n                            dateTimePicker1.Visible = false;\r\n                            dateTimePicker2.Visible = false;\r\n\r\n                            try\r\n                            {\r\n\r\n                                richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n                                String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n\r\n                                label34.Text = local222;\r\n                                if (local222 == place1[band])\r\n                                {\r\n                                    local1.Checked = true;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place2[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = true;\r\n                                    local4.Checked = false;\r\n                                }\r\n                                if (local222 == place4[band])\r\n                                {\r\n                                    local1.Checked = false;\r\n                                    local2.Checked = false;\r\n                                    local4.Checked = true;\r\n                                }\r\n                            }\r\n                            catch\r\n                            {\r\n\r\n                            }\r\n                        }\r\n\r\n                        string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n                        if (sec == \u0022Bloqueado\u0022)\r\n                        {\r\n                            button2.Enabled = false;\r\n                            button17.Enabled = false;\r\n                            //  button5.Image = ((System.Drawing.Image)(resources.GetObject(\u0022_bButton.Image\u0022)));\r\n                            label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                            textbloc = richTextBox17.Text.Trim();\r\n                            textbloc2 = richTextBox17.Text.Trim();\r\n                            //label37.Text = sec;\r\n                            btloc.Visible = true;\r\n                            button7.Visible = false;\r\n                            label37.Visible = true;\r\n                            btloc.Image = Properties.Resources.lock0;\r\n                            ////  btloc.Text = \u0022Bloqueado\u0022;\r\n                            CHLocked.Text = \u0022Desbloquear\u0022;\r\n                            //  textbloc = \u0022\u0022;\r\n                            //  textbloc2 = \u0022\u0022;\r\n                        }\r\n                        else\r\n                        {\r\n                            richTextBox17.Text = \u0022\u0022;\r\n                            //  label37.Text = \u0022Desbloqueado\u0022;\r\n                            CHLocked.Text = \u0022Bloquear\u0022;\r\n                            btloc.Visible = false;\r\n                            button7.Visible = true;\r\n                            button2.Enabled = true;\r\n                            button17.Enabled = true;\r\n                            //  btloc.Text = \u0022 \u0022;\r\n                            // btloc.Image = Properties.Resources.lock2;\r\n                        }\r\n                        String pass11 = secondLine.Split(\u0027:\u0027)[11];\r\n                    }\r\n\r\n                    catch\r\n                    {\r\n                        // MessageBox.Show(\u0022N\u00E3o h\u00E1 cadastro com este N\u00FAmero\u0022);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n                //  button2.Enabled = true;\r\n                //   button17.Enabled = true;\r\n              //  button29.Enabled = false;\r\n                // richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                //panel11.Size = new Size(360, 355);\r\n                //panel11.Location = new System.Drawing.Point(95, 150);\r\n                //pictureBox7.Size = new Size(330, 320);\r\n                // pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n                try\r\n                {\r\n\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                id_exist = false;\r\n                richTextBox16.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                richTextBox4.Text = \u0022\u0022;\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                richTextBox10.Text = \u0022\u0022;\r\n                richTextBox11.Text = \u0022\u0022;\r\n                richTextBox12.Text = \u0022\u0022;\r\n                richTextBox13.Text = \u0022\u0022;\r\n                richTextBox14.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                maskedTextBox1.Text = \u0022\u0022;\r\n                maskedTextBox2.Text = \u0022\u0022;\r\n                maskedTextBox3.Text = \u0022\u0022;\r\n                maskedTextBox4.Text = \u0022\u0022;\r\n                maskedTextBox5.Text = \u0022\u0022;\r\n                maskedTextBox1.Visible = false;\r\n                maskedTextBox2.Visible = false;\r\n                maskedTextBox3.Visible = false;\r\n                maskedTextBox4.Visible = false;\r\n                maskedTextBox5.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n\r\n\r\n                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox16_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                label37.Text = \u0022\u0022;\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                check_if_exist_number();\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void button7_Click(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE BLOQUEAR O ACESSO?\u0022, \u0022BLOQUEIO DE ACESSO\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    bb = \u0022Bloqueado\u0022;\r\n                    bloqueio();\r\n                    //  richTextBox17.Text = \u0022\u0022;\r\n                    btloc.Image = Properties.Resources.lock0;\r\n                    btloc.Visible = true;\r\n                    button7.Visible = false;\r\n                    richTextBox17.Text = \u0022\u0022;\r\n                    button2.Enabled = false;\r\n                    button17.Enabled = false;\r\n                   \r\n                    //myThread.Abort();\r\n                 //   checa_host();\r\n                    // MessageBox.Show(\u0022button7_Click\u0022);\r\n                    // atualiza_compartilhamento();\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022FAVOR JUSTIFICAR O MOTIVO DO BLOQUEIO\u0022);\r\n            }\r\n\r\n        }\r\n\r\n        private void btloc_Click(object sender, EventArgs e)\r\n        {\r\n\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n\r\n                if (r7 == true)\r\n                {\r\n                    DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE DESBLOQUEAR O ACESSO ? \u0022, \u0022DESBLOQUEIO DE ACESSO\u0022, MessageBoxButtons.YesNo);\r\n                    if (dialogResult == DialogResult.Yes)\r\n                    {\r\n                        bb = \u0022Desbloqueado\u0022;\r\n                        bloqueio();\r\n                        //  richTextBox17.Text = \u0022\u0022;\r\n                        btloc.Visible = false;\r\n                        button7.Visible = true;\r\n                        button2.Enabled = true;\r\n                        button17.Enabled = true;\r\n                        richTextBox17.Text = \u0022\u0022;\r\n                        //myThread.Abort();\r\n                     //   checa_host();\r\n                   //    MessageBox.Show(\u0022btloc_Click\u0022);\r\n                        // atualiza_compartilhamento();\r\n                    }\r\n                    else if (dialogResult == DialogResult.No)\r\n                    {\r\n                        //   btloc.Image = Properties.Resources.lock0;\r\n                        //  btloc.Image = Properties.Resources.lock2;\r\n\r\n                    }\r\n                    r7 = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022FAVOR JUSTIFICAR O MOTIVO DO DESBLOQUEIO\u0022);\r\n            }\r\n\r\n            /*\r\n\r\n            textbloc = richTextBox17.Text.Trim();\r\n            bt1\u002B\u002B;\r\n            if(bt1== 1)\r\n            {\r\n\r\n\r\n              //  btloc.Image = Properties.Resources.lock0;\r\n              //  btloc.Text = \u0022Bloqueado\u0022;\r\n            }\r\n            if (bt1 \u003E= 2)\r\n            {\r\n                if (textbloc!= textbloc2 \u0026\u0026 richTextBox17.Text != \u0022\u0022)\r\n                {\r\n\r\n                    btloc.Image = Properties.Resources.lock2;\r\n\r\n                    \r\n                    DialogResult dialogResult = MessageBox.Show(\u0022Sure\u0022, \u0022Some Title\u0022, MessageBoxButtons.YesNo);\r\n                    if (dialogResult == DialogResult.Yes)\r\n                    {\r\n                        bloqueio();\r\n                        richTextBox17.Text = \u0022\u0022;\r\n                    }\r\n                    else if (dialogResult == DialogResult.No)\r\n                    {\r\n                        btloc.Image = Properties.Resources.lock0;\r\n\r\n                        textbloc = textbloc2;\r\n                        richTextBox17.Text = textbloc2;\r\n                    }\r\n\r\n                    //  r7 = false;\r\n                    bt1 = 0;\r\n                }\r\n             \r\n            }\r\n            */\r\n        }\r\n        int get_pic = 0;\r\n        private void button15_Click(object sender, EventArgs e)\r\n        {\r\n            try\r\n            {\r\n\r\n                get_pic\u002B\u002B;\r\n                if (get_pic == 1)\r\n                {\r\n                    if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022)\r\n                    {\r\n                        try\r\n                        {\r\n\r\n                            button15.Text = \u0022Press again to take a picture\u0022;\r\n                            // if(cboCamera.)\r\n                            //  if(cboCamera.Items(1)==\u0022teste\u0022)\r\n\r\n                            int iten = cboCamera.Items.Count;\r\n                            if (iten \u003E= 4)\r\n                            {\r\n                                iten = 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                iten = 0;\r\n\r\n                            }\r\n                            //  MessageBox.Show(iten.ToString());\r\n                            videoCaptureDevice = new VideoCaptureDevice(filterInfoCollection[0].MonikerString);\r\n                            videoCaptureDevice.NewFrame \u002B= FinalFrame_NewFrame;\r\n                            videoCaptureDevice.Start();\r\n                            pictureBox7.Image = Properties.Resources.barcode1;\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            MessageBox.Show(\u0022Erro \u0022 \u002B ex.Message);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (get_pic == 2)\r\n                {\r\n\r\n                    if (richTextBox1.Text != \u0022\u0022 \u0026\u0026 richTextBox2.Text != \u0022\u0022 \u0026\u0026 richTextBox3.Text != \u0022\u0022 \u0026\u0026 richTextBox4.Text != \u0022\u0022 \u0026\u0026 comboBox1.Text != \u0022\u0022)\r\n                    {\r\n                        try\r\n                        {\r\n                            if (videoCaptureDevice.IsRunning)\r\n                            {\r\n\r\n                                caminhoImagemSalva2 = @\u0022c:\\compartilhamento\\data_new_picture\\\u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022.jpg\u0022;\r\n                                //caminhoImagemSalva2.\r\n                                pictureBox7.Image.Save(caminhoImagemSalva2, ImageFormat.Jpeg);\r\n\r\n                                copyAll(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022, @\u0022C:\\compartilhamento\\data_picture\\\u0022);\r\n                                //  clearFolder(@\u0022C:\\compartilhamento\\data_new_picture\\\u0022);\r\n                                button15.Text = \u0022Face picture Include\u0022;\r\n                                button15.Visible = false;\r\n\r\n\r\n\r\n                            }\r\n\r\n                            if (videoCaptureDevice.IsRunning)\r\n                            {\r\n                                videoCaptureDevice.Stop();\r\n                                pictureBox7.Image = Properties.Resources.barcode1;\r\n\r\n                            }\r\n                        }\r\n                        catch\r\n                        {\r\n\r\n                        }\r\n                        //myThread.Abort();\r\n                       // checa_host();\r\n                        //  MessageBox.Show(\u0022button15_Click\u0022);\r\n                        // atualiza_compartilhamento();\r\n                    }\r\n\r\n                    get_pic = 0;\r\n                }\r\n\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n\r\n\r\n        }\r\n        private void check_locked()\r\n        {\r\n            string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n            // Start at line number 2 because there is a header\r\n            for (int i = 1; i \u003C lines.Length; i\u002B\u002B)\r\n            {\r\n                // 2 ways to do this:\r\n                if (lines[i].Contains(richTextBox4.Text))\r\n                {\r\n\r\n                    String pass0 = lines[1].Split(\u0027:\u0027)[26];\r\n\r\n                    label37.Text = pass0;\r\n\r\n                    if (label37.Text.Trim() == \u0022Bloqueado\u0022)\r\n                    {\r\n                        String pass1 = lines[1].Split(\u0027:\u0027)[28];\r\n                        richTextBox17.Text = pass1;\r\n                    }\r\n                    //   MessageBox.Show(pass0);\r\n                    // string text3 = lines[i];\r\n                    // string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B label37.Text \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    // string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    // text = text.Replace(text3, text4);\r\n                    // File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n\r\n                }\r\n\r\n\r\n                // or a more structured way:\r\n                //  if (lines[i].Split(\u0027|\u0027)[2].Contains(\u0022ABC\u0022))\r\n                // {\r\n                // Copy it where you want\r\n                // }\r\n            }\r\n        }\r\n        private void ler_linha2()\r\n        {\r\n            criterio = \u0022 \u0022;\r\n            lbResultado.Items.Clear();\r\n            criterio = richTextBox4.Text;\r\n            string[] linhas = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n\r\n\r\n\r\n\r\n            if (richTextBox4.Text.Length \u003E= 7)\r\n            {\r\n                foreach (string linha in linhas)\r\n                {\r\n                    // cri\u002B\u002B;\r\n                    if (linha.Contains(criterio) \u0026\u0026 criterio != \u0022 \u0022)\r\n                    {\r\n                        cri = 1;\r\n                        lbResultado.Items.Add(linha);\r\n                        //  Number: 0 : Name: 2 : Compay: 2 :Funcition: 2  :Id: 22222222222 : E - mail : 2 : Vessel: 2 : Project: 2 : ASO: 2 : NR - 34 : 2 : Vaccine - 1 : 2 : Vaccine - 2 : 2 : Booster vaccine : 2\r\n                        //     Number:  : Name: Cristiano de Araujo Calheiros : Compay: Googlemarine: Funcition: \r\n                        //Engenheiro: Id: 111098414 : E - mail : cristiano.engengaria.ac @gmail.com: Vessel:\r\n                        //Skandi Salvador : Project: Docagem: ASO: 11 / 12 / 23 : NR - 34 : 11 / 12 / 23 :\r\n                        //Vaccine - 1 : 11 / 12 / 23 : Vaccine - 2 : 11 / 12 / 23 : Booster vaccine : 11 / 12 / 23           // Number: 14 : Name: 1 : Compay: 4 :Funcition: 2  :Id: 366666666 : E - mail : 7 : Vessel: 5 : Project: 6 : ASO: 8 : NR - 34 : 9 : Vaccine - 1 : 10 : Vaccine - 2 : 11 : Booster vaccine : 12\r\n                        string[] parts = linha.Split(\u0027:\u0027);\r\n                        string whatIWant0 = parts[1].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant1 = parts[1].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant2 = parts[3].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant3 = parts[5].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant4 = parts[7].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant5 = parts[9].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant6 = parts[11].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant7 = parts[13].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant8 = parts[15].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant9 = parts[17].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant10 = parts[19].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant11 = parts[21].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant12 = parts[23].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                        string whatIWant13 = parts[25].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n                                                              // string whatIWant14 = parts[23].Trim();// \u002B \u0022 \u0022;// \u002B parts[1];\r\n\r\n                        // Name: Googlemarine: Compay: Cristiano calheiros  :Funcition: Engenheiro: Id: 111098888 : E - mail : cristiano.engenharia.ac @gmail.com: Vessel: Skandi Salvador : Project: reparo: ASO: 11 / 02 / 2023 : NR - 34 : 11 / 02 / 2023 : Vaccine - 1 : 11 / 02 / 2023 : Vaccine - 2 : 11 / 02 / 2023 : Booster vaccine : 11 / 02 / 2023\r\n                        richTextBox16.Text = whatIWant0;//.Remove(0, 8);   // number\r\n                        richTextBox2.Text = whatIWant2;//.Remove(0, 6);    //name\r\n                        richTextBox1.Text = whatIWant3; //.Remove(0, 9);   // company\r\n                        richTextBox3.Text = whatIWant4;//.Remove(0, 10);   // function\r\n                        richTextBox4.Text = whatIWant5;//.Remove(0, 4);    //  id\r\n                        richTextBox8.Text = whatIWant6;//.Remove(0, 4);   // e-mail\r\n                                                       //  richTextBox5.Text = whatIWant7;//.Remove(0, 8);    // vessel\r\n                                                       //  richTextBox9.Text = whatIWant8;//.Remove(0, 8);    // projeto\r\n                        richTextBox10.Text = whatIWant9;//.Remove(0, 8);   // aso\r\n                        richTextBox11.Text = whatIWant10;//.Remove(0, 8);   // nr34\r\n                        richTextBox12.Text = whatIWant11;//.Remove(0, 8);  // vaccine 1\r\n                        richTextBox13.Text = whatIWant12;//.Remove(0, 8);  // vaccine 2\r\n                        richTextBox14.Text = whatIWant13;//.Remove(0, 8);  // refo\u00E7o\r\n\r\n\r\n                        maskedTextBox1.Text = richTextBox10.Text;\r\n                        maskedTextBox2.Text = richTextBox11.Text;\r\n                        maskedTextBox3.Text = richTextBox12.Text;\r\n                        maskedTextBox4.Text = richTextBox13.Text;\r\n                        maskedTextBox5.Text = richTextBox14.Text;\r\n                        // richTextBox15.Text = whatIWant13;//.Remove(0, 8);  // refo\u00E7o\r\n\r\n                        check_locked();\r\n                    }\r\n                    else\r\n                    {\r\n                        cri = 0;\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n            if (lbResultado.Items.Count == 0)\r\n            {\r\n                if (confere == 1)\r\n                {\r\n                    escrever_palavra2();\r\n                }\r\n\r\n                richTextBox1.Text = \u0022\u0022;\r\n                richTextBox2.Text = \u0022\u0022;\r\n                richTextBox3.Text = \u0022\u0022;\r\n                // richTextBox4.Text = \u0022\u0022;\r\n                richTextBox8.Text = \u0022\u0022;\r\n                // richTextBox5.Text = \u0022\u0022;\r\n\r\n\r\n\r\n            }\r\n\r\n            confere = 0;\r\n\r\n        }\r\n        private void escrever_palavra2()\r\n        {\r\n\r\n\r\n            string nomeArquivo = @\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022;\r\n            string textoInserir = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022  :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B comboBox1.Text.Trim() \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : NR-10 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : NR-33 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : NR-35 : \u0022 \u002B richTextBox14.Text;\r\n            int numeroLinha = Convert.ToInt32(Linhas);\r\n\r\n            ArrayList linhas = new ArrayList();\r\n\r\n            if (File.Exists(nomeArquivo))\r\n            {\r\n                try\r\n                {\r\n                    rdr = new StreamReader(nomeArquivo);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022O arquivo : \u0022 \u002B nomeArquivo \u002B \u0022 n\u00E3o existe...\u0022);\r\n                return;\r\n            }\r\n            string linha;\r\n\r\n            while ((linha = rdr.ReadLine()) != null)\r\n            {\r\n                try\r\n                {\r\n                    linhas.Add(linha);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    MessageBox.Show(\u0022Erro ao acessar o arquivo : \u0022 \u002B ex.Message);\r\n                    return;\r\n                }\r\n            }\r\n            rdr.Close();\r\n\r\n            if (linhas.Count \u003E numeroLinha)\r\n                linhas.Insert(numeroLinha, textoInserir);\r\n            else\r\n                linhas.Add(textoInserir);\r\n\r\n            StreamWriter wrtr = new StreamWriter(nomeArquivo);\r\n\r\n            foreach (string strNewLine in linhas)\r\n            {\r\n                wrtr.WriteLine(strNewLine);\r\n            }\r\n            wrtr.Close();\r\n            textoInserir = \u0022\u0022;\r\n            // txtArquivo.Text = AbreArquivoTexto(nomeArquivo);\r\n\r\n        }\r\n        private void check_id_onboard()\r\n        {\r\n            try\r\n            {\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                // int rich2 = Int32.Parse(label3.Text);\r\n                // int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n                for (int i = 0; i \u003C Int32.Parse(label27.Text); i\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).ElementAtOrDefault(i);\r\n                    \r\n                    //  MessageBox.Show(secondLine.Split(\u0027:\u0027)[5].Trim() \u002B \u0022//\u0022 \u002B comboBox1.SelectedItem);\r\n                //    string selected = this.comboBox1.SelectedItem.ToString();\r\n                //    label63.Text = selected;\r\n                 //   MessageBox.Show(selected);\r\n\r\n\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[1].Trim() == richTextBox16.Text.Trim())\r\n                        {\r\n                            id_onboard = true;\r\n                            richTextBox16.Text = \u0022\u0022;\r\n                            richTextBox2.Text = \u0022\u0022;\r\n                            richTextBox3.Text = \u0022\u0022;\r\n                            richTextBox4.Text = \u0022\u0022;\r\n                            richTextBox1.Text = \u0022\u0022;\r\n                            richTextBox8.Text = \u0022\u0022;\r\n                            richTextBox10.Text = \u0022\u0022;\r\n                            richTextBox11.Text = \u0022\u0022;\r\n                            richTextBox12.Text = \u0022\u0022;\r\n                            richTextBox13.Text = \u0022\u0022;\r\n                            richTextBox14.Text = \u0022\u0022;\r\n                            richTextBox15.Text = \u0022\u0022;\r\n                            maskedTextBox1.Text = \u0022\u0022;\r\n                            maskedTextBox2.Text = \u0022\u0022;\r\n                            maskedTextBox3.Text = \u0022\u0022;\r\n                            maskedTextBox4.Text = \u0022\u0022;\r\n                            maskedTextBox5.Text = \u0022\u0022;\r\n                            button2.Enabled = false;\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }\r\n                if (label27.Text == \u00220\u0022)\r\n                {\r\n                    id_onboard = false;\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                //  id_onboard = false;\r\n            }\r\n        }\r\n\r\n        private void check_id_onboard2()\r\n        {\r\n            try\r\n            {\r\n                id_onboard2 = false;\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                // int rich2 = Int32.Parse(label3.Text);\r\n                // int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n\r\n                int qtdLinhas = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).Count();\r\n                    for (int i = 0; i \u003C qtdLinhas; i\u002B\u002B)\r\n                    {\r\n\r\n                        string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022).ElementAtOrDefault(i);\r\n                        //  MessageBox.Show(secondLine.Split(\u0027:\u0027)[5].Trim());\r\n                        if (secondLine != null)\r\n                        {\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[1].Trim() == richTextBox16.Text.Trim() \u0026\u0026 secondLine.Split(\u0027:\u0027)[5].Trim() != label63.Text.Trim())\r\n                            {\r\n                                \r\n                                //  MessageBox.Show(\u0022diferente\u0022);\r\n                         \r\n                                id_onboard2 = true;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n               \r\n\r\n            }\r\n            catch\r\n            {\r\n                //  id_onboard = false;\r\n            }\r\n        }\r\n\r\n\r\n        private void check_if_exist_id()\r\n        {\r\n            try\r\n            {\r\n                //  Number: 1 : Name: Cristiano: Compay: Googlemarine: Funcition: Engenheiro: Id: 111098414 : E - mail : 1 : Vessel: Googlemarine: Project: 190603 : ASO: 22 / 02 / 2023 : NR - 34 : 22 / 02 / 2023 : Vaccine - 1 : 22 / 02 / 2023 : Vaccine - 2 : 22 / 02 / 2023 : Booster vaccine : 22 / 02 / 2023 : Bloqueado: GUSTAVO: Falta da quarta dose da vacina\r\n                int rich2 = Int32.Parse(label3.Text);\r\n                int rich4;\r\n                //  int lab3 = Int16.Parse(label3.Text);\r\n                for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(i);\r\n                    if (secondLine != null)\r\n                    {\r\n                        if (secondLine.Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text)\r\n                        {\r\n\r\n                            try\r\n                            {\r\n\r\n                                pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text.ToString() \u002B \u0022.jpg\u0022);\r\n\r\n                            }\r\n                            catch\r\n                            {\r\n                                pictureBox7.LoadAsync(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n                            }\r\n\r\n                            if (ok_but2 == false)\r\n                            {\r\n\r\n                                try\r\n                                {\r\n                                    String local222 = secondLine.Split(\u0027:\u0027)[30].Trim();\r\n                                    label34.Text = local222;\r\n                                    if (local222 == place1[band])\r\n                                    {\r\n                                        local1.Checked = true;\r\n                                        local2.Checked = false;\r\n                                        local4.Checked = false;\r\n                                    }\r\n                                    if (local222 == place2[band])\r\n                                    {\r\n                                        local1.Checked = false;\r\n                                        local2.Checked = true;\r\n                                        local4.Checked = false;\r\n                                    }\r\n                                    if (local222 == place4[band])\r\n                                    {\r\n                                        local1.Checked = false;\r\n                                        local2.Checked = false;\r\n                                        local4.Checked = true;\r\n                                    }\r\n                                    richTextBox6.Text = secondLine.Split(\u0027:\u0027)[31];\r\n                                    richTextBox7.Text = secondLine.Split(\u0027:\u0027)[32];\r\n\r\n                                }\r\n                                catch\r\n                                {\r\n\r\n                                }\r\n\r\n                                /*\r\n                                richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                                */\r\n\r\n\r\n                                richTextBox2.Text = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                                richTextBox3.Text = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                                richTextBox4.Text = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                                richTextBox1.Text = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                                richTextBox16.Text = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                                richTextBox8.Text = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n\r\n                                comboBox1.Items.Clear();\r\n\r\n\r\n\r\n                                comboBox1.Items.Insert(0, secondLine.Split(\u0027:\u0027)[13].Trim());\r\n                                comboBox1.SelectedIndex = 0;\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[11].Trim() == \u0022\u0022)\r\n                                {\r\n                                    richTextBox8.Text = \u0022N/A\u0022;\r\n                                }\r\n\r\n                                maskedTextBox1.Visible = true;\r\n                                maskedTextBox2.Visible = true;\r\n                                maskedTextBox3.Visible = true;\r\n                                maskedTextBox4.Visible = true;\r\n                                maskedTextBox5.Visible = true;\r\n                                /*\r\n                                try\r\n                                {\r\n                                    string ok = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                                    //  MessageBox.Show(ok);\r\n                                    string teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                    // MessageBox.Show(teste);\r\n                                    maskedTextBox1.Text = teste;\r\n\r\n\r\n                                    ok = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                                    MessageBox.Show(ok);\r\n                                    //  MessageBox.Show(ok);\r\n                                    teste = DateTime.ParseExact(ok, \u0022M/d/yyyy\u0022, CultureInfo.InvariantCulture).ToString(\u0022dd/MM/yyyy\u0022);\r\n                                    // MessageBox.Show(teste);\r\n                                    maskedTextBox2.Text = teste;\r\n                                }\r\n                                catch\r\n                                {\r\n\r\n                                }\r\n                                */\r\n                                // MessageBox.Show(secondLine);\r\n                                // MessageBox.Show(secondLine.Split(\u0027:\u0027)[9].Trim());\r\n                                maskedTextBox1.Text = secondLine.Split(\u0027:\u0027)[17];\r\n                                maskedTextBox2.Text = secondLine.Split(\u0027:\u0027)[19];\r\n                                maskedTextBox3.Text = secondLine.Split(\u0027:\u0027)[21];\r\n                                maskedTextBox4.Text = secondLine.Split(\u0027:\u0027)[23];\r\n                                maskedTextBox5.Text = secondLine.Split(\u0027:\u0027)[25];\r\n\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[17].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox1.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[19].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox2.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n                                if (secondLine.Split(\u0027:\u0027)[21].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox3.Text = \u002200/00/0000\u0022;\r\n                                }\r\n                                if (secondLine.Split(\u0027:\u0027)[23].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox4.Text = \u002200/00/0000\u0022;\r\n                                }\r\n                                if (secondLine.Split(\u0027:\u0027)[25].Trim() == \u0022\u0022)\r\n                                {\r\n                                    maskedTextBox5.Text = \u002200/00/0000\u0022;\r\n                                }\r\n\r\n\r\n                                // richTextBox15.Text = \u0022\u0022;\r\n\r\n                                try\r\n                                {\r\n                                    richTextBox15.Text = secondLine.Split(\u0027:\u0027)[33];\r\n                                }\r\n                                catch\r\n                                {\r\n                                    // richTextBox15.Text = \u0022\u0022;\r\n                                }\r\n                                // richTextBox6.Visible = true;\r\n                                // richTextBox7.Visible = true;\r\n                                // dateTimePicker1.Visible = false;\r\n                                // dateTimePicker2.Visible = false;\r\n                                //dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString();\r\n                                // dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString();\r\n\r\n\r\n                            }\r\n\r\n                            if (secondLine.Split(\u0027:\u0027)[26].Trim() == \u0022Bloqueado\u0022)\r\n                            {\r\n                                button2.Enabled = false;\r\n                                button17.Enabled = false;\r\n                                button7.Visible = false;\r\n                                btloc.Visible = true;\r\n                                label37.Text = secondLine.Split(\u0027:\u0027)[28];\r\n                                label37.Visible = true;\r\n                            }\r\n                            else\r\n                            {\r\n                                button2.Enabled = true;\r\n                                button17.Enabled = true;\r\n                                button7.Visible = true;\r\n                                btloc.Visible = false;\r\n                                label37.Visible = false;\r\n                            }\r\n                            id_exist = true;\r\n\r\n                            break;\r\n\r\n                        }\r\n\r\n                        label39.Text = i.ToString();\r\n                        //  MessageBox.Show((i).ToString());\r\n\r\n                        if (ok_but2 == false)\r\n                        {\r\n                            if (i == rich2 - 1 \u0026\u0026 secondLine.Split(\u0027:\u0027)[9].Trim() != richTextBox4.Text)\r\n                            {\r\n                                richTextBox16.Text = \u0022\u0022;\r\n                                richTextBox2.Text = \u0022\u0022;\r\n                                richTextBox3.Text = \u0022\u0022;\r\n                                richTextBox4.Text = \u0022\u0022;\r\n                                richTextBox1.Text = \u0022\u0022;\r\n                                richTextBox8.Text = \u0022\u0022;\r\n                                richTextBox10.Text = \u0022\u0022;\r\n                                richTextBox11.Text = \u0022\u0022;\r\n                                richTextBox12.Text = \u0022\u0022;\r\n                                richTextBox13.Text = \u0022\u0022;\r\n                                richTextBox14.Text = \u0022\u0022;\r\n                                richTextBox15.Text = \u0022\u0022;\r\n                                maskedTextBox1.Text = \u0022\u0022;\r\n                                maskedTextBox2.Text = \u0022\u0022;\r\n                                maskedTextBox3.Text = \u0022\u0022;\r\n                                maskedTextBox4.Text = \u0022\u0022;\r\n                                maskedTextBox5.Text = \u0022\u0022;\r\n                                maskedTextBox1.Visible = false;\r\n                                maskedTextBox2.Visible = false;\r\n                                maskedTextBox3.Visible = false;\r\n                                maskedTextBox4.Visible = false;\r\n                                maskedTextBox5.Visible = false;\r\n                                button2.Enabled = false;\r\n                                button17.Enabled = false;\r\n                                id_exist = false;\r\n                                MessageBox.Show(\u0022N\u00C3O EXISTE CADASTRO COM ESTE N\u00DAMERO!\u0022);\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                /// MessageBox.Show(\u0022N\u00C3O A DADOS CADASTRADOS!\u0022);\r\n            }\r\n\r\n            //  try\r\n            // {\r\n\r\n            //  string sec = secondLine.Split(\u0027:\u0027)[26].Trim();\r\n\r\n            // }\r\n            //  }\r\n\r\n\r\n\r\n\r\n            /*\r\n\r\n\r\n            if (richTextBox4.Text.Length \u003E= 5)\r\n            {\r\n                button2.Enabled = true;\r\n                button17.Enabled = true;\r\n                button29.Enabled = false;\r\n                richTextBox4.ReadOnly = true;\r\n                // richTextBox4.\r\n                //   pictureBox1.Visible = false;\r\n                //   panel4.Visible = false;\r\n\r\n\r\n\r\n                panel11.Size = new Size(360, 355);\r\n                panel11.Location = new System.Drawing.Point(95, 150);\r\n                pictureBox7.Size = new Size(330, 320);\r\n                pictureBox7.Location = new System.Drawing.Point(15, 18);\r\n\r\n\r\n\r\n                richTextBox17.Text = \u0022\u0022;\r\n                //label37.Text = \u0022Bloquear\u0022;\r\n\r\n\r\n\r\n\r\n\r\n                try\r\n                {\r\n                    string path2 = richTextBox4.Text.ToString();\r\n                    Stream stream = File.Open(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B richTextBox4.Text \u002B \u0022.jpg\u0022, FileMode.Open,\r\n                    FileAccess.Read, FileShare.Delete);\r\n                    pictureBox7.Image = Image.FromStream(stream);\r\n                    Bitmap bmp = new Bitmap(pictureBox7.Image);\r\n                    bmp.RotateFlip(RotateFlipType.Rotate180FlipY);\r\n                    pictureBox7.Image = bmp;\r\n                    stream.Close();\r\n\r\n                    //pictureBox7.Load(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B path \u002B \u0022.jpg\u0022;\r\n                    //  pictureBox7.Image = new Bitmap(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B path \u002B \u0022.jpg\u0022);\r\n\r\n                    // pictureBox7.Dispose();\r\n\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    MessageBox.Show(\u0022N\u00E3o h\u00E1 foto cadastrada\u0022);\r\n                    string path = richTextBox4.Text.ToString();\r\n                    Stream stream = File.Open(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022, FileMode.Open,\r\n                    FileAccess.Read, FileShare.Delete);\r\n                    pictureBox7.Image = Image.FromStream(stream);\r\n\r\n                    Bitmap bmp = new Bitmap(pictureBox7.Image);\r\n                    bmp.RotateFlip(RotateFlipType.Rotate180FlipY);\r\n                    pictureBox7.Image = bmp;\r\n                    stream.Close();\r\n                    richTextBox4.Text = \u0022\u0022;\r\n                    richTextBox4.ReadOnly = false;\r\n                }\r\n                catch\r\n                {\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n                ler_linha2();\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            */\r\n        }\r\n        private void richTextBox4_TextChanged(object sender, EventArgs e)\r\n        {\r\n           \r\n\r\n\r\n                    if (richTextBox4.Text.Length \u003E= 5)\r\n            {\r\n                button15.Visible = true;\r\n\r\n                if (label7.Text == button28.Text)\r\n                {\r\n                    button2.Enabled = true;\r\n                    button17.Enabled = true;\r\n                    button29.Enabled = true;\r\n                }\r\n                else\r\n                {\r\n                    button2.Enabled = false;\r\n                    button17.Enabled = false;\r\n                    button29.Enabled = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                button15.Visible = false;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                button29.Enabled = false;\r\n            }\r\n\r\n            if (richTextBox4.Text == \u0022\u0022)\r\n            {\r\n                label46.Visible = true;\r\n                button2.Enabled = false;\r\n                button17.Enabled = false;\r\n                button29.Enabled = false;\r\n            }\r\n            else\r\n            {\r\n                label46.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void pictureBox5_Click(object sender, EventArgs e)\r\n        {\r\n            band = 0;\r\n\r\n            lname.Text = label_nome[0];\r\n            lcompany.Text = label_emp[0];\r\n            lfunc.Text = label_Function[0];\r\n            lid.Text = label_Id[0];\r\n            lvessel.Text = label_vessel[0];\r\n            lproject.Text = label_porj[0];\r\n            lv1.Text = label_vaccine1[0];\r\n            lv2.Text = label_vaccine2[0];\r\n            lbustter.Text = label_reforco[0];\r\n            local1.Text = place1[0];\r\n            local2.Text = place2[0];\r\n            local3.Text = place3[0];\r\n            local4.Text = place4[0];\r\n            laccess.Text = label_acc[0];\r\n            level_yellow.Text = label_yellow[0];\r\n            level_green.Text = label_green[0];\r\n            level_red.Text = label_red[0];\r\n            lcheckin.Text = Label_initial[0];\r\n            lcheckout.Text = Label_final[0];\r\n            button1.Text = Label_Read_QRcode_On[0];\r\n            button28.Text = Label_Read_QRcode_Off[0];\r\n            button2.Text = Label_Create_QRcode[0];\r\n            button3.Text = Label_Show_data[0];\r\n            button4.Text = Label_Save_data[0];\r\n            //button5.Text = Label_Config[0];\r\n            button6.Text = Label_wifi[0];\r\n            button17.Text = Label_email[0];\r\n            button19.Text = Label_Mostrar_checkin[0];\r\n            button21.Text = Label_reset[0];\r\n            button22.Text = Label_fechar[0];\r\n            button8.Text = Label_entrada[0];\r\n            button9.Text = Label_saida[0];\r\n            button10.Text = Label_cancel[0];\r\n            label23.Text = label_onboard[0];\r\n            button27.Text = Label_reset_project[0];\r\n            button29.Text = label_reg[0];\r\n            label7.Text = Label_Read_QRcode_On[0];\r\n            label6.Text = onboard[0];\r\n            label_cad.Text = label_cad1[0];\r\n            label53.Text = Label_53[0];\r\n            button41.Text = bt_41[0];\r\n            button42.Text = bt_42[0];\r\n            button43.Text = bt_43[0];\r\n            button44.Text = bt_44[0];\r\n            button45.Text = bt_45[0];\r\n            regs.Text = bt_regis[0];\r\n            _cad = cad_mode[0];\r\n            _read = read_mode[0];\r\n        }\r\n\r\n        private void pictureBox6_Click(object sender, EventArgs e)\r\n        {\r\n            band = 1;\r\n            lname.Text = label_nome[1];\r\n            lcompany.Text = label_emp[1];\r\n            lfunc.Text = label_Function[1];\r\n            lid.Text = label_Id[1];\r\n            lvessel.Text = label_vessel[1];\r\n            lproject.Text = label_porj[1];\r\n            lv1.Text = label_vaccine1[1];\r\n            lv2.Text = label_vaccine2[1];\r\n            lbustter.Text = label_reforco[1];\r\n            local1.Text = place1[1];\r\n            local2.Text = place2[1];\r\n            local3.Text = place3[1];\r\n            local4.Text = place4[1];\r\n            laccess.Text = label_acc[1];\r\n            level_yellow.Text = label_yellow[1];\r\n            level_green.Text = label_green[1];\r\n            level_red.Text = label_red[1];\r\n            lcheckin.Text = Label_initial[1];\r\n            lcheckout.Text = Label_final[1];\r\n            button1.Text = Label_Read_QRcode_On[1];\r\n            button28.Text = Label_Read_QRcode_Off[1];\r\n            button2.Text = Label_Create_QRcode[1];\r\n            button3.Text = Label_Show_data[1];\r\n            button4.Text = Label_Save_data[1];\r\n            // button5.Text = Label_Config[1];\r\n            button6.Text = Label_wifi[1];\r\n            button17.Text = Label_email[1];\r\n            button19.Text = Label_Mostrar_checkin[1];\r\n            button21.Text = Label_reset[1];\r\n            button22.Text = Label_fechar[1];\r\n            button8.Text = Label_entrada[1];\r\n            button9.Text = Label_saida[1];\r\n            button10.Text = Label_cancel[1];\r\n            label23.Text = label_onboard[1];\r\n            button27.Text = Label_reset_project[1];\r\n            button29.Text = label_reg[1];\r\n            label7.Text = Label_Read_QRcode_On[1];\r\n            label6.Text = onboard[1];\r\n            label_cad.Text = label_cad1[1];\r\n            label53.Text = Label_53[1];\r\n            button41.Text = bt_41[1];\r\n            button42.Text = bt_42[1];\r\n            button43.Text = bt_43[1];\r\n            button44.Text = bt_44[1];\r\n            button45.Text = bt_45[1];\r\n            regs.Text = bt_regis[1];\r\n            _cad = cad_mode[1];\r\n            _read = read_mode[1];\r\n\r\n\r\n        }\r\n\r\n        private void richTextBox4_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter)\r\n            {\r\n                richTextBox1.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox4_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n\r\n            local1.Checked = false;\r\n            local2.Checked = false;\r\n            local3.Checked = false;\r\n            richTextBox6.Text = \u0022 \u0022;\r\n            richTextBox7.Text = \u0022 \u0022;\r\n            richTextBox15.Text = \u0022\u0022;\r\n            check_if_exist_id();\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                richTextBox6.Visible = true;\r\n                richTextBox7.Visible = true;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n\r\n               // button29.Enabled = false;\r\n            }\r\n            int lista_2 = 0;\r\n            for (int i = 0; i \u003C Int32.Parse(label3.Text); i\u002B\u002B)\r\n            {\r\n\r\n\r\n\r\n\r\n\r\n                //\r\n                lista_2\u002B\u002B;\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        private void button11_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button6_Click_2(object sender, EventArgs e)\r\n        {\r\n            // panel8.Location= new Point(Location.X,Location.Y);//Point(521,155);\r\n            panel8.Size = new Size(490, 353); //new Size(1030, 600);\r\n            wi\u002B\u002B;\r\n            if (wi == 1)\r\n            {\r\n                //online = true;\r\n                lview_AP.Items.Clear();\r\n                wifi = new Wifi();\r\n                List\u003CAccessPoint\u003E aps = wifi.GetAccessPoints();\r\n                foreach (AccessPoint ap in aps)\r\n                {\r\n                    ListViewItem lvItem = new ListViewItem(ap.Name);\r\n                    lvItem.SubItems.Add(ap.SignalStrength \u002B \u0022%\u0022);\r\n                    lvItem.Tag = ap;\r\n                    lview_AP.Items.Add(lvItem);\r\n                }\r\n\r\n\r\n                panel8.Visible = true;\r\n            }\r\n            if (wi == 2)\r\n            {\r\n                // online = false;\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n                panel8.Visible = false;\r\n\r\n                wi = 0;\r\n            }\r\n\r\n            // System.Windows.Forms.Application.Exit();\r\n            //   this.Close();\r\n        }\r\n        private void testa_local()\r\n        {\r\n\r\n            if (local1.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local1val = 0;\r\n            }\r\n\r\n            if (local2.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local2val = 0;\r\n            }\r\n\r\n            if (local3.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local3val = 0;\r\n            }\r\n\r\n            if (local4.Checked == false)\r\n            {\r\n                // checado = 1;\r\n                local4val = 0;\r\n            }\r\n            if (level_yellow.Checked == false)\r\n            {\r\n                levelyellow = 0;\r\n            }\r\n            if (level_green.Checked == false)\r\n            {\r\n                levelgreen = 0;\r\n            }\r\n            if (level_red.Checked == false)\r\n            {\r\n                levelred = 0;\r\n            }\r\n        }\r\n        private void local1_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n\r\n\r\n\r\n                if (local1.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local1val = 1;\r\n                    local2.Checked = false;\r\n                    local4.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local1val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void local2_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n                if (local2.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local2val = 1;\r\n                    local1.Checked = false;\r\n                    local4.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local2val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void local4_CheckedChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text != \u0022\u0022)\r\n            {\r\n                if (local4.Checked == true)\r\n                {\r\n                    checado = 1;\r\n                    local4val = 1;\r\n                    local1.Checked = false;\r\n                    local2.Checked = false;\r\n                    label50.Visible = false;\r\n                }\r\n                if (local1.Checked == false \u0026\u0026 local2.Checked == false \u0026\u0026 local3.Checked == false \u0026\u0026 local4.Checked == false)\r\n                {\r\n                    checado = 0;\r\n                    local4val = 0;\r\n                    label50.Visible = true;\r\n                }\r\n\r\n                testa_local();\r\n            }\r\n            else\r\n            {\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local4.Checked = false;\r\n            }\r\n        }\r\n\r\n        private void button27_Click(object sender, EventArgs e)\r\n        {\r\n            password frm = new password();\r\n            frm.Show();\r\n        }\r\n\r\n        private void richTextBox17_Click(object sender, EventArgs e)\r\n        {\r\n            label37.Visible = false;\r\n        }\r\n\r\n        private void label37_Click(object sender, EventArgs e)\r\n        {\r\n            label37.Visible = false;\r\n        }\r\n\r\n        private void richTextBox17_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox17.Text != \u0022\u0022)\r\n            {\r\n                r7 = true;\r\n            }\r\n        }\r\n\r\n        private void richTextBox2_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox3_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox4_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox1_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox8_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            // e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox15_KeyPress(object sender, KeyPressEventArgs e)\r\n        {\r\n            e.Handled = \u0022%\u0026\u0027\u00E7\u00C7\u00B4\u0060~^\u00E1\u00E9\u00ED\u00E3\u0165@#$\u00A8*\u0022.Contains(e.KeyChar.ToString());\r\n            e.KeyChar = Char.ToUpper(e.KeyChar);\r\n        }\r\n\r\n        private void richTextBox2_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox3.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox3_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox4.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox1_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox8.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox8_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox1.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox1_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox2.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox2_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox3.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox3_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox4.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox4_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                maskedTextBox5.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox5_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox15.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n        private void richTextBox15_KeyDown(object sender, KeyEventArgs e)\r\n        {\r\n            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)\r\n            {\r\n                richTextBox2.Focus();\r\n                // MessageBox.Show(\u0022You pressed enter! Good job!\u0022);\r\n            }\r\n        }\r\n\r\n\r\n        public void sendGmail()\r\n        {\r\n            text1 = richTextBox2.Text;\r\n            text2 = richTextBox1.Text;\r\n            text5 = comboBox1.Text;\r\n            text6 = dateTimePicker1.Value.ToString(\u0022ddd, dd MMM yyyy\u0022);\r\n            text7 = dateTimePicker2.Value.ToString(\u0022ddd, dd MMM yyyy\u0022);\r\n            text8 = richTextBox8.Text;\r\n\r\n            // foi = true;\r\n            // panel1.BackColor = Color.Yellow;\r\n            // panel14.BackColor = Color.Yellow;\r\n            //  timer1.Stop();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            int width = panel4.Size.Width;\r\n            int height = panel4.Size.Height;\r\n            Bitmap bm = new Bitmap(width, height);\r\n            panel4.DrawToBitmap(bm, new System.Drawing.Rectangle(0, 0, width, height));\r\n            bm.Save(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n            //label4.Visible = false;\r\n\r\n\r\n            //pictureBox1.Image.Save(@\u0022C:\\data_picture\\qr\\Qrcode10.png\u0022, ImageFormat.Png);\r\n            System.Net.Mail.MailMessage mail = new System.Net.Mail.MailMessage();\r\n            mail.From = new System.Net.Mail.MailAddress(\u0022dof.qrcode@gmail.com\u0022);\r\n            try\r\n            {\r\n                mail.To.Add(text8); // para\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(\u0022erro send email\u0022, ex.Message);\r\n            }\r\n            mail.Subject = \u0022Libera\u00E7\u00E3o \u0022 \u002B text5 \u002B \u0022 - \u0022 \u002B text6 \u002B \u0022 at\u00E9 \u0022 \u002B text7 \u002B \u0022 -\u0022 \u002B text2;//id.Trim(); // assunto\r\n            mail.Body = \u0022\u003Cbr\u003E\u0022 \u002B text1 \u002B \u0022,\u003Cbr\u003E \u0022 \u002B \u0022\u003Cbr\u003ESeja bem vindo a DOF\u003Cbr\u003E \u003Cbr\u003ESegue o QR Code:\u003Cbr\u003EApresente este voucher de libera\u00E7\u00E3o, para acessar a embarca\u00E7\u00E3o \u003Cb\u003E\u0022 \u002B text5 \u002B \u0022\u003C/b\u003E \u003Cfont color=#FF0000\u003E, juntamente com documento de identifica\u00E7\u00E3o.\u0022;//id.Trim(); // mensagem\r\n            mail.IsBodyHtml = true;\r\n            System.Net.Mail.Attachment attachment;\r\n            mail.Attachments.Add(new System.Net.Mail.Attachment(@\u0022C:\\compartilhamento\\data_picture\\qr\\Qrcode10.png\u0022));\r\n\r\n\r\n\r\n\r\n            try\r\n            {\r\n                using (var smtp = new SmtpClient(\u0022smtp.gmail.com\u0022))\r\n                {\r\n                    smtp.EnableSsl = true; // GMail requer SSL\r\n                    smtp.Port = 587;       // porta para SSL\r\n                    smtp.DeliveryMethod = SmtpDeliveryMethod.Network; // modo de envio\r\n                    smtp.UseDefaultCredentials = false; // vamos utilizar credencias especificas\r\n\r\n                    // seu usu\u00E1rio e senha para autentica\u00E7\u00E3o\r\n                    smtp.Credentials = new NetworkCredential(\u0022dof.qrcode@gmail.com\u0022, \u0022wammvtijopzdghps\u0022);\r\n                    //    smtp.Credentials = new NetworkCredential(\u0022alarm.boat@gmail.com\u0022, \u0022damhkxldmyegacvi\u0022);\r\n                    //  MessageBox.Show(\u0022acesso liberado\u0022);\r\n                    smtp.Send(mail);\r\n                    MessageBox.Show(\u0022E-mail sent with success\u0022);\r\n                    //  soma2 = 0;\r\n                    //   soma = 0;\r\n\r\n\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                MessageBox.Show(\u0022erro send email\u0022, ex.Message);\r\n            }\r\n\r\n            mail.Attachments.Dispose();\r\n\r\n\r\n            // timer1.Start();\r\n\r\n        }\r\n        private void button17_Click(object sender, EventArgs e)\r\n        {\r\n            \r\n            rec = false;\r\n            Boolean tempo = false;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                if (dateTimePicker2.Value.Date \u003E= dateTimePicker1.Value.Date)\r\n                {\r\n                    tempo = true;\r\n                }\r\n                else\r\n                {\r\n                    tempo = false;\r\n                    MessageBox.Show(\u0022A DATA FINAL EST\u00C1 MENOR QUE A DATA INICIAL, CORRIJA POR FAVOR!\u0022);\r\n\r\n                }\r\n            }\r\n\r\n            if (dateTimePicker1.Visible == false)\r\n            {\r\n                tempo = true;\r\n            }\r\n            if (tempo == true)\r\n            {\r\n                timer10.Enabled = false;\r\n                timer12.Enabled = false;\r\n                /*\r\n               // ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n                startInfo.RedirectStandardOutput = true;\r\n                startInfo.UseShellExecute = false;\r\n                // Do not create the black window.\r\n                startInfo.CreateNoWindow = true;\r\n                startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n               // Process.Start(startInfo);\r\n                */\r\n                check_id_onboard();\r\n                if (id_onboard == false)\r\n                {\r\n                    if (dateTimePicker1.Visible == true)\r\n                    {\r\n                        richTextBox6.Text = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                        richTextBox7.Text = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n                    }\r\n\r\n\r\n                    alterado();\r\n                    compare_id();\r\n                    check_if_exist_id();\r\n\r\n                    if (id_exist == true)\r\n                    {\r\n                        richTextBox10.Text = maskedTextBox1.Text;\r\n                        richTextBox11.Text = maskedTextBox2.Text;\r\n                        richTextBox12.Text = maskedTextBox3.Text;\r\n                        richTextBox13.Text = maskedTextBox4.Text;\r\n                        richTextBox14.Text = maskedTextBox5.Text;\r\n                        textBox13.Text = richTextBox1.Text;\r\n\r\n\r\n\r\n\r\n\r\n                        // \r\n                        //  if (textBox7.SelectionLength \u003E= 0)\r\n                        // {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                        // }\r\n                        /*\r\n                        String[] Label_initial = { \u0022Inicio\u0022, \u0022Check-in\u0022 };\r\n                        String[] Label_final = { \u0022Fim\u0022, \u0022Check-out\u0022 };\r\n                        String[] Label_Read_QRcode_On = { \u0022Ler Qrcode Ligado\u0022, \u0022Read QRcode On\u0022 };\r\n                        String[] Label_Read_QRcode_Off = { \u0022Ler Qrcode Desligado\u0022, \u0022Read QRcode Off\u0022 };\r\n                        String[] Label_Create_QRcode = { \u0022Imprimir Qrcode:\u0022, \u0022Print QRcode\u0022 };\r\n                        String[] Label_Show_data = { \u0022Mostrar banco de dados:\u0022, \u0022Show DataBase\u0022 };\r\n                        String[] Label_Save_data = { \u0022Salvar banco de dados:\u0022, \u0022Save Database Backup\u0022 };\r\n                        String[] Label_Config = { \u0022Configura\u00E7\u00F5es:\u0022, \u0022Settings\u0022 };\r\n                        String[] Label_wifi = { \u0022Conex\u00E3o Wi-Fi:\u0022, \u0022Wi-Fi connection\u0022 };\r\n                        String[] Label_email = { \u0022Enviar Qrcode por E-mail:\u0022, \u0022Send Qr Code  by E-mail\u0022 };\r\n                        String[] Label_Mostrar_checkin = { \u0022Mostrar Check-in:\u0022, \u0022Show Check-in\u0022 };\r\n                        String[] Label_fechar = { \u0022Desligar:\u0022, \u0022Turn Off\u0022 };\r\n            */\r\n                        if (band == 0)\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[0];\r\n                        }\r\n                        else\r\n                        {\r\n                            button2.Text = Label_Create_QRcode[1];\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        // var parameterDate2_initial = DateTime.ParseExact(dateTimePicker1.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n                        // var parameterDate2_final = DateTime.ParseExact(dateTimePicker2.Value.Date.ToString(), \u0022dd/MM/yyyy\u0022, CultureInfo.InvariantCulture);\r\n\r\n                        if (resultado == 0)\r\n                        {\r\n                            if (textBox7.SelectionLength \u003E= 0)\r\n                            {\r\n                                // textBox7.Focus();\r\n                                // textBox7.Text = \u0022\u0022;\r\n                            }\r\n                            // dataGridView1.Visible = false;\r\n                            if (richTextBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox2.Text != \u0022 \u0022 \u0026\u0026 richTextBox3.Text != \u0022 \u0022 \u0026\u0026 richTextBox4.Text != \u0022 \u0022 \u0026\u0026 comboBox1.Text != \u0022 \u0022 \u0026\u0026 richTextBox8.Text != \u0022\u0022 \u0026\u0026 checado == 1 \u0026\u0026 maskedTextBox1.Text != \u0022  /  /\u0022\r\n                                \u0026\u0026 maskedTextBox2.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox3.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox4.Text != \u0022  /  /\u0022 \u0026\u0026 maskedTextBox5.Text != \u0022  /  /\u0022)  //  /  /\r\n                            {\r\n\r\n\r\n\r\n                                compare_aso();\r\n\r\n                                if (aso_1 == 0)\r\n                                {\r\n\r\n\r\n\r\n                                    maskedTextBox1.Visible = false;\r\n                                    maskedTextBox2.Visible = false;\r\n                                    maskedTextBox3.Visible = false;\r\n                                    maskedTextBox4.Visible = false;\r\n                                    maskedTextBox5.Visible = false;\r\n\r\n\r\n\r\n\r\n                                    read_write();\r\n                                    confere = 1;\r\n                                    lb4.Visible = true;\r\n                                    label5.Visible = true;\r\n                                    panel10.Visible = true;\r\n                                    label5.Text = richTextBox2.Text;\r\n\r\n\r\n\r\n\r\n                                    qr_generate = \u0022Qrcode Sent by E-mail\u0022;\r\n\r\n                                    //\r\n                                    // CarregarPlanilha2();\r\n                                    carrega_planilha2_txt();\r\n                                    //  create_qrcode();\r\n                                    ProcessStartInfo startInfo2 = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 ENABLED\u0022);\r\n                                    startInfo2.RedirectStandardOutput = true;\r\n                                    startInfo2.UseShellExecute = false;\r\n                                    // Do not create the black window.\r\n                                    startInfo2.CreateNoWindow = true;\r\n                                    startInfo2.WindowStyle = ProcessWindowStyle.Hidden;\r\n                                    Process.Start(startInfo2);\r\n                                    create_qrcode_new();\r\n                                    sendGmail();\r\n                                    \r\n                                    //  print_qrcode();\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                                //\r\n                                //string teste = \u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition: \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel :\u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022: ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                                //  atualiza_compartilhamento();\r\n\r\n                                // \r\n\r\n                                // else\r\n                                //  {\r\n                                //  MessageBox.Show(id_check[band]);\r\n                                //  }\r\n                                checado = 0;\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                if (band == 0)\r\n                                {\r\n                                    MessageBox.Show(\u0022Favor preencher todos os campos\u0022);\r\n                                }\r\n\r\n                                if (band == 1)\r\n                                {\r\n                                    MessageBox.Show(\u0022Please complete all informations places\u0022);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (resultado == 1)\r\n                        {\r\n                            MessageBox.Show(\u0022ID duplicated\u0022);\r\n                        }\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022 \u0022;\r\n                    }\r\n                    ok_but2 = false;\r\n\r\n                }\r\n                else\r\n                {\r\n                    MessageBox.Show(\u0022ESTA PESSOA EST\u00C1 A BORDO! S\u00D3 \u00C9 PERMITIDO ENVIAR EMAIL SE A PESSOA ESTIVER FORA DA EMBARCA\u00C7\u00C3O\u0022);\r\n                }\r\n            }\r\n            rec = true;\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void timer6_Tick(object sender, EventArgs e)\r\n        {\r\n            //  label52.Text = count2.ToString();\r\n\r\n\r\n\r\n\r\n            if (online_ == true)\r\n            {\r\n                //  panel12.BackColor = Color.GreenYellow;\r\n\r\n                // label40.Visible = false;\r\n\r\n            }\r\n\r\n            if (online_ == false)\r\n            {\r\n                //  panel12.BackColor = Color.Red;\r\n                // label40.Visible = false;\r\n            }\r\n\r\n            online_ = false;\r\n        }\r\n\r\n        private void textBox7_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox7_TextChanged_1(object sender, EventArgs e)\r\n        {\r\n            if (tempo == 0)\r\n            {\r\n                tempo = 1;\r\n                pictureBox7.Image = Properties.Resources.barcode1;\r\n                timer4.Start();\r\n\r\n            }\r\n        }\r\n        int fil = 0;\r\n        private void button34_Click(object sender, EventArgs e)\r\n        {\r\n            //  MessageBox.Show(libera.ToString());\r\n            // if (libera == true)\r\n            // {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n                object misValue = System.Reflection.Missing.Value;\r\n                String line;\r\n\r\n                //   foreach (DataGridViewRow item in this.dataGridView1.SelectedRows)\r\n                //    {\r\n                //dataGridView1.Rows.RemoveAt(item.Index);\r\n                //   }\r\n\r\n                Microsoft.Office.Interop.Excel._Application app = new Microsoft.Office.Interop.Excel.Application();\r\n\r\n                Microsoft.Office.Interop.Excel._Workbook workbook = app.Workbooks.Add(Type.Missing);\r\n\r\n                Microsoft.Office.Interop.Excel._Worksheet worksheet = null;\r\n\r\n                // app.Visible = false;\r\n\r\n                worksheet = workbook.Sheets[\u0022Planilha1\u0022];\r\n                //  worksheet = workbook.ActiveSheet;\r\n\r\n                for (int i = 1; i \u003C dataGridView1.Columns.Count \u002B 1; i\u002B\u002B)\r\n                {\r\n                    worksheet.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;\r\n                }\r\n                // storing Each row and column value to excel sheet  \r\n                for (int i = 0; i \u003C dataGridView1.Rows.Count; i\u002B\u002B)\r\n                {\r\n                    for (int j = 0; j \u003C dataGridView1.Columns.Count; j\u002B\u002B)\r\n                    {\r\n                        if (dataGridView1.Rows[i].Cells[j].Value != null)\r\n                        {\r\n                            worksheet.Cells[i \u002B 2, j \u002B 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                string folder = @\u0022D:\\CRIPTOQRCODE_backup\\\u0022; //nome do diretorio a ser criado\r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n                if (!Directory.Exists(folder))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(folder);\r\n\r\n                }\r\n\r\n                if (Directory.Exists(folder))\r\n                {\r\n                    fil\u002B\u002B;\r\n\r\n                    worksheet.SaveAs(@\u0022D:\\CRIPTOQRCODE_backup\\\u0022 \u002B fil.ToString() \u002B \u0022FILTRO.xlsx\u0022, Type.Missing);\r\n                    //  app.\r\n\r\n                    app.Quit();\r\n\r\n                    System.Diagnostics.Process[] process = System.Diagnostics.Process.GetProcessesByName(\u0022Excel\u0022);\r\n                    foreach (System.Diagnostics.Process p in process)\r\n                    {\r\n                        if (!string.IsNullOrEmpty(p.ProcessName))\r\n                        {\r\n                            try\r\n                            {\r\n                                p.Kill();\r\n                            }\r\n                            catch { }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                MessageBox.Show(\u0022Backup concluido com sucesso!\u0022);\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    // textBox7.Focus();\r\n                    //textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n            ///  }\r\n        }\r\n\r\n        private void richTextBox3_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox3.Text == \u0022\u0022)\r\n            {\r\n                label45.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label45.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void richTextBox1_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox1.Text == \u0022\u0022)\r\n            {\r\n                label47.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label47.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void richTextBox8_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox8.Text == \u0022\u0022)\r\n            {\r\n                // label48.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                //  label48.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void listBox1_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            timer10.Enabled = false;\r\n            timer12.Enabled = false;\r\n            //Criar um MessageBox com os bot\u00F5es Sim e N\u00E3o e deixar o bot\u00E3o 2(N\u00E3o) selecionado por padr\u00E3o e comparar o bot\u00E3o apertado\r\n            if (DialogResult.Yes == MessageBox.Show(\u0022TEM CERTEZA QUE DESEJA DAR SAIDA MANUAL A ESTA PESSOA?\u0022, \u0022Confirma\u00E7\u00E3o\u0022, MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2))\r\n            {\r\n               \r\n                string bio = listBox1.SelectedItem.ToString().Trim();\r\n                // MessageBox.Show(bio);\r\n                string teste = \u0022\u0022;//\u0022Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B richTextBox10.Text \u002B \u0022 : NR-34 : \u0022 \u002B richTextBox11.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B richTextBox12.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B richTextBox13.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B richTextBox14.Text;\r\n                int ver = 0;\r\n                string filePath = @\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022;\r\n               \r\n\r\n                string tempFile = Path.GetTempFileName();\r\n\r\n                using (var sr = new StreamReader(filePath))\r\n                {\r\n                    using (var sw = new StreamWriter(tempFile))\r\n                    {\r\n                        string line;\r\n\r\n                        while ((line = sr.ReadLine()) != null)\r\n                        {\r\n                            if (line != listBox1.SelectedItem.ToString().Trim())\r\n                                sw.WriteLine(line);\r\n                        }\r\n                        sr.Close();\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                string line_to_delete = bio;\r\n                var oldLines = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n                var newLines = oldLines.Where(line =\u003E !line.Contains(line_to_delete));\r\n                System.IO.File.WriteAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, newLines);\r\n\r\n                out_by_user();\r\n\r\n\r\n\r\n\r\n                // File.Delete(filePath);\r\n                // File.Move(tempFile, filePath);\r\n                // File.\r\n               // ler_linha();\r\n\r\n\r\n\r\n                while (listBox1.SelectedItems.Count \u003E 0)\r\n                {\r\n\r\n\r\n\r\n                    listBox1.Items.Remove(listBox1.SelectedItems[0]);\r\n                }\r\n\r\n                label67.Text = listBox1.SelectedItems.Count.ToString();\r\n\r\n                // Get first 12 characters substring from a string    \r\n                //   string authorName = bio.Substring(0,5);\r\n                //Sua rotina de exclus\u00E3o\r\n                //Confirmando exclus\u00E3o para o usu\u00E1rio\r\n                //   MessageBox.Show(\u0022Registro apagado com sucesso\u0022, \u0022Sucesso\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                //  MessageBox.Show(authorName, \u0022Sucesso\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                // myThread.Abort();\r\n               // checa_host();\r\n                //   MessageBox.Show(\u0022listBox1_MouseDoubleClick\u0022);\r\n                //atualiza_compartilhamento();\r\n\r\n                if (label27.Text == \u00220\u0022)\r\n                {\r\n                    panel6.Visible = false;\r\n\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // MessageBox.Show(\u0022Registro cancelado\u0022);\r\n            }\r\n\r\n            // ler_linha();\r\n\r\n            //  }\r\n\r\n            timer10.Enabled = true;\r\n            timer12.Enabled = true;\r\n        }\r\n\r\n        private void listBox1_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            pictureBox4.Visible = true;\r\n\r\n            try\r\n            {\r\n\r\n\r\n                if (listBox1.SelectedItem != null) {\r\n\r\n                    string path = listBox1.SelectedItem.ToString();\r\n\r\n                    string s = path;\r\n                    string id = s.Split(\u0022:\u0022.ToCharArray())[8];\r\n                    // MessageBox.Show(id);\r\n                    pictureBox4.Visible=true; \r\n                    pictureBox4.Load(@\u0022C:\\compartilhamento\\data_picture\\\u0022 \u002B id.Trim() \u002B \u0022.jpg\u0022);\r\n                }\r\n            }\r\n            catch\r\n            {\r\n                pictureBox4.Visible = true;\r\n                pictureBox4.Load(@\u0022C:\\compartilhamento\\data_picture\\face.jpg\u0022);\r\n            }\r\n        }\r\n        int click_ = 0;\r\n        private void pictureBox4_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            click_\u002B\u002B;\r\n            if (click_ == 1)\r\n            {\r\n                pictureBox4.Size = new Size(500, 500);\r\n                pictureBox4.Location = new System.Drawing.Point(600, 300);\r\n            }\r\n            if (click_ == 2)\r\n            {\r\n                pictureBox4.Size = new Size(170, 140);\r\n                pictureBox4.Location = new System.Drawing.Point(1544, 6);\r\n                click_ = 0;//847; 56\r\n            }\r\n        }\r\n\r\n        private void pictureBox4_MouseDoubleClick_1(object sender, MouseEventArgs e)\r\n        {\r\n            click_\u002B\u002B;\r\n            if (click_ == 1)\r\n            {\r\n                pictureBox4.Size = new Size(500, 500);\r\n                pictureBox4.Location = new System.Drawing.Point(600, 300);\r\n            }\r\n            if (click_ == 2)\r\n            {\r\n                pictureBox4.Size = new Size(170, 140);\r\n                pictureBox4.Location = new System.Drawing.Point(1544, 6);\r\n                click_ = 0;//847; 56\r\n            }\r\n        }\r\n\r\n        private void button18_Click(object sender, EventArgs e)\r\n        {\r\n            if (textBox7.SelectionLength \u003E= 0)\r\n            {\r\n                textBox7.Focus();\r\n                textBox7.Text = \u0022\u0022;\r\n            }\r\n            panel6.Visible = false;\r\n        }\r\n\r\n        private void richTextBox16_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                button7.Visible = false;\r\n                btloc.Visible = false;\r\n                button15.Visible = false;\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void richTextBox4_Click(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox4.Text == \u0022\u0022)\r\n            {\r\n                button15.Visible = false;\r\n            }\r\n        }\r\n        private void GetBiosInformation()\r\n        {\r\n            string relDt = \u0022\u0022;\r\n            try\r\n            {\r\n                string login = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\login.txt\u0022);\r\n                ManagementObjectSearcher mSearcher = new ManagementObjectSearcher(\u0022SELECT SerialNumber, SMBIOSBIOSVersion, ReleaseDate FROM Win32_BIOS\u0022);\r\n                ManagementObjectCollection collection = mSearcher.Get();\r\n                foreach (ManagementObject obj in collection)\r\n                {\r\n\r\n                    // MessageBox.Show((string)obj[\u0022SerialNumber\u0022]);\r\n                    // textBox13.Text = (string)obj[\u0022SerialNumber\u0022];\r\n                    // lblBiosSerial.Text = (string)obj[\u0022SerialNumber\u0022];\r\n                    // lblBiosVersion.Text = (string)obj[\u0022SMBIOSBIOSVersion\u0022];\r\n                    relDt = (string)obj[\u0022ReleaseDate\u0022];\r\n                    DateTime dt = ManagementDateTimeConverter.ToDateTime(relDt);\r\n                    //  lblBiosDate.Text = dt.ToString(\u0022dd-MMM-yyyy\u0022);//date format\r\n                    if (login.Trim() != (string)obj[\u0022SerialNumber\u0022])\r\n                    {\r\n                        panel9.Visible = true;\r\n                        panel9.Size = new Size(1693, 997);\r\n                        //36; 632\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                        panel9.Visible = false;\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // Console.WriteLine(ex.ToString());\r\n            }\r\n\r\n\r\n        }\r\n        private void button5_Click(object sender, EventArgs e)\r\n        {\r\n            check_id_onboard2();\r\n          //  check_id_onboard();\r\n            //File.WriteAllText(@\u0022C:\\teste\\PROJETO.txt\u0022, \u0022teste1\u0022 \u002B \u0022\\r\\n\u0022 \u002B \u0022teste1\u0022);\r\n\r\n\r\n            /*\r\n            String l = \u0022\u0022;\r\n            bool ESIM = false;\r\n            bool dois = false;\r\n            bool tres = false;\r\n            string nume = \u0022\u0022;\r\n            string[] lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\\r\n            \r\n           \u0022);\r\n            id_1 = 0;\r\n            for (int i = 0; i \u003C lines.Length; i\u002B\u002B)\r\n            {\r\n\r\n                if (lines[i].Split(\u0027:\u0027)[9].Trim() == richTextBox4.Text.Trim())\r\n                {\r\n\r\n\r\n\r\n\r\n                    l = lines[i].Split(\u0027:\u0027)[9].Trim();\r\n                    if (lines[i].Split(\u0027:\u0027)[1].Trim() != richTextBox16.Text.Trim()) {\r\n                        MessageBox.Show(\u0022O N\u00DAMERO DA IDENTIDADE\u0022 \u002B lines[i].Split(\u0027:\u0027)[9].Trim() \u002B \u0022 J\u00C1 EST\u00C1 CADASTRADO NO ACESSO DE N\u00DAMERO \u0022 \u002B lines[i].Split(\u0027:\u0027)[1].Trim());\r\n                    }\r\n                    ESIM = true;\r\n                    richTextBox4.Text = lines[int.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                    string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                    //  MessageBox.Show(\u0022 CADASTRO REALIZADO COM SUCESSO, A IDENTIDADE N\u00C3O FOI ALTERADA POIS J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                    break;\r\n\r\n                }\r\n                else\r\n                {\r\n                    ESIM = false;\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            if (ESIM == false)\r\n            {\r\n\r\n                id_1 = 1;\r\n                string[] lines2 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                if (richTextBox4.Text.Trim() != l) {\r\n                    string text4 = \u0022Number : \u0022 \u002B richTextBox16.Text.Trim() \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B richTextBox4.Text.Trim() \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                    string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    text = text.Replace(lines2[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                    //  MessageBox.Show(\u0022CADASTRO REALIZADO COM SUCESSO\u0022);\r\n                }\r\n                else\r\n                {\r\n\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            /*\r\n                    \r\n\r\n                        if (id_1 == 0)\r\n                        {\r\n                            string id_3;\r\n                            int exs = 0;\r\n                                   string[] lines3 = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                   string id_11 = lines[Int16.Parse(richTextBox16.Text)-1].Split(\u0027:\u0027)[1].Trim();\r\n\r\n                            for (int i = 0; i \u003C lines3.Length; i\u002B\u002B)\r\n                            {\r\n\r\n                                if (richTextBox4.Text.Trim() == lines[i].Split(\u0027:\u0027)[9].Trim())\r\n                                {\r\n                                    MessageBox.Show(\u0022J\u00C1 EXISTE UMA IDENTIDADE COM ESTA N\u00DAMERO\u0022);\r\n                                    exs = 1;\r\n                                }\r\n\r\n                                else\r\n                                {\r\n                                    exs = 1; \r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            if (exs == 1)\r\n                            {\r\n                                id_3 = richTextBox4.Text.Trim();//lines[Int16.Parse(richTextBox16.Text) - 1].Split(\u0027:\u0027)[9].Trim();\r\n                            }\r\n                            string text4 = \u0022Number : \u0022 \u002B id_11 \u002B \u0022 : Name : \u0022 \u002B richTextBox2.Text \u002B \u0022 : Compay : \u0022 \u002B richTextBox1.Text \u002B \u0022 :Funcition:  \u0022 \u002B richTextBox3.Text \u002B \u0022  :Id: \u0022 \u002B id_3 \u002B \u0022 : E-mail : \u0022 \u002B richTextBox8.Text \u002B \u0022 : Vessel : \u0022 \u002B richTextBox5.Text \u002B \u0022 : Project : \u0022 \u002B richTextBox9.Text \u002B \u0022 : ASO : \u0022 \u002B maskedTextBox1.Text \u002B \u0022 : NR-34 : \u0022 \u002B maskedTextBox2.Text \u002B \u0022 : Vaccine-1 : \u0022 \u002B maskedTextBox3.Text \u002B \u0022 : Vaccine-2 : \u0022 \u002B maskedTextBox4.Text \u002B \u0022 : Booster vaccine : \u0022 \u002B maskedTextBox5.Text \u002B \u0022 : \u0022 \u002B bb \u002B \u0022 : \u0022 \u002B comuser.Text \u002B \u0022 :\u0022 \u002B richTextBox17.Text;\r\n                            string text = File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                            text = text.Replace(lines[Int16.Parse(richTextBox16.Text) - 1], text4);\r\n                            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n                            MessageBox.Show(\u0022NOVO CADASTRO REALIZADO COM SUCESSO!\u0022);\r\n\r\n                        }\r\n\r\n                        //  GetBiosInformation();\r\n                        /*\r\n                        if (dataGridView1.Rows.Count \u003E 0)\r\n                        {\r\n                            try\r\n                            {\r\n                                XcelApp.Application.Workbooks.Add(Type.Missing);\r\n                                for (int i = 1; i \u003C dataGridView1.Columns.Count \u002B 1; i\u002B\u002B)\r\n                                {\r\n                                    XcelApp.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;\r\n                                }\r\n                                //\r\n                                for (int i = 0; i \u003C dataGridView1.Rows.Count - 1; i\u002B\u002B)\r\n                                {\r\n                                    for (int j = 0; j \u003C dataGridView1.Columns.Count; j\u002B\u002B)\r\n                                    {\r\n                                        XcelApp.Cells[i \u002B 2, j \u002B 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();\r\n                                    }\r\n                                }\r\n                                //\r\n                                XcelApp.Columns.AutoFit();\r\n                                //\r\n                                XcelApp.Visible = true;\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                MessageBox.Show(\u0022Erro : \u0022 \u002B ex.Message);\r\n                                XcelApp.Quit();\r\n                            }\r\n                        }\r\n                        */\r\n            //out_by_user();\r\n            //string line2 = null;\r\n            // string line_to_delete = \u0022the line i want to delete\u0022;\r\n\r\n\r\n            // var oldLines = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            // var newLines = oldLines.Where(line =\u003E !line.Contains(line_to_delete));\r\n            // System.IO.File.WriteAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022, newLines);\r\n\r\n        }\r\n\r\n        private void button9_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button36_Click(object sender, EventArgs e)\r\n        {\r\n            String ma = \u0022teste\u0022;\r\n            string str2 = string.Empty;\r\n            int val2 = 0;\r\n            //  label5.Text = ma.ToString();\r\n            for (int i = 0; i \u003C ma.Length; i\u002B\u002B)\r\n            {\r\n                if (Char.IsDigit(ma[i]))\r\n                    str2 \u002B= ma[i];\r\n            }\r\n            //label5.Text = str2;\r\n\r\n            while (str2.Length \u003E 5)\r\n            {\r\n                str2 = str2.Substring(0, str2.Length - 1);\r\n            }\r\n\r\n            if (str2.Length \u003E 0)\r\n            {\r\n                val2 = int.Parse(str2);\r\n            }\r\n\r\n\r\n            double str3 = ((Math.Sqrt(val2)) * val2) / 2;\r\n            String str5 = str3.ToString();\r\n            str5.Substring(0, 5);\r\n            StreamReader srb = new StreamReader(\u0022code.txt\u0022); //C:\\Users\\win 10\\Documents   Users\\\\win 10\\\\Documents\\\\local.txt\r\n            string xb = srb.ReadToEnd().Trim();\r\n            srb.Close();\r\n            id = val2.ToString();\r\n            label2.Text = \u0022ID: \u0022 \u002B val2.ToString();\r\n            // label9.Text = \u0022ID: \u0022 \u002B val.ToString();\r\n            if (xb != str5.Substring(0, 5).Trim())\r\n            {\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            using (StreamWriter writer = new StreamWriter(\u0022code.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n            {\r\n                // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                writer.WriteLine(textBox11.Text);\r\n                writer.Close();\r\n            }\r\n            //Task.Delay(1000).Wait();\r\n            System.Windows.Forms.Application.Restart();\r\n\r\n\r\n            int val = 0;\r\n            val = int.Parse(textBox11.Text);\r\n            double str33 = ((Math.Sqrt(val)) * val) / 2;\r\n            textBox12.Text = str3.ToString();\r\n        }\r\n\r\n        private void richTextBox6_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE ALTERAR A DATA?\u0022, \u0022ALTERA\u00C7\u00C3O DE DATA\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    dateTimePicker1.Visible = true;\r\n                    dateTimePicker2.Visible = true;\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n                    dateTimePicker1.Visible = false;\r\n                    dateTimePicker2.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox2_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox7_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox16.Text != \u0022\u0022)\r\n            {\r\n                DialogResult dialogResult = MessageBox.Show(\u0022DESEJA REALMENTE ALTERAR A DATA?\u0022, \u0022ALTERA\u00C7\u00C3O DE DATA\u0022, MessageBoxButtons.YesNo);\r\n                if (dialogResult == DialogResult.Yes)\r\n                {\r\n                    dateTimePicker1.Visible = true;\r\n                    dateTimePicker2.Visible = true;\r\n                }\r\n                else if (dialogResult == DialogResult.No)\r\n                {\r\n                    dateTimePicker1.Visible = false;\r\n                    dateTimePicker2.Visible = false;\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        private void button8_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button10_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button30_Click(object sender, EventArgs e)\r\n        {\r\n            label34.Text = DateTime.Now.ToString(\u0022dd/MM/yyyy\u0022).Trim();\r\n        }\r\n\r\n        private void button33_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void panel3_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox15_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        private void get_link_txt()\r\n        {\r\n            try\r\n            {\r\n                if (richTextBox15.Text != \u0022\u0022)\r\n                {\r\n                    // https://drive.google.com/file/d/12wpEOD6oDNL4eWgJXRFEzkPlmJ5fwdsT/view?usp=sharing\r\n\r\n                    // string path = richTextBox15.Text;\r\n                    //  String path2;\r\n                    //  string[] subs = path.Split(\u0027/\u0027);\r\n                    panel9.Size = new Size(1050, 43);\r\n                    path2 = \u0022https://drive.google.com/file/d/\u0022 \u002B richTextBox15.Text.Trim() \u002B \u0022/view?usp=sharing\u0022;\r\n                    // path2 = \u0022https://drive.google.com/file/d/12wpEOD6oDNL4eWgJXRFEzkPlmJ5fwdsT/view?usp=sharing\u0022;\r\n                    panel9.Visible = true;\r\n                    panel14.Visible = true;\r\n                    panel14.Size = new Size(1145, 44);\r\n\r\n                    webBrowser1.Visible = true;\r\n                    // webBrowser1.DocumentText = \u0022\u003Chtml\u003E\u003C head \u003E\u003C title \u003E HTML Backgorund Color\u003C/ title \u003E\u003C/ head \u003E\u003C body style = \u0027background-color:grey;\u0027 \u003E\u003C h1 \u003E Products \u003C/ h1 \u003E\u003C/ body \u003E\u003C/ html \u003E\u0022;\r\n                    webBrowser1.Size = new Size(1145, 680);\r\n\r\n\r\n                    this.webBrowser1.Navigate(path2);\r\n                }\r\n                // MessageBox.Show(subs[5]);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n        private void richTextBox15_DoubleClick(object sender, EventArgs e)\r\n        {\r\n            get_link_txt();\r\n        }\r\n\r\n        private void button37_Click(object sender, EventArgs e)\r\n        {\r\n            panel9.Visible = false;\r\n            panel14.Visible = false;\r\n            webBrowser1.Visible = false;\r\n        }\r\n\r\n        private void lcompany_Click(object sender, EventArgs e)\r\n        {\r\n            richTextBox1.Text = comboBox1.Text \u002B \u0022 CREW\u0022;\r\n        }\r\n\r\n        int ip_find = 0;\r\n        int count2 = 0;\r\n        int soma = 0;\r\n        public void scan2(string start, string end)\r\n        {\r\n            comp = 0;\r\n            //   timer9.Enabled = false;\r\n            if (soma == 0)\r\n            {\r\n           \r\n                try\r\n                {\r\n\r\n                    //Split IP string into a 4 part array\r\n                    string[] startIPString = start.Split(\u0027.\u0027);\r\n                    int[] startIP = Array.ConvertAll\u003Cstring, int\u003E(startIPString, int.Parse); //Change string array to int array\r\n\r\n\r\n                    string[] endIPString = end.Split(\u0027.\u0027);\r\n                    int[] endIP = Array.ConvertAll\u003Cstring, int\u003E(endIPString, int.Parse);\r\n                    //Count the number of successful pings\r\n                    // count2 = 0;\r\n                    Ping myPing;\r\n                    PingReply reply;\r\n                    IPAddress addr;\r\n                    IPHostEntry host;\r\n                  //  \r\n\r\n                    //Progress bar\r\n\r\n                    //   listVAddr.Items.Clear();\r\n\r\n                    //Loops through the IP range, maxing out at 255\r\n                    for (int i = startIP[2]; i \u003C= endIP[2]; i\u002B\u002B)\r\n                    { //3rd octet loop\r\n                        for (int y = startIP[3]; y \u003C= 100; y\u002B\u002B)\r\n                        { //4th octet loop\r\n                            string ipAddress = startIP[0] \u002B \u0022.\u0022 \u002B startIP[1] \u002B \u0022.\u0022 \u002B i \u002B \u0022.\u0022 \u002B y; //Convert IP array back into a string\r\n                            string endIPAddress = endIP[0] \u002B \u0022.\u0022 \u002B endIP[1] \u002B \u0022.\u0022 \u002B endIP[2] \u002B \u0022.\u0022 \u002B (endIP[3] \u002B 1); // \u002B1 is so that the scanning stops at the correct range\r\n\r\n                            //If current IP matches final IP in range, break\r\n                            if (ipAddress == endIPAddress)\r\n                            {\r\n                                break;\r\n                            }\r\n\r\n                            myPing = new Ping();\r\n                            try\r\n                            {\r\n                                reply = myPing.Send(ipAddress, 10); //Ping IP address with 500ms timeout\r\n                                myping2 = reply.RoundtripTime.ToString();\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                break;\r\n                            }\r\n\r\n\r\n\r\n                            //Log pinged IP address in listview\r\n                            //Grabs DNS information to obtain system info\r\n                            if (reply != null \u0026\u0026 reply.Status == IPStatus.Success)\r\n                            {\r\n\r\n\r\n                                try\r\n                                {\r\n\r\n                                    addr = IPAddress.Parse(ipAddress);\r\n                                    host = Dns.GetHostEntry(addr);\r\n                                    // addr.Address.Trim();\r\n\r\n                                    //  listVAddr.Items.Add(new ListViewItem(new String[] { host.HostName, \u0022Up\u0022 })); //Log successful pings\r\n                                    host.HostName.Trim();\r\n\r\n                                    String input = host.HostName.Trim();//host.HostName.Substring(0, host.HostName.LastIndexOf(\u0022.\u0022));\r\n                                                                        // label21.Text = input;\r\n                                                                        //  MessageBox.Show(input.ToString());\r\n                                                                        //input = \u0022\u0022;\r\n                                                                        //  MessageBox.Show(ipAddress);\r\n                                    if (host.HostName.Trim() != hostName.Trim() \u0026\u0026 hostName != \u0022\u0022)\r\n                                    {\r\n                                        //  \r\n                                        //  ip_find\u002B\u002B;\r\n                                        //  count2=2;\r\n\r\n                                        count2\u002B\u002B;\r\n\r\n                                    }\r\n                                    if (host.HostName.Trim() == hostName)\r\n                                    {\r\n\r\n                                        // count2=1;\r\n\r\n                                        //  ip_find--;\r\n                                        //  MessageBox.Show(\u0022ok\u0022 \u002B host.HostName.Trim());\r\n                                        // online_ = false;\r\n                                    }\r\n\r\n\r\n                                    //  if (host.HostName!= \u0022LAPTOP-DRSLFUQS.local\u0022)\r\n                                    /// {\r\n\r\n                                    //  MessageBox.Show(input.Trim());\r\n                                    // MessageBox.Show(\u0022teste ip \u0022 \u002B input \u002B \u0022  \u0022 \u002B count);\r\n                                    // \r\n                                    //  \\\\CRIPTOQRCODE2\\\\compartilhamento\\\\\r\n                                   // rede1 = \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022;\r\n                                    // MessageBox.Show(rede1);\r\n                                    // host.HostName = \u0022\u0022;\r\n\r\n                                    online_ = true;\r\n                                    p = 1;\r\n                                    int at = 0;\r\n                                    //timer7.Stop();\r\n                                    //escrever_lock();\r\n                                    string hostName2 = System.Net.Dns.GetHostName();\r\n                                    string str = input.Substring(0, 6).Trim();\r\n                                    //  MessageBox.Show(input);\r\n\r\n                                    if (input != \u0022 \u0022 \u0026\u0026 input != hostName2\u002B\u0022.lan\u0022 \u0026\u0026 input != hostName2)\r\n                                    {\r\n\r\n                                        if (str == \u0022QRCODE\u0022)\r\n                                        {\r\n                                            ip_find\u002B\u002B;\r\n                                            \r\n                                            rede1 = \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022;\r\n                                            rede10= input.Trim();\r\n                                            //  panel12.BackColor = Color.Black;\r\n                                            //      MessageBox.Show(input);\r\n                                            try\r\n                                            {\r\n                                                atualiza_compartilhamento();\r\n                                            }\r\n                                            catch\r\n                                            {\r\n\r\n                                            }\r\n\r\n                                            // timer11.Start();\r\n                                            str = \u0022\u0022;\r\n\r\n\r\n                                        }\r\n                                        else\r\n                                        {\r\n\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                    {\r\n\r\n                                    }\r\n\r\n\r\n                                    //System.Threading.Thread.Sleep(1000);\r\n                                    // atualiza_compartilhamento();\r\n                                   // input = \u0022\u0022;\r\n\r\n                                    //  }\r\n\r\n                                    //  MessageBox.Show(count.ToString());\r\n\r\n                                    //  \r\n                                    //    MessageBox.Show(host.HostName.Trim());\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                                catch\r\n                                {\r\n\r\n                                    // listVAddr.Items.Add(new ListViewItem(new String[] { ipAddress, \u0022Could not retrieve\u0022, \u0022Up\u0022 })); //Logs pings that are successful, but are most likely not windows machines\r\n\r\n\r\n                                    //  online_ = false;\r\n                                    //  count2--;\r\n\r\n\r\n\r\n\r\n                                }\r\n                                // MessageBox.Show(\u0022teste ip \u0022 \u002B count);\r\n\r\n                                // count2 = 0;\r\n\r\n\r\n\r\n                            }\r\n                            else\r\n                            {\r\n\r\n\r\n\r\n                            }\r\n\r\n                            //  count2--;\r\n\r\n\r\n\r\n\r\n                            if (count2 == 0)\r\n                            {\r\n                                //  online_ = false;\r\n                                // count2 = 0;\r\n                            }\r\n                            if (count2 == 2)\r\n                            {\r\n\r\n                                // online_ = true;\r\n                            }\r\n\r\n\r\n\r\n                            if (count2 == 0)\r\n                            {\r\n                                // MessageBox.Show(\u0022sem rede\u0022);\r\n                            }\r\n                        }\r\n\r\n                        startIP[3] = 1; //If 4th octet reaches 255, reset back to 1\r\n\r\n\r\n                    }\r\n\r\n                  //  panel12.BackColor = Color.Black;\r\n                    //   MessageBox.Show(\u0022Scanning done!\\nFound \u0022 \u002B ip_find \u002B \u0022 hosts.\u0022, \u0022Done\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                    compr = 0;\r\n                 //   label62.Text = ip_find.ToString();\r\n                  //  ip_find = 0;\r\n\r\n\r\n                    //comp = 1;\r\n\r\n                    ///System.Threading.Thread.Sleep(2000);\r\n                    //  MessageBox.Show(\u0022ok\u0022);\r\n                    //  timer7.Start();\r\n\r\n                    //Re-enable buttons\r\n\r\n                    //    MessageBox.Show(\u0022Scanning done!\\nFound \u0022 \u002B ip_find \u002B \u0022 hosts.\u0022, \u0022Done\u0022, MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n                    //Catch exception that throws when stopping thread, caused by ping waiting to be acknowledged\r\n                   // ip_find = 0;\r\n\r\n                }\r\n                catch (ThreadAbortException tex)\r\n                {\r\n                    Console.WriteLine(tex.StackTrace);\r\n                    // txtIP.Enabled = true;\r\n                    // txtIP2.Enabled = true;\r\n\r\n                }\r\n\r\n\r\n                //Catch invalid IP types\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(ex.StackTrace);\r\n\r\n                    //txtIP.Enabled = true;\r\n                    // txtIP2.Enabled = true;\r\n\r\n                }\r\n\r\n\r\n                if (count \u003E= 2)\r\n                {\r\n                    // online_ = true;\r\n                    // if (online_ == true)\r\n                    //  {\r\n                    // label40.Visible = false;\r\n                    // panel12.BackColor = Color.GreenYellow;\r\n\r\n\r\n                    //  }\r\n                    //  if (online_ == false)\r\n                    //  {\r\n                    //  panel12.BackColor = Color.Red;\r\n                    //  label40.Visible = true;\r\n\r\n                    // }\r\n                    // online_ = false;\r\n                    //MessageBox.Show(count.ToString());\r\n                }\r\n            }\r\n           /// ip_find = 0;\r\n            //  timer9.Enabled = true;\r\n        }\r\n\r\n        private void timer7_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n            // String block = File.ReadLines(@\u0022C:\\compartilhamento\\lock.txt\u0022).ElementAtOrDefault(0);\r\n\r\n            if (comp == 1)\r\n            {\r\n                // ler_linha();\r\n                //   checa_host();\r\n                // atualiza_compartilhamento();\r\n\r\n                //    MessageBox.Show(comp.ToString());\r\n            }\r\n        }\r\n\r\n        private void label42_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        int ok = 1;\r\n        private void cria_CarregarPlanilha()\r\n        {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            try\r\n            {\r\n                File.Delete(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            try\r\n            {\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                // MessageBox.Show(count.ToString());\r\n\r\n                var pasta = app.Workbooks.Open(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n\r\n                var plan = pasta.Worksheets[\u0022Planilha1\u0022];\r\n                // plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n                plan.Columns.AutoFit();\r\n                int lastRow = plan.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing).Row;\r\n                plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n                plan.Cells[1, 1] = \u0022NUMBER\u0022;\r\n                plan.Cells[1, 2] = \u0022NAME\u0022;\r\n                plan.Cells[1, 3] = \u0022COMPANY\u0022;\r\n                plan.Cells[1, 4] = \u0022FUNCTION\u0022;\r\n                plan.Cells[1, 5] = \u0022ID\u0022;\r\n                plan.Cells[1, 6] = \u0022EMAIL\u0022;\r\n                plan.Cells[1, 7] = \u0022VESSEL\u0022;\r\n                plan.Cells[1, 8] = \u0022CHECK-IN VALIDATION\u0022;\r\n                plan.Cells[1, 9] = \u0022CHECK-OUT VALIDATION\u0022;\r\n\r\n\r\n                for (int a = 0; a \u003C count; a\u002B\u002B)\r\n                {\r\n                    ok\u002B\u002B;\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(a);\r\n                    //  ss\u002B\u002B;\r\n                    //  String local = secondLine.Split(\u0027:\u0027)[0].Trim();\r\n\r\n                    //   txtCodigoFunci.Text = lastRow.ToString();\r\n                    lastRow\u002B\u002B;\r\n                    plan.Cells[ok, 1] = secondLine.Split(\u0027:\u0027)[0].Trim();\r\n                    // plan.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.Red);\r\n                    plan.Cells[ok, 2] = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                    plan.Cells[ok, 3] = secondLine.Split(\u0027:\u0027)[2].Trim();\r\n                    plan.Cells[ok, 4] = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                    plan.Cells[ok, 5] = secondLine.Split(\u0027:\u0027)[4].Trim();\r\n                    plan.Cells[ok, 6] = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                    plan.Cells[ok, 7] = secondLine.Split(\u0027:\u0027)[6].Trim();\r\n                    plan.Cells[ok, 8] = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                    plan.Cells[ok, 9] = secondLine.Split(\u0027:\u0027)[8].Trim();\r\n                    // plan.Cells[lastRow, 10] = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                    // plan.Cells[lastRow, 11] = secondLine.Split(\u0027:\u0027)[10].Trim();\r\n                    // MessageBox.Show(\u0022ok\u0022);\r\n                }\r\n                //  plan.quit();\r\n\r\n                pasta.SaveAs(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, false, false, Excel.XlSaveAsAccessMode.xlNoChange,\r\n                Type.Missing, Type.Missing, Type.Missing, Type.Missing);\r\n                // pasta.Save();\r\n                pasta.Close();\r\n                // plan.Close();\r\n                MessageBox.Show(\u0022Backup concluido com sucesso!\u0022);\r\n\r\n                //  atualiza_compartilhamento();\r\n\r\n\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message);\r\n            }\r\n            //CarregarPlanilha();\r\n\r\n        }\r\n        void PausaComThreadSleep()\r\n        {\r\n            Thread.Sleep(5000);\r\n        }\r\n        async Task PausaComTaskDelay()\r\n        {\r\n            await Task.Delay(5000);\r\n        }\r\n        string secondLine2;\r\n        string secondLine5;\r\n        private void update()\r\n        {\r\n\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n\r\n                File.Delete(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                int ss = 7;\r\n\r\n                try\r\n                {\r\n                    var wbook = new XLWorkbook(drives.FirstOrDefault().Name.ToString() \u002B \u0022//Controle de Acesso.xlsx\u0022);\r\n                    var ws1 = wbook.Worksheet(1);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tFun\u00E7\u00E3o\tE-mail\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n\r\n                    //Number : 4 : Name : ARTHUR LOPES : Compay : ALTN :Funcition:  COORDENADOR DE LOGISTICA  :Id: 6376702601 : E-mail : altn.comercial@gmail.com : Vessel : Skandi Rio : Project : Docagem : ASO : 31/01/2023 : NR-34 : 00/00/0000 : Vaccine-1 : 00/00/0000 : Vaccine-2 : 00/00/0000 : Booster vaccine : 00/00/0000 :  : COMUM : :Conv\u00E9s\r\n                    //  int count = File.ReadAllLines(@\u0022D:/Controle de Acesso.xlsx\u0022).Length;\r\n\r\n                    var columnCount = ws1.LastRowUsed().RowNumber();\r\n                    //  MessageBox.Show(columnCount.ToString());\r\n                    for (int i = 0; i \u003C (columnCount) - 7; i\u002B\u002B)\r\n                    {\r\n                        ss\u002B\u002B;\r\n                        String muda = ss.ToString();\r\n                        var data1 = ws1.Cell(\u0022B\u0022 \u002B muda).GetValue\u003Cstring\u003E();// numero\r\n                        var data2 = ws1.Cell(\u0022D\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                        var data3 = ws1.Cell(\u0022C\u0022 \u002B muda).GetValue\u003Cstring\u003E();//  empresa \r\n                        var data4 = ws1.Cell(\u0022G\u0022 \u002B muda).GetValue\u003Cstring\u003E();// CPF\r\n                        var data5 = ws1.Cell(\u0022H\u0022 \u002B muda).GetValue\u003Cstring\u003E();// fun\u00E7\u00E3o\r\n                        var data6 = ws1.Cell(\u0022I\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // E-mail\r\n                        var data7 = ws1.Cell(\u0022J\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // ASO\r\n                        var data8 = ws1.Cell(\u0022K\u0022 \u002B muda).GetValue\u003Cstring\u003E(); //  dose 1\r\n                        var data9 = ws1.Cell(\u0022L\u0022 \u002B muda).GetValue\u003Cstring\u003E(); //  dose 2\r\n                        var data10 = ws1.Cell(\u0022M\u0022 \u002B muda).GetValue\u003Cstring\u003E();//  data refor\u00E7o1\r\n                        var data11 = ws1.Cell(\u0022N\u0022 \u002B muda).GetValue\u003Cstring\u003E();// data1 refor\u00E7o 2\r\n                                                                             // var data12 = ws1.Cell(\u0022K\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // NR34\r\n                                                                             //   var data13 = ws1.Cell(\u0022E\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                        var data14 = ws1.Cell(\u0022F\u0022 \u002B muda).GetValue\u003Cstring\u003E(); // Nome\r\n                                                                              //   lineChanger(\u0022Number:\u0022 \u002B data1 \u002B \u0022:Name:\u0022 \u002B data2 \u002B \u0022:Company:\u0022 \u002B data3 \u002B \u0022:Function:\u0022 \u002B data4, \u0022D:\\\\data2.txt\u0022,ss);\r\n\r\n\r\n                        using (StreamWriter writer = new StreamWriter(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                        {\r\n                            string teste2 = \u0022Number: \u0022 \u002B data1 \u002B \u0022 : Name :\u0022 \u002B data2 \u002B \u0022 : Company : \u0022 \u002B data3 \u002B \u0022 : Function : \u0022 \u002B data5\u002B \u0022: Id : \u0022 \u002B data14 \u002B \u0022: E-mail : \u0022 \u002B data6 \u002B \u0022: Vessel : \u0022 \u002B comboBox1.Text \u002B \u0022: Project : \u0022 \u002B richTextBox9.Text\u002B \u0022: ASO : \u0022 \u002B data7 \u002B \u0022: NR34 : \u0022 \u002B data8 \u002B \u0022: NR-10 : \u0022 \u002B data9 \u002B \u0022: NR-33 : \u0022 \u002B data10 \u002B \u0022: NR-35 :\u0022 \u002B data11;\r\n                            writer.WriteLine(teste2);\r\n                            writer.Close();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    try\r\n                    {\r\n                        System.IO.File.Copy(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, @\u0022C:\\compartilhamento\\data_txt\\data2_backup.txt\u0022, true);\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    File.Delete(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                    string text = File.ReadAllText(drives.FirstOrDefault().Name.ToString() \u002B \u0022//data2.txt\u0022);\r\n                    text = text.Replace(\u002200:00:00\u0022, \u0022\u0022);\r\n                    File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, text);\r\n\r\n\r\n                }\r\n                catch\r\n                {\r\n\r\n                }\r\n                label43.Text = \u0022UPDATE CONDLUIDO COM SUCESSO!\u0022;\r\n            }\r\n            else\r\n            {\r\n                label43.Text = \u0022\u0022;\r\n                MessageBox.Show(\u0022PENDRIVE OU ARQUIVO N\u00C3O ENCONTRADO\u0022);\r\n            }\r\n            //  MessageBox.Show(\u0022PENDRIVE N\u00C3O ENCONTRADA\u0022);\r\n\r\n\r\n        }\r\n        private void button39_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n            ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo.RedirectStandardOutput = true;\r\n            startInfo.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo);\r\n            */\r\n            //https://zetcode.com/csharp/excel/ dicas excel\r\n            label43.Text = \u0022AGUARDE, FAZENDO UPDATE DA PLANILHA!\u0022;\r\n            update();\r\n\r\n          \r\n\r\n            //  PausaComThreadSleep();\r\n\r\n            //  panel15.Visible = true;\r\n            /// label43.Text = \u0022UPDATE CONDLUIDO COM SUCESSO!\u0022;\r\n        }\r\n        public bool RemoveFirstLinesFromFile(string filePath, int skip)\r\n        {\r\n            if (!File.Exists(filePath))\r\n                return false;\r\n            try\r\n            {\r\n                var filePathOld = Path.Combine(filePath, \u0022.old\u0022);\r\n                File.Move(filePath, filePathOld);\r\n                File.WriteAllLines(filePath, File.ReadAllLines(filePathOld).Skip(skip));\r\n                return true;\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        private void button38_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n            ProcessStartInfo startInfo = new ProcessStartInfo(\u0022cmd\u0022, \u0022/K netsh interface set interface \\\u0022Ethernet\\\u0022 DISABLED\u0022);\r\n            startInfo.RedirectStandardOutput = true;\r\n            startInfo.UseShellExecute = false;\r\n            // Do not create the black window.\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.WindowStyle = ProcessWindowStyle.Hidden;\r\n            Process.Start(startInfo);\r\n           */\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n                label43.Text = \u0022BACKUP CRIADO COM SUCESSO!\u0022;\r\n\r\n                lblname.Text = drives.FirstOrDefault().Name.ToString();\r\n                string fileName = \u0022novo.xlsx\u0022;\r\n                string sourcePath = @\u0022C:\\compartilhamento\\data_base\u0022;\r\n                string targetPath = drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022;\r\n\r\n                var dbExporter = new DatabaseExporter();\r\n                dbExporter.ExportDataToExcel(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022, targetPath \u002B \u0022backup.xlsx\u0022);\r\n\r\n                string destFile = System.IO.Path.Combine(targetPath, fileName) ;\r\n                System.IO.Directory.CreateDirectory(targetPath);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n              /*  if (!Directory.Exists(targetPath))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(targetPath);\r\n\r\n                }\r\n              \r\n\r\n\r\n                if (System.IO.Directory.Exists(sourcePath))\r\n                {\r\n                    string[] files = System.IO.Directory.GetFiles(sourcePath);\r\n\r\n                    foreach (string s in files)\r\n                    {\r\n\r\n                        fileName = System.IO.Path.GetFileName(s);\r\n                        destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                        System.IO.File.Copy(s, destFile, true);\r\n                    }\r\n\r\n                    // cria_CarregarPlanilha();\r\n                   ;\r\n\r\n\r\n                    try\r\n                    {\r\n                        File.Delete(@\u0022D:\\Result.txt\u0022);\r\n                        File.Delete(@\u0022D:\\teste.txt\u0022);\r\n                        File.Delete(@\u0022D:\\teste3.txt\u0022);\r\n                    }\r\n                    catch\r\n                    {\r\n\r\n                    }\r\n                    string tempo = DateTime.Now.ToString(\u0022dd_MM_yyyy_hh_mm_ss\u0022);\r\n                    /// MessageBox.Show(\u0022Backup creaded with success\u0022);\r\n                    File.Copy(lblname.Text \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\novo.xlsx\u0022, lblname.Text \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022 \u002B tempo \u002B \u0022.xlsx\u0022);\r\n                    label43.Text = \u0022BACKUP CRIADO COM SUCESSO!\u0022;\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n\r\n\r\n                else\r\n                {\r\n                    Console.WriteLine(\u0022Source path does not exist!\u0022);\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }*/\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        private string ReplaceFirst(string thise, string oldValue, string newValue)\r\n        {\r\n            int startindex = thise.IndexOf(oldValue);\r\n\r\n            if (startindex == -1)\r\n            {\r\n                return thise;\r\n            }\r\n\r\n            return thise.Remove(startindex, oldValue.Length).Insert(startindex, newValue);\r\n        }\r\n\r\n        private void back_up()\r\n        {\r\n            try\r\n            {\r\n                int ss = 7;\r\n                /// ler excel\r\n                /*\r\n                using ClosedXML.Excel;\r\n\r\n                using var wbook = new XLWorkbook(\u0022simple.xlsx\u0022);\r\n\r\n                var ws1 = wbook.Worksheet(1);\r\n                var data = ws1.Cell(\u0022A1\u0022).GetValue\u003Cstring\u003E();\r\n                */\r\n                //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tEmail\tFun\u00E7\u00E3o\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n                // Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();\r\n                // if (xlApp == null)\r\n\r\n                /// {\r\n                //  MessageBox.Show(\u0022Excel is not properly installed!!\u0022);\r\n                // return;\r\n                //   }\r\n\r\n\r\n\r\n\r\n                int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                var wb = new XLWorkbook();\r\n\r\n                //  wb.Application.OnKey(\u0022^v\u0022, \u0022\u0022);\r\n\r\n\r\n                var ws = wb.Worksheets.Add(\u0022Planilha1\u0022);\r\n                ws.Range(\u0022B7\u0022, \u0022V7\u0022).Style.Fill.BackgroundColor = XLColor.FromArgb(91, 155, 213); //Color.FromArgb(91, 155, 213);\r\n                ws.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center);\r\n                ws.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center);\r\n                ws.Column(7).Width = 35;\r\n                ws.Row(7).Height = 50;\r\n                ws.Cell(\u0022B7\u0022).Value = \u0022ID Capacete  Identifica\u00E7\u00E3o\u0022;//1\r\n                ws.Cell(\u0022C7\u0022).Value = \u0022Empresa\u0022;//5\r\n                ws.Cell(\u0022D7\u0022).Value = \u0022Nome Completo\u0022;//3\r\n                ws.Cell(\u0022F7\u0022).Value = \u0022Identidade\u0022;\r\n                ws.Cell(\u0022G7\u0022).Value = \u0022CPF\u0022;//34\r\n                ws.Cell(\u0022I7\u0022).Value = \u0022Email\u0022;//11\r\n                ws.Cell(\u0022H7\u0022).Value = \u0022Fun\u00E7\u00E3o\u0022;//7\r\n                ws.Cell(\u0022J7\u0022).Value = \u0022Data  ASO\u0022;//13\r\n                ws.Cell(\u0022V7\u0022).Value = \u0022Data  NR34\u0022;//15\r\n                ws.Cell(\u0022K7\u0022).Value = \u0022Data dose 1\u0022;//17\r\n                ws.Cell(\u0022L7\u0022).Value = \u0022Data dose 2\u0022;//19\r\n                ws.Cell(\u0022M7\u0022).Value = \u0022Data Refor\u00E7o 1\u0022;//21\r\n                ws.Cell(\u0022N7\u0022).Value = \u0022Data Refor\u00E7o 2\u0022;//23\r\n\r\n\r\n                /// ClosedXML.Excel.CutCopyMode = XlCutCopyMode.xlCopy;\r\n                // Microsoft.Office.Interop.Excel.Worksheet wks = (Microsoft.Office.Interop.Excel.Worksheet)ws.Worksheets(1);\r\n                // wks.Application.CutCopyMode = (Microsoft.Office.Interop.Excel.XlCutCopyMode)0;\r\n                // wb.Worksheets.Application.CutCopyMode = 0;\r\n                //XlCutCopyMode.xlCopy = false;\r\n                ///  Application.CutCopyMode = (Microsoft.Office.Interop.Excel.XlCutCopyMode)0;\r\n                //ws.CutCopyMode = false;\r\n                for (int a = 0; a \u003C count; a\u002B\u002B)\r\n                {\r\n\r\n                    string secondLine = File.ReadLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).ElementAtOrDefault(a);\r\n\r\n                    ss\u002B\u002B;\r\n\r\n                    ws.Cell(\u0022B\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[1].Trim();\r\n                    ws.Cell(\u0022C\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[5].Trim();\r\n                    ws.Cell(\u0022D\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[3].Trim();\r\n                    ws.Cell(\u0022F\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[9].Trim();\r\n                    ws.Cell(\u0022I\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[11].Trim();\r\n                    ws.Cell(\u0022H\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[7].Trim();\r\n                    ws.Cell(\u0022G\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[15].Trim();\r\n                    ws.Cell(\u0022J\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[17].Trim();\r\n                    ws.Cell(\u0022K\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                    ws.Cell(\u0022L\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[21].Trim();\r\n                    ws.Cell(\u0022M\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[23].Trim();\r\n                    ws.Cell(\u0022N\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[25].Trim();\r\n                    ws.Cell(\u0022V\u0022 \u002B ss).Value = secondLine.Split(\u0027:\u0027)[19].Trim();\r\n                }\r\n                ws.Columns().AdjustToContents();\r\n\r\n                try\r\n                {\r\n                    var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n                    wb.SaveAs(drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\Controle de Acesso_backup.xlsx\u0022);\r\n\r\n                }\r\n                catch\r\n                {\r\n                    // \r\n                }\r\n            }catch\r\n            {\r\n\r\n                MessageBox.Show(\u0022PENDRIVE N\u00C3O ENCONTRADA\u0022);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        private void button40_Click(object sender, EventArgs e)\r\n        {\r\n       \r\n            panel15.Visible = false;\r\n            System.Windows.Forms.Application.Restart();\r\n\r\n        }\r\n\r\n        private void panel15_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox7_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n    \r\n        private void timer10_Tick(object sender, EventArgs e)\r\n        {\r\n            /// DirectoryCanListFiles(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n            /// \u0022\\\\\\\\\u0022 \u002B input.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022\r\n            // MessageBox.Show(MyhostName); \r\n            //   MessageBox.Show(rede1);\r\n\r\n            string nome3;\r\n            Boolean rec2 = false;\r\n            // string myIP = Dns.GetHostByName(\u0022QRCODE-50\u0022).AddressList[1].ToString();\r\n            //label64.Text = myIP;\r\n          //  textBox22.Text = \u0022 \u0022;\r\n            nome3 = \u0022\u0022;\r\n\r\n            try\r\n            {\r\n\r\n                if (rede1 != null) {\r\n\r\n\r\n\r\n                    if (rede1 != \u0022\\\\\\\\\u0022 \u002B MyhostName.Trim() \u002B \u0022\\\\compartilhamento\\\\\u0022)\r\n                    {\r\n\r\n                        // MessageBox.Show(rede1);\r\n                        nome3 = rede1;\r\n                        if (rede1 != \u0022\u0022)\r\n                        {\r\n                            string nome = rede1.Split(\u0027\\\\\u0027)[2].Trim();\r\n                            string nome2 = nome.Remove(nome.Length - 6);\r\n                          //  textBox22.Text = nome \u002B \u0022 Online\u0022;\r\n                            //myString.Remove(myString.Length-3)\r\n                            //  panel12.BackColor = Color.YellowGreen;\r\n\r\n\r\n                            // \r\n\r\n                            if (rec == true)\r\n                            {\r\n                                DateTime fdata0 = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022);\r\n                                DateTime fdata1 = File.GetLastWriteTime(rede1.Trim() \u002B \u0022data_txt\\\\data2.txt\u0022);\r\n                                if (fdata1 == fdata0)\r\n                                {\r\n                                    int count = File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022).Length;\r\n                                    label3.Text = count.ToString().Trim();\r\n                                    \r\n                                    //   saida_manual();\r\n                                    rec = false;\r\n\r\n                                }\r\n                              //  if (fdata1 != fdata0)\r\n                                //{\r\n                                 //   saida_manual();\r\n\r\n                               // }\r\n                            }\r\n                            //  }\r\n                            else\r\n                            {\r\n\r\n                            }\r\n                        }\r\n                      //  rede1 = \u0022\u0022;\r\n\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        //  MessageBox.Show(\u0022nulo\u0022);\r\n                    }\r\n                }\r\n                if (entrou == true)\r\n                {\r\n                   \r\n                }\r\n                \r\n            }\r\n            catch\r\n            {\r\n               // textBox22.Text = \u0022\u0022;\r\n            }\r\n            // rede1 = \u0022\u0022;\r\n\r\n\r\n\r\n        }\r\n        \r\n\r\n        \r\n        private void textBox14_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox14_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            string text = System.IO.File.ReadAllText(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            listBox1.Items.Clear();\r\n            foreach (string s in Regex.Split(text, textBox14.Text))\r\n            {\r\n\r\n                listBox1.Items.Add(s);\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        private void richTextBox2_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (richTextBox2.Text == \u0022\u0022) {\r\n                label44.Visible = true;\r\n                label50.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label44.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void maskedTextBox1_TextChanged(object sender, EventArgs e)\r\n        {\r\n            if (maskedTextBox1.Text == \u0022  /  /\u0022)\r\n            {\r\n                label49.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label49.Visible = false;\r\n            }\r\n        }\r\n\r\n        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void txtResult_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void textBox10_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void label53_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            Font myfont = new Font(\u0022Arial\u0022, 14);\r\n            Brush mybrush = new System.Drawing.SolidBrush(System.Drawing.Color.Black);\r\n            e.Graphics.TranslateTransform(90, 90);\r\n            e.Graphics.RotateTransform(90);\r\n            e.Graphics.DrawString(\u0022teste12345678\u0022, myfont, mybrush, 0, 0);\r\n        }\r\n\r\n        private void button41_Click(object sender, EventArgs e)\r\n        {\r\n            label34.Text = comboBox1.Text;\r\n        }\r\n\r\n        private void comboBox1_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n            label63.Text = comboBox1.Text;\r\n            if (comboBox1.Text.Trim() == \u0022\u0022)\r\n            {\r\n                label54.Visible = true;\r\n         \r\n                // label50.Visible = true;\r\n            }\r\n            else\r\n            {\r\n                label54.Visible = false;\r\n           \r\n\r\n            }\r\n\r\n\r\n\r\n            listBox1.Items.Clear();\r\n            textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (comboBox1.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                comboname = comboBox1.Text.Trim();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox1.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                       // label67.Text = label27.Text;\r\n\r\n          \r\n                    }\r\n                }\r\n                if (lista_ == 0)\r\n                {\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    //  if (linha22.Contains(\u0022\\n\u0022))\r\n                    // {\r\n                    listBox1.Items.Add(linha22);\r\n                    lista_\u002B\u002B;\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n\r\n\r\n                    // }\r\n                }\r\n                if (lista_ == 0)\r\n                {\r\n                    label27.Text = lista_.ToString();\r\n                    //label67.Text = label27.Text;\r\n                }\r\n            }\r\n            if (richTextBox16.Text == \u0022\u0022)\r\n            {\r\n                // button1.PerformClick();\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        Boolean existe = false;\r\n        private void button42_Click(object sender, EventArgs e)\r\n        {\r\n            existe = false;\r\n            try\r\n            {\r\n\r\n                string result = string.Empty;\r\n                var lines = File.ReadAllLines(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                foreach (var line in lines)\r\n                {\r\n                    if (line.Contains(textBox17.Text))\r\n                    {\r\n                        //var text = line.Replace(\u0022Customer ID :\u0022, \u0022\u0022);\r\n                        //result = text.Trim();\r\n                        existe = true;\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (existe == true)\r\n                {\r\n                    MessageBox.Show(\u0022 Nome ja existente\u0022);\r\n\r\n                }\r\n\r\n                else\r\n                {\r\n\r\n\r\n                    comboBox1.Items.Clear();\r\n                    using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\vessels.txt\u0022, true)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                    {\r\n                        // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                        writer.WriteLine(textBox17.Text);\r\n                        writer.Close();\r\n                    }\r\n\r\n                    MessageBox.Show(\u0022nome cadastrado com sucesso!\u0022);\r\n                    StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                    string x = sr.ReadToEnd();\r\n                    string[] y = x.Split(\u0027\\n\u0027);\r\n                    foreach (string s in y)\r\n                    {\r\n                        comboBox1.Items.Add(s);\r\n                    }\r\n                    sr.Close();\r\n\r\n\r\n                    //  comboBox1.Items.Add(textBox17.Text.Trim());\r\n\r\n\r\n\r\n\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                MessageBox.Show(ex.ToString());\r\n            }\r\n\r\n            //  ListBox1.Items.Add(TextBox1.Text)\r\n            //  Else\r\n            //     MessageBox.Show(\u0022Item ja existente\u0022, Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Information)\r\n            //  End If\r\n        }\r\n\r\n        private void button41_Click_1(object sender, EventArgs e)\r\n        {\r\n            //panel16.Visible = false;\r\n            pcad.Visible = false;\r\n        }\r\n\r\n        private void checkBox1_CheckStateChanged(object sender, EventArgs e)\r\n        {\r\n            //if(checkBox1.CheckState == )\r\n        }\r\n\r\n        private void textBox16_TextChanged(object sender, EventArgs e)\r\n        {\r\n            // button1.PerformClick();\r\n            listBox1.Items.Clear();\r\n\r\n            // lista2_ = 0;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n\r\n            foreach (string linha22 in linhas22)\r\n            {\r\n                if (linha22.Contains(textBox16.Text.Trim()))\r\n                {\r\n                    //   listBox1.Items.Add(linha22);\r\n                    //lista2_\u002B\u002B;\r\n                    //label27.Text = lista_.ToString();\r\n                }\r\n            }\r\n\r\n            if (comboBox2.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                listBox1.Items.Clear();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(textBox16.Text.Trim()) \u0026\u0026 linha22.Contains(comboBox2.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n\r\n                        //  lista_\u002B\u002B;\r\n                        //  label27.Text = lista_.ToString();\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                listBox1.Items.Clear();\r\n                lista_ = 0;\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(textBox16.Text.Trim()))\r\n                        // {\r\n                        listBox1.Items.Add(linha22);\r\n\r\n                    // lista_\u002B\u002B;\r\n                    // label27.Text = lista_.ToString();\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        private void comboBox2_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n            listBox1.Items.Clear();\r\n            pictureBox4.Visible = false;\r\n            textBox16.Text = \u0022\u0022;\r\n            string[] linhas22 = System.IO.File.ReadAllLines(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (comboBox2.Text.Trim() != \u0022ALL\u0022)\r\n            {\r\n                lista_ = 0;\r\n               // label67.Text = lista_.ToString();\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    if (linha22.Contains(comboBox2.Text.Trim()))\r\n                    {\r\n                        listBox1.Items.Add(linha22);\r\n                        lista_\u002B\u002B;\r\n                        label27.Text = lista_.ToString();\r\n                       /// label67.Text = lista_.ToString();\r\n\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                lista_ = 0;\r\n               // label67.Text = lista_.ToString();\r\n                foreach (string linha22 in linhas22)\r\n                {\r\n                    //  if (linha22.Contains(\u0022\\n\u0022))\r\n                    // {\r\n                    listBox1.Items.Add(linha22);\r\n                    lista_\u002B\u002B;\r\n                    label27.Text = lista_.ToString();\r\n                  //  label67.Text = lista_.ToString();\r\n\r\n\r\n                    // }\r\n                }\r\n\r\n                if (lista_ == 0)\r\n                {\r\n                    // label27.Text = lista_.ToString();\r\n                }\r\n\r\n            }\r\n            button1.PerformClick();\r\n            if (richTextBox16.Text == \u0022 \u0022)\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        private void comboBox1_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (richTextBox3.Text != \u0022\u0022)\r\n            {\r\n                comboBox1.Items.Clear();\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\vessels.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                string[] y = x.Split(\u0027\\n\u0027);\r\n                foreach (string s in y)\r\n                {\r\n                    comboBox1.Items.Add(s);\r\n                }\r\n                sr.Close();\r\n            }\r\n        }\r\n\r\n        private void textBox19_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void regs_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            if (pcad.Visible == false)\r\n            {\r\n                pcad.Visible = true;\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                sr.Close();\r\n\r\n                IP_START.Text = x.Split(\u0027,\u0027)[0].Trim();\r\n                IP_STOP.Text = x.Split(\u0027,\u0027)[1].Trim();\r\n\r\n            }\r\n            else\r\n            {\r\n                pcad.Visible = false;\r\n            }\r\n        }\r\n        static string ReplaceLastLetter(string text, string newLetter)\r\n        {\r\n            string substring = text.Substring(0, text.Length - 1); // ABC -\u003E AB\r\n            return substring \u002B newLetter; // ABD\r\n        }\r\n        private void button43_Click(object sender, EventArgs e)\r\n        {\r\n            // string text = \u0022Guatavo,1234567890,\u0022;\r\n            // string newLetter = \u0022,Rosana,123456,\u0022;\r\n\r\n\r\n            //  string replaced = ReplaceLastLetter(text, newLetter);\r\n            //  MessageBox.Show(replaced);\r\n\r\n\r\n\r\n            if (comboBox3.Text != \u0022\u0022 \u0026\u0026 textBox19.Text != \u0022\u0022 \u0026\u0026 textBox21.Text != \u0022\u0022 \u0026\u0026 textBox20.Text != \u0022\u0022)\r\n            {\r\n                StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n                string x = sr.ReadToEnd();\r\n                sr.Close();\r\n\r\n                string replaced = x.Replace(comboBox3.Text, textBox21.Text).Replace(textBox19.Text, textBox20.Text);\r\n\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                    writer.Write(replaced);\r\n                    writer.Close();\r\n                }\r\n                MessageBox.Show(\u0022CONCLUIDO COM SUCESSO!\u0022);\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022INFORME OS DADOS PARA CADASTRO OU ALTERA\u00C7\u00C3O\u0022);\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button44_Click(object sender, EventArgs e)\r\n        {\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n            int numVirgulas = x.Split(\u0027,\u0027).Length;\r\n\r\n            if (numVirgulas \u003E= 16)\r\n            {\r\n                MessageBox.Show(\u0022O N\u00DAMRO DE USU\u00C1RIOS J\u00C1 EST\u00C1 PREEENCHIDO!\u0022);\r\n\r\n            }\r\n            else\r\n            {\r\n                string text = x;\r\n                string newLetter = \u0022,\u0022 \u002B comboBox3.Text \u002B \u0022,\u0022 \u002B textBox19.Text \u002B \u0022,\u0022;\r\n                string replaced = ReplaceLastLetter(text, newLetter);\r\n\r\n                using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n                {\r\n                    // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                    writer.Write(replaced);\r\n                    writer.Close();\r\n                }\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n\r\n        private void button45_Click(object sender, EventArgs e)\r\n        {\r\n            pcad.Visible = false;\r\n           // System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void button46_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)\r\n        {\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[1];\r\n            String pass1 = x.Split(\u0027,\u0027)[3];\r\n            String pass2 = x.Split(\u0027,\u0027)[5];\r\n            String pass3 = x.Split(\u0027,\u0027)[7];\r\n            String pass4 = x.Split(\u0027,\u0027)[9];\r\n            String pass5 = x.Split(\u0027,\u0027)[11];\r\n\r\n            if (comboBox3.SelectedIndex == 0)\r\n            {\r\n                textBox19.Text = pass0;\r\n            }\r\n            if (comboBox3.SelectedIndex == 1)\r\n            {\r\n                textBox19.Text = pass1;\r\n            }\r\n            if (comboBox3.SelectedIndex == 2)\r\n            {\r\n                textBox19.Text = pass2;\r\n            }\r\n            if (comboBox3.SelectedIndex == 3)\r\n            {\r\n                textBox19.Text = pass3;\r\n            }\r\n            if (comboBox3.SelectedIndex == 4)\r\n            {\r\n                textBox19.Text = pass4;\r\n            }\r\n            if (comboBox3.SelectedIndex == 5)\r\n            {\r\n                textBox19.Text = pass5;\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        private void comboBox3_SelectedValueChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void comboBox3_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n\r\n\r\n\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[0];\r\n            String pass1 = x.Split(\u0027,\u0027)[2];\r\n            String pass2 = x.Split(\u0027,\u0027)[4];\r\n            String pass3 = x.Split(\u0027,\u0027)[6];\r\n            String pass4 = x.Split(\u0027,\u0027)[8];\r\n            String pass5 = x.Split(\u0027,\u0027)[10];\r\n\r\n            comboBox3.Items.Clear();\r\n            comboBox3.Items.Insert(0, pass0);\r\n            comboBox3.Items.Insert(1, pass1);\r\n            comboBox3.Items.Insert(2, pass2);\r\n            comboBox3.Items.Insert(3, pass3);\r\n            comboBox3.Items.Insert(4, pass4);\r\n            comboBox3.Items.Insert(5, pass5);\r\n\r\n\r\n        }\r\n\r\n        private void comuser_MouseClick(object sender, MouseEventArgs e)\r\n        {\r\n            StreamReader sr = new StreamReader(@\u0022C:\\compartilhamento\\pass\\pass.txt\u0022);\r\n            string x = sr.ReadToEnd();\r\n            sr.Close();\r\n\r\n\r\n            String pass0 = x.Split(\u0027,\u0027)[0];\r\n            String pass1 = x.Split(\u0027,\u0027)[2];\r\n            String pass2 = x.Split(\u0027,\u0027)[4];\r\n            String pass3 = x.Split(\u0027,\u0027)[6];\r\n            String pass4 = x.Split(\u0027,\u0027)[8];\r\n            String pass5 = x.Split(\u0027,\u0027)[10];\r\n\r\n            comuser.Items.Clear();\r\n            comuser.Items.Insert(0, pass0);\r\n            comuser.Items.Insert(1, pass1);\r\n            comuser.Items.Insert(2, pass2);\r\n            comuser.Items.Insert(3, pass3);\r\n            comuser.Items.Insert(4, pass4);\r\n            comuser.Items.Insert(5, pass5);\r\n        }\r\n\r\n        private void pictureBox3_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button46_Click_1(object sender, EventArgs e)\r\n        {\r\n            using (StreamWriter writer = new StreamWriter(@\u0022C:\\compartilhamento\\IP_NEW.txt\u0022, false)) //@\u0022\\data_full\\vessel\\local_list.txt(\u0022C:\\\\data_full\\\\local.txt\u0022, true))\r\n            {\r\n                // writer.WriteLine(textBox1.Text \u002B \u0022,\u0022 \u002B textBox2.Text \u002B \u0022,\u0022 \u002B textBox3.Text \u002B \u0022,\u0022 \u002B comboBox2.Text \u002B \u0022,\u0022);\r\n                writer.Write(IP_START.Text \u002B \u0022,\u0022 \u002B IP_STOP.Text);\r\n                writer.Close();\r\n            }\r\n            System.Windows.Forms.Application.Restart();\r\n        }\r\n\r\n        private void regs_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n        public static bool HasWriteAccessToFolder(string folderPath)\r\n        {\r\n            try\r\n            {\r\n                // Attempt to get a list of security permissions from the folder. \r\n                // This will raise an exception if the path is read only or do not have access to view the permissions. \r\n                System.Security.AccessControl.DirectorySecurity ds = Directory.GetAccessControl(folderPath);\r\n                MessageBox.Show(\u0022sim\u0022);\r\n                return true;\r\n            }\r\n            catch (UnauthorizedAccessException)\r\n            {\r\n                MessageBox.Show(\u0022n\u00E3o\u0022);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public static String RemoveEnd(String str, int len)\r\n        {\r\n            if (str.Length \u003C len)\r\n            {\r\n                return string.Empty;\r\n            }\r\n\r\n            return str.Remove(str.Length - len);\r\n        }\r\n\r\n\r\n        private void button47_Click(object sender, EventArgs e)\r\n\r\n\r\n        {\r\n            apaga_palavra_txt();\r\n\r\n        }\r\n\r\n        private void button50_Click(object sender, EventArgs e)\r\n        {\r\n            var drives = DriveInfo.GetDrives().Where(drive =\u003E drive.IsReady \u0026\u0026 drive.DriveType == DriveType.Removable);\r\n            if (drives.FirstOrDefault() != null)\r\n            {\r\n\r\n                lblname.Text = drives.FirstOrDefault().Name.ToString();\r\n                string fileName = \u00222022_02_22.xls\u0022;\r\n                string sourcePath = @\u0022C:\\compartilhamento\\data_base\u0022;\r\n                string targetPath = drives.FirstOrDefault().Name.ToString() \u002B \u0022\\\\CRIPTOQRCODE_AllBackup\\\\\u0022;\r\n\r\n                string destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                System.IO.Directory.CreateDirectory(targetPath);\r\n\r\n                // string folder = @\u0022D:\\CRIPTOQRCODE_AllBackup\\\u0022; //nome do diretorio a ser criado\r\n\r\n                //Se o diret\u00F3rio n\u00E3o existir...\r\n\r\n                if (!Directory.Exists(targetPath))\r\n                {\r\n\r\n                    //Criamos um com o nome folder\r\n                    Directory.CreateDirectory(targetPath);\r\n\r\n                }\r\n\r\n\r\n\r\n                if (System.IO.Directory.Exists(sourcePath))\r\n                {\r\n                    string[] files = System.IO.Directory.GetFiles(sourcePath);\r\n\r\n                    foreach (string s in files)\r\n                    {\r\n\r\n                        fileName = System.IO.Path.GetFileName(s);\r\n                        destFile = System.IO.Path.Combine(targetPath, fileName);\r\n                        System.IO.File.Copy(s, destFile, true);\r\n                    }\r\n\r\n                    cria_CarregarPlanilha();\r\n                    MessageBox.Show(\u0022Backup creaded with success\u0022);\r\n\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n\r\n\r\n                else\r\n                {\r\n                    Console.WriteLine(\u0022Source path does not exist!\u0022);\r\n                    if (textBox7.SelectionLength \u003E= 0)\r\n                    {\r\n                        textBox7.Focus();\r\n                        textBox7.Text = \u0022\u0022;\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\u0022No Pendrive found..\u0022);\r\n                if (textBox7.SelectionLength \u003E= 0)\r\n                {\r\n                    textBox7.Focus();\r\n                    textBox7.Text = \u0022\u0022;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        private void button49_Click(object sender, EventArgs e)\r\n        {\r\n            //https://zetcode.com/csharp/excel/ dicas excel\r\n            SautinSoft.UseOffice u = new SautinSoft.UseOffice();\r\n\r\n            string inpFile = Path.GetFullPath(@\u0022D:\\Controle de Acesso.xlsx\u0022);\r\n            string outFile = Path.GetFullPath(@\u0022D:\\Result.txt\u0022);\r\n            int ret = u.InitExcel();\r\n            if (ret == 1)\r\n            {\r\n                Console.WriteLine(\u0022Error! Can\u0027t load MS Excel library in memory\u0022);\r\n                return;\r\n            }\r\n\r\n            ret = u.ConvertFile(inpFile, outFile, SautinSoft.UseOffice.eDirection.XLS_to_TEXT);\r\n\r\n            u.CloseExcel();\r\n\r\n            string text = File.ReadAllText(@\u0022D:\\Result.txt\u0022);\r\n            text = text.Replace(\u0022\t\u0022, \u0022:\u0022);\r\n            text = text.Replace(\u0022.\u0022, \u0022\u0022);\r\n            text = text.Replace(\u0022-\u0022, \u0022\u0022);\r\n            //var lines2 = File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            //File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines2.Skip(1).ToArray());\r\n\r\n            File.WriteAllText(@\u0022D:\\teste.txt\u0022, text);\r\n\r\n            string text2 = File.ReadAllText(@\u0022D:\\teste.txt\u0022);\r\n            text2 = text2.Replace(\u0022::\u0022, \u0022:\u0022);\r\n            text2 = text2.Replace(\u0022::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022:::::::::::::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022:::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022::::::\u0022, \u0022:\u0022); //:::::::::::::::\r\n            text2 = text2.Replace(\u0022::\u0022, \u0022:\u0022);\r\n            text2 = text2.Replace(\u0022-\u0022, \u0022\u0022);\r\n            text2 = text2.ToUpper(new CultureInfo(\u0022en-US\u0022, false));\r\n            File.WriteAllText(@\u0022D:\\teste3.txt\u0022, text2);\r\n            //var lines = File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            //File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1).ToArray());\r\n\r\n\r\n            var lines = System.IO.File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            System.IO.File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1));\r\n            lines = System.IO.File.ReadAllLines(@\u0022D:\\teste3.txt\u0022);\r\n            System.IO.File.WriteAllLines(@\u0022D:\\teste3.txt\u0022, lines.Skip(1));\r\n            //  RemoveFirstLinesFromFile(@\u0022D:\\teste3.txt\u0022,1);\r\n            String palavra = File.ReadAllText(@\u0022D:\\teste3.txt\u0022);\r\n            File.WriteAllText(@\u0022C:\\compartilhamento\\data_txt\\data2.txt\u0022, palavra);\r\n            MessageBox.Show(\u0022Update concluido com sucesso!\u0022);\r\n        }\r\n\r\n        private void button48_Click(object sender, EventArgs e)\r\n        {\r\n            /*\r\n           using ClosedXML.Excel;\r\n\r\n           using var wbook = new XLWorkbook(\u0022simple.xlsx\u0022);\r\n\r\n           var ws1 = wbook.Worksheet(1);\r\n           var data = ws1.Cell(\u0022A1\u0022).GetValue\u003Cstring\u003E();\r\n           */\r\n            //ID Capacete  Identifica\u00E7\u00E3o\tEmpresa\tNome Completo\t\tIdentidade\tCPF\tEmail\tFun\u00E7\u00E3o\tData  ASO\tData dose 1\tData dose 2\tData Refor\u00E7o 1\tData Refor\u00E7o 2\r\n\r\n            Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();\r\n            if (xlApp == null)\r\n\r\n            {\r\n                MessageBox.Show(\u0022Excel is not properly installed!!\u0022);\r\n                return;\r\n            }\r\n\r\n            Excel.Workbook xlWorkBook;\r\n            Excel.Worksheet xlWorkSheet;\r\n\r\n\r\n            object misValue = System.Reflection.Missing.Value;\r\n\r\n            xlWorkBook = xlApp.Workbooks.Add(misValue);\r\n\r\n            xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);\r\n            var plan = xlWorkBook.Worksheets[\u0022Planilha1\u0022];\r\n            plan.Cells.Style.HorizontalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n            plan.Cells.Style.VerticalAlignment = Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter;\r\n            //ws.Ranges(\u0022C5, F5:G8\u0022).Style.Fill.BackgroundColor = XLColor.Gray;\r\n            // xlWorkSheet.Rows.AutoFit();\r\n            xlWorkSheet.Cells[1, 1] = \u0022ID Capacete  Identifica\u00E7\u00E3o\u0022;\r\n            xlWorkSheet.Cells[1, 1].EntireColumn.ColumnWidth = 35;\r\n            xlWorkSheet.Cells[1, 1].RowHeight = 50;\r\n            xlWorkSheet.Range[\u0022B1:M1\u0022].Interior.Color = Color.FromArgb(91, 155, 213);// System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightBlue);\r\n                                                                                     // xlWorkSheet.Range[\u0022A1:M1\u0022].Rows;\r\n            xlWorkSheet.Cells[1, 2] = \u0022Empresa\u0022;\r\n            xlWorkSheet.Cells[1, 3] = \u0022Nome Completo\u0022;\r\n            xlWorkSheet.Cells[1, 4] = \u0022Identidade\u0022;\r\n            xlWorkSheet.Cells[1, 5] = \u0022CPF\u0022;\r\n            xlWorkSheet.Cells[1, 6] = \u0022Email\u0022;\r\n            xlWorkSheet.Cells[1, 7] = \u0022Fun\u00E7\u00E3o\u0022;\r\n            xlWorkSheet.Cells[1, 8] = \u0022Data  ASO\u0022;\r\n            xlWorkSheet.Cells[1, 9] = \u0022Data  NR34\u0022;\r\n            xlWorkSheet.Cells[1, 10] = \u0022Data dose 1\u0022;\r\n            xlWorkSheet.Cells[1, 11] = \u0022Data dose 2\u0022;\r\n            xlWorkSheet.Cells[1, 12] = \u0022Data Refor\u00E7o 1\u0022;\r\n            xlWorkSheet.Cells[1, 13] = \u0022Data Refor\u00E7o 2\u0022;\r\n            Excel.Range _range;\r\n\r\n            _range = xlWorkSheet.get_Range(\u0022B1\u0022, \u0022M2000\u0022);\r\n\r\n            //Get the borders collection.\r\n\r\n            Excel.Borders borders = _range.Borders;\r\n\r\n            //Set the hair lines style.\r\n\r\n            borders.LineStyle = Excel.XlLineStyle.xlContinuous;\r\n\r\n            borders.Weight = 2d;\r\n\r\n            xlWorkSheet.Columns.AutoFit();\r\n\r\n            xlWorkBook.SaveAs(\u0022d:\\\\Controle de Acesso_backup.xls\u0022, Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);\r\n            xlWorkBook.Close(true, misValue, misValue);\r\n            xlApp.Quit();\r\n            Marshal.ReleaseComObject(xlWorkSheet);\r\n            Marshal.ReleaseComObject(xlWorkBook);\r\n            Marshal.ReleaseComObject(xlApp);\r\n            MessageBox.Show(\u0022Excel file created , you can find the file d:\\\\Controle de Acesso_backup.xls\u0022);\r\n\r\n            //panel15.Visible = false;\r\n        }\r\n\r\n        private void panel11_Paint(object sender, PaintEventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer5_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void pictureBox4_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer11_Tick(object sender, EventArgs e)\r\n        {\r\n           \r\n           // timer11.Stop();\r\n        }\r\n\r\n        private void timer11_Tick_1(object sender, EventArgs e)\r\n        {\r\n            \r\n        }\r\n\r\n        private void timer12_Tick(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer11_Tick_2(object sender, EventArgs e)\r\n        {\r\n            Ping pingClass = new Ping();\r\n            PingReply pingReply = pingClass.Send(textBox18.Text.Trim());\r\n            label65.Text = (pingReply.RoundtripTime.ToString())\u002B \u0022 ms\u0022;\r\n            //\u002B \u0022ms\u0022);\r\n           // label64.Text = (pingReply.Status.ToString());\r\n        }\r\n\r\n        private void label61_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button24_Click(object sender, EventArgs e)\r\n        {\r\n            if (textBox18.Text != \u0022\u0022) {\r\n                if (timer11.Enabled == false)\r\n                {\r\n                    button24.Text = \u0022PING ON\u0022;\r\n                    timer11.Enabled = true;\r\n                }\r\n                else\r\n                {\r\n                    button24.Text = \u0022PING OFF\u0022;\r\n                    timer11.Enabled = false;\r\n                    label65.Text = \u0022\u0022;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void label65_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer12_Tick_1(object sender, EventArgs e)\r\n        {\r\n            DateTime fdataa = File.GetLastWriteTime(@\u0022C:\\compartilhamento\\data_txt\\data.txt\u0022);\r\n            if (pega == false)\r\n            {\r\n                DateTime fdatab = fdataa;\r\n                pega = true;\r\n            }\r\n\r\n\r\n\r\n            if (fdatab != fdataa)\r\n            {\r\n                ler_linha();\r\n                pega = false;\r\n            }\r\n        }\r\n\r\n        private void button48_Click_1(object sender, EventArgs e)\r\n        {\r\n            String data_new;\r\n            String data2_new;\r\n            if (dateTimePicker1.Visible == true)\r\n            {\r\n                data_new = dateTimePicker1.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data_new = richTextBox6.Text.Trim();\r\n            }\r\n            if (dateTimePicker2.Visible == true)\r\n            {\r\n                data2_new = dateTimePicker2.Value.ToString(\u0022dd/MM/yyyy\u0022).ToString().Trim();\r\n            }\r\n            else\r\n            {\r\n                data2_new = richTextBox7.Text.Trim();\r\n            }\r\n            richTextBox1.Text = \u0022 VISITANTE  \u0022\u002BrichTextBox1.Text ;\r\n            data2 = number \u002B \u0022 \u0022 \u002B richTextBox16.Text \u002B \u0022\\r\\n\u0022 \u002B nome \u002B \u0022 \u0022 \u002B richTextBox2.Text \u002B \u0022\\r\\n\u0022 \u002B emp \u002B \u0022 \u0022 \u002B \u0022VISITANTE \u0022 \u002B richTextBox1.Text \u002B \u0022 \\r\\n\u0022 \u002B function \u002B \u0022 \u0022 \u002B richTextBox3.Text \u002B \u0022\\r\\n\u0022 \u002B id \u002B \u0022 \u0022 \u002B\r\n         this.richTextBox4.Text \u002B \u0022\\r\\n\u0022 \u002B email \u002B \u0022 \u0022 \u002B this.richTextBox8.Text \u002B \u0022\\r\\n\u0022 \u002B vessel \u002B \u0022 \u0022 \u002B this.comboBox1.Text.Trim() \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox9.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox10.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox11.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox12.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox13.Text \u002B \u0022\\r\\n\u0022 \u002B this.richTextBox14.Text \u002B \u0022\\r\\n\u0022 \u002B\r\n         initial \u002B \u0022 \u0022 \u002B data_new \u002B \u0022\\r\\n\u0022 \u002B\r\n         final \u002B \u0022 \u0022 \u002B data2_new \u002B \u0022\\r\\n\u0022 \u002B path3 \u002B \u0022\\r\\n\u0022 \u002B local1val \u002B \u0022\\r\\n\u0022 \u002B local2val \u002B \u0022\\r\\n\u0022 \u002B local3val \u002B \u0022\\r\\n\u0022 \u002B local4val \u002B \u0022\\r\\n\u0022 \u002B levelyellow \u002B \u0022\\r\\n\u0022 \u002B levelgreen \u002B \u0022\\r\\n\u0022 \u002B levelred;\r\n            MessageBox.Show(data2);\r\n        }\r\n\r\n        private void bindingSource1_CurrentChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void bindingSource2_CurrentChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button49_Click_1(object sender, EventArgs e)\r\n\r\n        {\r\n            if (richTextBox18.Text != \u0022\u0022)\r\n            {\r\n                imprime_novo();\r\n                button1.PerformClick();\r\n                richTextBox18.Text = \u0022\u0022;\r\n            }\r\n            //create_qrcode_invited_new(); ;// cadastrar_invited()\r\n            //  cadastrar_invited();\r\n        }\r\n\r\n        private void label1_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void button31_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void InsertQueue\u003CT\u003E(T data, string collectionName)\r\n        {\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var collection = db.GetCollection\u003CT\u003E(collectionName);\r\n                collection.Insert(data);\r\n            }\r\n        }\r\n\r\n\r\n        private List\u003CUsuario\u003E GetAll()\r\n        {\r\n            var list = new List\u003CUsuario\u003E();\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var col = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n                foreach (Usuario _id in col.FindAll())\r\n                {\r\n                    list.Add(_id);\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n\r\n        public void DisplayPresetData()\r\n        {\r\n            dataGridView1.Size = new System.Drawing.Size(1693, 800);\r\n            dataGridView1.DataSource = GetAll();\r\n            this.dataGridView1.DefaultCellStyle.ForeColor = Color.White;\r\n            this.dataGridView1.DefaultCellStyle.BackColor = Color.FromArgb(51, 51, 76);\r\n\r\n            // Allow user to order columns\r\n            dataGridView1.AllowUserToOrderColumns = true;\r\n\r\n            // Enable sorting on all columns\r\n            foreach (DataGridViewColumn column in dataGridView1.Columns)\r\n            {\r\n                column.SortMode = DataGridViewColumnSortMode.Automatic;\r\n            }\r\n\r\n            dataGridView1.Visible = true;\r\n        }\r\n\r\n        private void change()\r\n        {\r\n            //string connectionString = \u0022banco.db\u0022; // Update with your database file path\r\n\r\n            using (var db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022))\r\n            {\r\n                var usuariocollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022); // Update with your collection name\r\n                var usuario = usuariocollection.FindOne(x =\u003E x.Number.ToString().Contains(\u002233\u0022));\r\n                usuario.Name = \u0022fabio\u0022;\r\n                usuario.Company = \u0022teste\u0022;\r\n                usuariocollection.Update(usuario);\r\n            }\r\n\r\n        }\r\n        //1- ler o QR e extrai os dados do usuario\r\n        //2 - Parse dos campo e atribui a um novo User()\r\n        //3 - Envia esse novo User() populado ao add_data()\r\n        private void add_data()\r\n        {\r\n            NUM = NUM \u002B 1;\r\n            Usuario usuario = new Usuario(NUM, \u0022ALEX\u0022, \u0022Googlemarine\u0022, \u0022 4\u0022, 111098414, \u0022 5\u0022, \u0022 6\u0022, \u0022 7\u0022, \u0022 8\u0022, \u0022 9 \u0022, \u002210\u0022, \u0022 11\u0022, \u002212 \u0022, \u002213\u0022, \u002214 \u0022, \u002215 \u0022, \u0022 16\u0022, \u0022 17\u0022, \u0022 18 \u0022, \u002219 \u0022, \u002220 \u0022, \u0022 21 \u0022, \u002222 \u0022, \u002223\u0022);\r\n            InsertQueue(usuario, \u0022usuario\u0022);\r\n        }\r\n\r\n        private void add_data2(Usuario usuario)\r\n        {\r\n            InsertQueue(usuario, \u0022usuario\u0022);\r\n        }\r\n\r\n        private void get_last()\r\n        {\r\n            string connectionString = @\u0022C:\\compartilhamento\\dados\\banco.db\u0022; // Updated database file path\r\n\r\n            using (var db = new LiteDatabase(connectionString))\r\n            {\r\n                var collection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n\r\n                var lastData = collection.Query()\r\n                    .OrderByDescending(x =\u003E x.Number)\r\n                    .FirstOrDefault();\r\n\r\n                if (lastData != null)\r\n                {\r\n                    textBox1.Text = $\u0022Numero: {lastData.Number},Nome: {lastData.Name}, Empresa: {lastData.Company},Identidade: {lastData.Id_number}\u0022;\r\n                    NUM = lastData.Number;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void AddOrUpdateCadastroData(Cadastro cadastro)\r\n        {\r\n            InsertQueue(cadastro, \u0022cadastro\u0022);\r\n        }\r\n\r\n        private void UpdateDataGridView()\r\n        {\r\n            \r\n            Console.WriteLine(\u0022UpdateDataGridView triggered.\u0022);\r\n\r\n            var allData = GetAll();  // Step 1: Get all data\r\n            Console.WriteLine($\u0022Initial Count: {allData.Count}\u0022);\r\n\r\n            string filterString = dataGridView1.FilterString;\r\n            string sortString = dataGridView1.SortString;\r\n            Console.WriteLine(filterString);\r\n            Console.WriteLine(\u0022Filter String: \u0022 \u002B filterString);\r\n            Console.WriteLine(\u0022Sort String: \u0022 \u002B sortString);\r\n\r\n            // Handling filtering based on the specific format from DataGridView\r\n            if (!string.IsNullOrEmpty(filterString))\r\n            {\r\n                // Filter by Name\r\n                var nameMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Name\\] IN \\((.*?)\\)\u0022);\r\n                if (nameMatch.Success)\r\n                {\r\n                    var names = nameMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Names for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, names));\r\n                    allData = allData.Where(u =\u003E names.Contains(u.Name)).ToList();\r\n                }\r\n\r\n                // Filter by Company\r\n                var companyMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Company\\] IN \\((.*?)\\)\u0022);\r\n                if (companyMatch.Success)\r\n                {\r\n                    var companies = companyMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Companies for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, companies));\r\n                    allData = allData.Where(u =\u003E companies.Contains(u.Company)).ToList();\r\n                }\r\n\r\n                // Filter by Function\r\n                var functionMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Function\\] IN \\((.*?)\\)\u0022);\r\n                if (functionMatch.Success)\r\n                {\r\n                    var functions = functionMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Functions for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, functions));\r\n                    allData = allData.Where(u =\u003E functions.Contains(u.Function)).ToList();\r\n                }\r\n                \r\n                //Filter by Vessel\r\n                var vesselMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Vessel\\] IN \\((.*?)\\)\u0022);\r\n                if (vesselMatch.Success)\r\n                {\r\n                    var vessels = vesselMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Vessels for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, vessels));\r\n                    allData = allData.Where(u =\u003E vessels.Contains(u.Vessel)).ToList();\r\n                }\r\n\r\n                //Filter by Local\r\n                var localMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Local\\] IN \\((.*?)\\)\u0022);\r\n                if (localMatch.Success)\r\n                {\r\n                    var local = localMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, local));\r\n                    allData = allData.Where(u =\u003E local.Contains(u.Local)).ToList();\r\n                }\r\n\r\n                //Filter by Checked_in_val\r\n                var checkedInValMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Checked_in_val\\] IN \\((.*?)\\)\u0022);\r\n                if (checkedInValMatch.Success)\r\n                {\r\n                    var checkedInVal = checkedInValMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkedInValMatch));\r\n                    allData = allData.Where(u =\u003E checkedInVal.Contains(u.Checked_in_val)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_val\r\n                var checkOutValMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_val\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutValMatch.Success)\r\n                {\r\n                    var checkOutVal = checkOutValMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutValMatch));\r\n                    allData = allData.Where(u =\u003E checkOutVal.Contains(u.Check_out_val)).ToList();\r\n                }\r\n\r\n                //Filter by Check_in_data\r\n                var checkInDataMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_in_data\\] IN \\((.*?)\\)\u0022);\r\n                if (checkInDataMatch.Success)\r\n                {\r\n                    var checkInData = checkInDataMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkInDataMatch));\r\n                    allData = allData.Where(u =\u003E checkInData.Contains(u.Check_in_data)).ToList();\r\n                }\r\n\r\n                //Filter by Check_in_hora\r\n                var checkInHoraMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_in_hora\\] IN \\((.*?)\\)\u0022);\r\n                if (checkInHoraMatch.Success)\r\n                {\r\n                    var checkInHora = checkInHoraMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkInHoraMatch));\r\n                    allData = allData.Where(u =\u003E checkInHora.Contains(u.Check_in_hora)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_data\r\n                var checkOutDataMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_data\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutDataMatch.Success)\r\n                {\r\n                    var checkOutData = checkOutDataMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutDataMatch));\r\n                    allData = allData.Where(u =\u003E checkOutData.Contains(u.Check_out_data)).ToList();\r\n                }\r\n\r\n                //Filter by Check_out_hora\r\n                var checkOutHoraMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Check_out_hora\\] IN \\((.*?)\\)\u0022);\r\n                if (checkOutHoraMatch.Success)\r\n                {\r\n                    var checkOutHora = checkOutHoraMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Local for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, checkOutHoraMatch));\r\n                    allData = allData.Where(u =\u003E checkOutHora.Contains(u.Check_out_hora)).ToList();\r\n                }\r\n\r\n                //Filter by Projec\r\n                var projecMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Projec\\] IN \\((.*?)\\)\u0022);\r\n                if (projecMatch.Success)\r\n                {\r\n                    var projec = projecMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Projec for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, projec));\r\n                    allData = allData.Where(u =\u003E projec.Contains(u.Projec)).ToList();\r\n                }\r\n\r\n                //Filter by Aso\r\n                var asoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Aso\\] IN \\((.*?)\\)\u0022);\r\n                if (asoMatch.Success)\r\n                {\r\n                    var aso = asoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Aso for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, aso));\r\n                    allData = allData.Where(u =\u003E aso.Contains(u.Aso)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_34\r\n                var nr34Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_34\\] IN \\((.*?)\\)\u0022);\r\n                if (nr34Match.Success)\r\n                {\r\n                    var nr34 = nr34Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_34 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr34));\r\n                    allData = allData.Where(u =\u003E nr34.Contains(u.Nr_34)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_10\r\n                var nr10Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_10\\] IN \\((.*?)\\)\u0022);\r\n                if (nr10Match.Success)\r\n                {\r\n                    var nr10 = nr10Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_10 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr10));\r\n                    allData = allData.Where(u =\u003E nr10.Contains(u.Nr_10)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_33\r\n                var nr33Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_33\\] IN \\((.*?)\\)\u0022);\r\n                if (nr33Match.Success)\r\n                {\r\n                    var nr33 = nr33Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_33 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr33));\r\n                    allData = allData.Where(u =\u003E nr33.Contains(u.Nr_33)).ToList();\r\n                }\r\n\r\n                //Filter by Nr_35\r\n                var nr35Match = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Nr_35\\] IN \\((.*?)\\)\u0022);\r\n                if (nr35Match.Success)\r\n                {\r\n                    var nr35 = nr35Match.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Nr_35 for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, nr35));\r\n                    allData = allData.Where(u =\u003E nr35.Contains(u.Nr_35)).ToList();\r\n                }\r\n\r\n                //Filter by Motivo\r\n                var motivoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Motivo\\] IN \\((.*?)\\)\u0022);\r\n                if (motivoMatch.Success)\r\n                {\r\n                    var motivo = motivoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Motivo for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, motivo));\r\n                    allData = allData.Where(u =\u003E motivo.Contains(u.Motivo)).ToList();\r\n                }\r\n\r\n                //Filter by Level\r\n                var levelMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Level\\] IN \\((.*?)\\)\u0022);\r\n                if (levelMatch.Success)\r\n                {\r\n                    var level = levelMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Level for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, level));\r\n                    allData = allData.Where(u =\u003E level.Contains(u.Level)).ToList();\r\n                }\r\n\r\n                //Filter by Estado\r\n                var estadoMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[Estado\\] IN \\((.*?)\\)\u0022);\r\n                if (estadoMatch.Success)\r\n                {\r\n                    var estado = estadoMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed Estado for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, estado));\r\n                    allData = allData.Where(u =\u003E estado.Contains(u.Estado)).ToList();\r\n                }\r\n\r\n                //Filter by User\r\n                var userMatch = System.Text.RegularExpressions.Regex.Match(filterString, @\u0022\\[User\\] IN \\((.*?)\\)\u0022);\r\n                if (userMatch.Success)\r\n                {\r\n                    var user = userMatch.Groups[1].Value.Split(new[] { \u0022, \u0022 }, StringSplitOptions.None).Select(n =\u003E n.Trim(\u0027\\\u0027\u0027)).ToList();\r\n                    Console.WriteLine(\u0022Parsed User for Filtering: \u0022 \u002B string.Join(\u0022, \u0022, user));\r\n                    allData = allData.Where(u =\u003E user.Contains(u.User)).ToList();\r\n                }\r\n\r\n\r\n            }\r\n\r\n            // Sorting logic\r\n            if (!string.IsNullOrEmpty(sortString))\r\n            {\r\n                if (sortString.Contains(\u0022[Number]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Number).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Number).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Name]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Name).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Name).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Company]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Company).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Company).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Vessel]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Vessel).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Vessel).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Function]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Function).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Function).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Level]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Level).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Level).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Id_number]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Id_number).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Id_number).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Email]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Email).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Email).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Checked_in_val]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Checked_in_val).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Checked_in_val).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_val]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_val).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_val).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_in_data]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_in_data).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_in_data).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_in_hora]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_in_hora).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_in_hora).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_data]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_data).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_data).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Check_out_hora]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Check_out_hora).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Check_out_hora).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Projec]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Projec).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Projec).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Aso]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Aso).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Aso).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_34]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_34).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_34).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_10]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_10).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_10).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_33]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_33).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_33).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Nr_35]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Nr_35).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Nr_35).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Estado]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Estado).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Estado).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[Motivo]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.Motivo).ToList() :\r\n                              allData.OrderBy(u =\u003E u.Motivo).ToList();\r\n                }\r\n                else if (sortString.Contains(\u0022[User]\u0022))\r\n                {\r\n                    allData = sortString.Contains(\u0022DESC\u0022) ?\r\n                              allData.OrderByDescending(u =\u003E u.User).ToList() :\r\n                              allData.OrderBy(u =\u003E u.User).ToList();\r\n                }\r\n\r\n            }\r\n\r\n            Console.WriteLine($\u0022Filtered and Sorted Object Count: {allData.Count}\u0022);\r\n\r\n            // Update the DataGridView\r\n            dataGridView1.DataSource = allData;\r\n\r\n            \r\n            Console.WriteLine(filterString);\r\n        }\r\n\r\n\r\n\r\n        private void dataGridView1_SortStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.SortEventArgs e)\r\n        {\r\n            UpdateDataGridView();\r\n        }\r\n\r\n        private void dataGridView1_FilterStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.FilterEventArgs e)\r\n        {\r\n             UpdateDataGridView();\r\n        }\r\n      \r\n\r\n\r\n\r\n        private void Create_DB()\r\n        {\r\n            //make dir C:\\compartilhamento\\dados if not exist\r\n            if (!Directory.Exists(@\u0022C:\\compartilhamento\\dados\u0022))\r\n            {\r\n                Directory.CreateDirectory(@\u0022C:\\compartilhamento\\dados\u0022);\r\n            }\r\n\r\n\r\n            LiteDatabase db = new LiteDatabase(@\u0022C:\\compartilhamento\\dados\\banco.db\u0022);\r\n            //create Usuario collection\r\n            var usuarioCollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n            var cadastroCollection = db.GetCollection\u003CCadastro\u003E(\u0022cadastro\u0022);\r\n            //popuplate Usuario collection\r\n         //usuarioCollection.Insert(new Usuario(1, \u0022ALEX\u0022, \u0022Googlemarine\u0022, \u0022 4\u0022, 111098414, \u0022 5\u0022, \u0022 6\u0022, \u0022 7\u0022, \u0022 8\u0022, \u0022 9 \u0022, \u002210\u0022, \u0022 11\u0022, \u002212 \u0022, \u002213\u0022, \u002214 \u0022, \u002215 \u0022, \u0022 16\u0022, \u0022 17\u0022, \u0022 18 \u0022, \u002219 \u0022, \u002220 \u0022, \u0022 21 \u0022, \u002222 \u0022, \u002223\u0022));  \r\n            hasDb = true;\r\n            db.Dispose();\r\n        }\r\n\r\n   \r\n\r\n        private async void button50_Click_1(object sender, EventArgs e)\r\n        {\r\n            //synch_db(rede1.Trim());\r\n            /*\r\n           QRCodeEncryptor = new QRCodeEncryptor();\r\n            string originalText = \u0022Texto que ser\u00E1 criptografado e depois descriptografado.\u0022;\r\n\r\n            // Criptografa o texto\r\n            string encryptedText = QRCodeEncryptor.EncryptQRCode(originalText);\r\n            Console.WriteLine(\u0022Texto criptografado: \u0022 \u002B encryptedText);\r\n\r\n            // Descriptografa o texto\r\n            string decryptedText = QRCodeEncryptor.DecryptQRCode(encryptedText);\r\n            Console.WriteLine(\u0022Texto descriptografado: \u0022 \u002B decryptedText);\r\n            */\r\n\r\n\r\n            // Supondo que o endere\u00E7o IP da rede local \u00E9 192.168.0.*\r\n            // Supondo que o endere\u00E7o IP da rede local \u00E9 192.168.0.*\r\n            string baseIP = \u0022190.168.0.\u0022;\r\n\r\n            // Executar as tarefas em paralelo para acelerar o processo.\r\n            var tasks = new Task[255];\r\n\r\n            for (int i = 1; i \u003C= 254; i\u002B\u002B)\r\n            {\r\n                string ip = baseIP \u002B i.ToString();\r\n                tasks[i - 1] = PingAsync(ip);\r\n            }\r\n\r\n            await Task.WhenAll(tasks);\r\n        }\r\n        private async Task PingAsync(string ip)\r\n        {\r\n            Ping ping = new Ping();\r\n            PingReply reply = await ping.SendPingAsync(ip, 1000); // Timeout de 1000 ms\r\n            if (reply.Status == IPStatus.Success)\r\n            {\r\n                // Aqui voc\u00EA pode adicionar o IP a uma lista, ou fazer algo com ele.\r\n                Console.WriteLine($\u0022M\u00E1quina ativa encontrada em: {ip}\u0022);\r\n            }\r\n        }\r\n        private void richTextBox12_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void lbustter_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void lv1_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void label18_Click(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void richTextBox18_MouseDoubleClick(object sender, MouseEventArgs e)\r\n        {\r\n            button28.PerformClick();\r\n            if (richTextBox18.Text != \u0022\u0022)\r\n            {\r\n                richTextBox16.Text = richTextBox18.Text;\r\n                richTextBox6.Text = \u0022\u0022;\r\n                richTextBox7.Text = \u0022\u0022;\r\n                richTextBox15.Text = \u0022\u0022;\r\n                label37.Text = \u0022\u0022;\r\n                local1.Checked = false;\r\n                local2.Checked = false;\r\n                local3.Checked = false;\r\n                dateTimePicker1.Visible = false;\r\n                dateTimePicker2.Visible = false;\r\n                check_if_exist_number2();\r\n                \r\n            }\r\n        }\r\n\r\n        private void richTextBox18_TextChanged(object sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        private void timer13_Tick(object sender, EventArgs e)\r\n        {\r\n            try\r\n            {\r\n                textBox22.Text = \u0022\u0022;\r\n                textBox22.Text = rede \u002B \u0022 On-Line\u0022;\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic class DatabaseExporter\r\n{\r\n    public void ExportDataToExcel(string dbPath, string excelFilePath)\r\n    {\r\n        using (var db = new LiteDatabase(dbPath))\r\n        {\r\n            var usuarioCollection = db.GetCollection\u003CUsuario\u003E(\u0022usuario\u0022);\r\n            var allUsuarios = usuarioCollection.FindAll().ToList();\r\n\r\n            using (var workbook = new XLWorkbook())\r\n  \r\n            {\r\n                var worksheet = workbook.Worksheets.Add(\u0022Usuarios\u0022);\r\n                worksheet.Cell(1, 1).Value = \u0022Number\u0022;\r\n                worksheet.Cell(1, 2).Value = \u0022Name\u0022;\r\n                worksheet.Cell(1, 3).Value = \u0022Company\u0022;\r\n                worksheet.Cell(1, 4).Value = \u0022Function\u0022;\r\n                worksheet.Cell(1, 5).Value = \u0022Id_number\u0022;\r\n                worksheet.Cell(1, 6).Value = \u0022Email\u0022;\r\n                worksheet.Cell(1, 7).Value = \u0022Vessel\u0022;\r\n                worksheet.Cell(1, 8).Value = \u0022Checked_in_val\u0022;\r\n                worksheet.Cell(1, 9).Value = \u0022Check_out_val\u0022;\r\n                worksheet.Cell(1, 10).Value = \u0022Check_in_data\u0022;\r\n                worksheet.Cell(1, 11).Value = \u0022Check_in_hora\u0022;\r\n                worksheet.Cell(1, 12).Value = \u0022Check_out_data\u0022;\r\n                worksheet.Cell(1, 13).Value = \u0022Check_out_hora\u0022;\r\n                worksheet.Cell(1, 14).Value = \u0022Projec\u0022;\r\n                worksheet.Cell(1, 15).Value = \u0022Aso\u0022;\r\n                worksheet.Cell(1, 16).Value = \u0022Nr_34\u0022;\r\n                worksheet.Cell(1, 17).Value = \u0022Nr_10\u0022;\r\n                worksheet.Cell(1, 18).Value = \u0022Nr_33\u0022;\r\n                worksheet.Cell(1, 19).Value = \u0022Nr_35\u0022;\r\n                worksheet.Cell(1, 20).Value = \u0022Local\u0022;\r\n                worksheet.Cell(1, 21).Value = \u0022Level\u0022;\r\n                worksheet.Cell(1, 22).Value = \u0022Estado\u0022;\r\n                worksheet.Cell(1, 23).Value = \u0022Motivo\u0022;\r\n                worksheet.Cell(1, 24).Value = \u0022User\u0022;\r\n                \r\n\r\n                for (int i = 0; i \u003C allUsuarios.Count; i\u002B\u002B)\r\n                {\r\n                    var usuario = allUsuarios[i];\r\n                    worksheet.Cell(i \u002B 2, 1).Value = usuario.Number;\r\n                    worksheet.Cell(i \u002B 2, 2).Value = usuario.Name;\r\n                    worksheet.Cell(i \u002B 2, 3).Value = usuario.Company;\r\n                    worksheet.Cell(i \u002B 2, 4).Value = usuario.Function;\r\n                    worksheet.Cell(i \u002B 2, 5).Value = usuario.Id_number;\r\n                    worksheet.Cell(i \u002B 2, 6).Value = usuario.Email;\r\n                    worksheet.Cell(i \u002B 2, 7).Value = usuario.Vessel;\r\n                    worksheet.Cell(i \u002B 2, 8).Value = usuario.Checked_in_val;\r\n                    worksheet.Cell(i \u002B 2, 9).Value = usuario.Check_out_val;\r\n                    worksheet.Cell(i \u002B 2, 10).Value = usuario.Check_in_data;\r\n                    worksheet.Cell(i \u002B 2, 11).Value = usuario.Check_in_hora;\r\n                    worksheet.Cell(i \u002B 2, 12).Value = usuario.Check_out_data;\r\n                    worksheet.Cell(i \u002B 2, 13).Value = usuario.Check_out_hora;\r\n                    worksheet.Cell(i \u002B 2, 14).Value = usuario.Projec;\r\n                    worksheet.Cell(i \u002B 2, 15).Value = usuario.Aso;\r\n                    worksheet.Cell(i \u002B 2, 16).Value = usuario.Nr_34;\r\n                    worksheet.Cell(i \u002B 2, 17).Value = usuario.Nr_10;\r\n                    worksheet.Cell(i \u002B 2, 18).Value = usuario.Nr_33;\r\n                    worksheet.Cell(i \u002B 2, 19).Value = usuario.Nr_35;\r\n                    worksheet.Cell(i \u002B 2, 20).Value = usuario.Local;\r\n                    worksheet.Cell(i \u002B 2, 21).Value = usuario.Level;\r\n                    worksheet.Cell(i \u002B 2, 22).Value = usuario.Estado;\r\n                    worksheet.Cell(i \u002B 2, 23).Value = usuario.Motivo;\r\n                    worksheet.Cell(i \u002B 2, 24).Value = usuario.User;\r\n                }\r\n\r\n                workbook.SaveAs(excelFilePath);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic class NetworkConnection : IDisposable\r\n{\r\n    string _networkName;\r\n\r\n    public NetworkConnection(string networkName, NetworkCredential credentials)\r\n    {\r\n        _networkName = networkName;\r\n\r\n        var netResource = new NetResource()\r\n        {\r\n            Scope = ResourceScope.GlobalNetwork,\r\n            ResourceType = ResourceType.Disk,\r\n            DisplayType = ResourceDisplaytype.Share,\r\n            RemoteName = networkName\r\n        };\r\n\r\n        var result = WNetAddConnection2(netResource, credentials.Password, credentials.UserName, 0);\r\n\r\n        if (result != 0)\r\n        {\r\n         \r\n        }\r\n    }\r\n\r\n    ~NetworkConnection()\r\n    {\r\n        Dispose(false);\r\n    }\r\n\r\n    public void Dispose()\r\n    {\r\n        Dispose(true);\r\n        GC.SuppressFinalize(this);\r\n    }\r\n\r\n    protected virtual void Dispose(bool disposing)\r\n    {\r\n        WNetCancelConnection2(_networkName, 0, true);\r\n    }\r\n\r\n    [DllImport(\u0022mpr.dll\u0022)]\r\n    private static extern int WNetAddConnection2(NetResource netResource, string password, string username, int flags);\r\n\r\n    [DllImport(\u0022mpr.dll\u0022)]\r\n    private static extern int WNetCancelConnection2(string name, int flags, bool force);\r\n\r\n    [StructLayout(LayoutKind.Sequential)]\r\n    public class NetResource\r\n    {\r\n        public ResourceScope Scope;\r\n        public ResourceType ResourceType;\r\n        public ResourceDisplaytype DisplayType;\r\n        public int Usage;\r\n        public string LocalName;\r\n        public string RemoteName;\r\n        public string Comment;\r\n        public string Provider;\r\n    }\r\n\r\n    public enum ResourceScope : int\r\n    {\r\n        Connected = 1,\r\n        GlobalNetwork,\r\n        Remembered,\r\n        Recent,\r\n        Context\r\n    };\r\n\r\n    public enum ResourceType : int\r\n    {\r\n        Any = 0,\r\n        Disk = 1,\r\n        Print = 2,\r\n        Reserved = 8,\r\n    }\r\n\r\n    public enum ResourceDisplaytype : int\r\n    {\r\n        Generic = 0x0,\r\n        Domain = 0x01,\r\n        Server = 0x02,\r\n        Share = 0x03,\r\n        File = 0x04,\r\n        Group = 0x05,\r\n        Network = 0x06,\r\n        Root = 0x07,\r\n        Shareadmin = 0x08,\r\n        Directory = 0x09,\r\n        Tree = 0x0a,\r\n        Ndscontainer = 0x0b\r\n    }\r\n}","Selections":[{"Caret":22150,"Start":21672,"End":33478}],"FilePath":"C:\\Cripto_qr_mult - Copia\\criptoqrcode_multi\\criptoqrcode\\Form1.cs","Language":"C#"}],"PreSelectedSkill":null,"CorrelationId":{"Guid":"2405e532-a316-460b-b3f2-27eff593922d"}}},"Response":{"Content":"This error could be caused by another process already using the LiteDB database file \u0060banco.db\u0060. \r\n\r\nWhen a database file is already being used by another process, any attempts to open or interact with the database file will result in this error. \r\n\r\nTo fix this issue, you can try closing any applications that might be using the \u0060banco.db\u0060 database file or ensure that the database connection is properly closed when it\u0027s no longer being used within your application. Additionally, you might also consider implementing a retry mechanism that will wait and try again if the database file is still locked by another process. \r\n\r\nIf the issue persists, you can try using a file locking utility like \u0060Unlocker\u0060 to manually release the lock on the \u0060banco.db\u0060 file. However, this should be used as a last resort and should only be done when you\u0027re sure that the file is not being accessed by any other process.","Type":0,"Status":1,"FollowUpPrompts":["How can I properly close the LiteDB database connection?","Can you explain more about implementing a retry mechanism?"]},"SelectedFunctionName":"Explain","LoggedSkillInvocations":null}
{"version":1,"Request":{"Prompt":"Help me analyze the current exception. Start with \u0022This error happens because\u0022 and concisely describe the error. Then, start with \u0022This might be happening because\u0022, think step by step and explain in less than 200 words why I am getting the error. There is more code in my application that might be contributing to the error. You can suggest a fix or tell me what additional information is needed to solve it.","Context":{"VisibleDocuments":[],"PreSelectedSkill":"VSSkill.ExplainException","CorrelationId":{"Guid":"3ad835c0-78e5-4603-9321-d694f81a1ff1"}}},"Response":{"Content":"This error happens because of a null reference exception. The exception message states that an object reference is not set to an instance of an object. This means that the code is trying to access a member of a null object, which is not allowed.\n\nThis might be happening because the \u0060rede2\u0060 variable is null when the \u0060GetLastWriteTime\u0060 method is called. The \u0060rede2\u0060 variable is used to construct the path to the file that is being checked for the last write time. If \u0060rede2\u0060 is null, then the path will be invalid and the method will throw a null reference exception.\n\nTo fix this issue, you should check if \u0060rede2\u0060 is null before calling the \u0060GetLastWriteTime\u0060 method. You can also add some error handling code to handle the case where \u0060rede2\u0060 is null. Additionally, you should check if the file exists before calling the \u0060GetLastWriteTime\u0060 method to avoid another exception.\n\nTo get more information about this error, you can try to reproduce it and provide the full stack trace. This will help you identify the exact line of code that is causing the issue.","Type":0,"Status":1,"FollowUpPrompts":["How can I check if \u0060rede2\u0060 is null?","How can I handle the case where \u0060rede2\u0060 is null?"]},"SelectedFunctionName":"ExplainException","LoggedSkillInvocations":null}
{"version":1,"Request":{"Prompt":"Help me analyze the current exception. Start with \u0022This error happens because\u0022 and concisely describe the error. Then, start with \u0022This might be happening because\u0022, think step by step and explain in less than 200 words why I am getting the error. There is more code in my application that might be contributing to the error. You can suggest a fix or tell me what additional information is needed to solve it.","Context":{"VisibleDocuments":[],"PreSelectedSkill":"VSSkill.ExplainException","CorrelationId":{"Guid":"412280f7-8a08-48af-ad6e-839a97e43982"}}},"Response":{"Content":"This error happens because an index was outside the bounds of the array. In other words, the code is trying to access an element of an array that does not exist. \r\n\r\nThis might be happening because the \u0060parts\u0060 array has less than 28 elements, and the code is trying to access an element that is not there. The \u0060parts\u0060 array is created by splitting the \u0060line\u0060 variable by the \u0060:\u0060 character. If the \u0060line\u0060 variable does not have at least 28 \u0060:\u0060 characters, the \u0060parts\u0060 array will have less than 28 elements. \r\n\r\nTo fix this error, you can add a check to make sure that the \u0060parts\u0060 array has at least 28 elements before accessing the elements. You can also add some logging to see what the value of the \u0060line\u0060 variable is when the error occurs. This will help you understand why the \u0060parts\u0060 array does not have enough elements.","Type":0,"Status":1,"FollowUpPrompts":["How can I add logging to my code?","Can you show me an example of how to check the length of an array before accessing its elements?"]},"SelectedFunctionName":"ExplainException","LoggedSkillInvocations":null}
{"version":1,"Request":{"Prompt":"Help me analyze the current exception. Start with \u0022This error happens because\u0022 and concisely describe the error. Then, start with \u0022This might be happening because\u0022, think step by step and explain in less than 200 words why I am getting the error. There is more code in my application that might be contributing to the error. You can suggest a fix or tell me what additional information is needed to solve it.","Context":{"VisibleDocuments":[],"PreSelectedSkill":"VSSkill.ExplainException","CorrelationId":{"Guid":"00fa6dd1-db3f-4490-9ff4-2987c81ef806"}}},"Response":{"Content":"This error happens because the index used to access the \u0060parts\u0060 array in the line \u0060var cadastro = new Cadastro(\u0060 is out of bounds. \r\n\r\nThis might be happening because the \u0060parts\u0060 array is not being validated correctly. The code is checking if the length of the \u0060parts\u0060 array is less than 28, but it should be checking if it is less than or equal to 34. This is because the \u0060Cadastro\u0060 constructor is expecting 20 parameters, plus 14 more for the remaining parts of the line. \r\n\r\nTo fix this, change the validation condition to \u0060if (parts.Length \u003C= 34)\u0060.\r\n\r\nAdditionally, it might be helpful to add some logging to the code to see which line is causing the exception. You can use \u0060Console.WriteLine($\u0022Error on line: {line}\u0022);\u0060 inside the \u0060foreach\u0060 loop to print out the line that is causing the error.","Type":0,"Status":1,"FollowUpPrompts":["How can I debug this error?","Can you explain how the \u0060Cadastro\u0060 constructor works?"]},"SelectedFunctionName":"ExplainException","LoggedSkillInvocations":null}
